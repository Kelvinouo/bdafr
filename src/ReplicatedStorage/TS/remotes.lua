-- Decompiled with the Synapse X Luau decompiler.

local v1 = require(game:GetService("ReplicatedStorage"):WaitForChild("rbxts_include"):WaitForChild("RuntimeLib"));
local v2 = v1.import(script, v1.getModule(script, "@rbxts", "net").out);
local l__t__3 = v1.import(script, v1.getModule(script, "@rbxts", "t").lib.ts).t;
local v4 = v1.import(script, game:GetService("ReplicatedStorage"), "TS", "net-middleware", "ratelimit");
local l__WrappedTypechecker__5 = v1.import(script, game:GetService("ReplicatedStorage"), "TS", "net-middleware", "wrapped-typechecker").WrappedTypechecker;
local v6 = {};
local v7 = {};
local l__RunService__1 = v1.import(script, v1.getModule(script, "@rbxts", "services")).RunService;
local l__Metric__2 = v1.import(script, v1.getModule(script, "@easy-games", "game-core").out).Metric;
local l__Flamework__3 = v1.import(script, v1.getModule(script, "@flamework", "core").out).Flamework;
v7[1] = v2.Middleware.Global(function(p1, p2, p3)
	if not p3 then
		return nil;
	end;
	if not l__RunService__1:IsServer() then
		return nil;
	end;
	local u4 = false;
	local function u5(p4)
		if type(p4) == "number" then
			if p4 ~= p4 then
				u4 = true;
			end;
			if math.abs(p4) == math.huge then
				u4 = true;
				return;
			end;
		elseif type(p4) == "table" then
			for v8, v9 in pairs(p4) do
				u5(v9);
			end;
		end;
	end;
	local v10, v11, v12 = ipairs(p2);
	while true do
		v10(v11, v12);
		if not v10 then
			break;
		end;
		v12 = v10;
		u5(v11);	
	end;
	if u4 then
		l__Flamework__3.resolveDependency("@easy-games/game-core:server/services/metrics-service@MetricsService"):publishMetric((l__Metric__2.new("flagged-remote-number-check"):tag("remote-name", p1):tag("place-version", tostring(game.PlaceVersion)):fieldInteger("user", p3.UserId)));
		error("Player " .. p3.Name .. " sent NaN or math.huge over a remote");
	end;
end);
return {
	default = v2.Definitions.Create({
		Leaderboard = v1.import(script, game:GetService("ReplicatedStorage"), "TS", "remote-namespaces", "leaderboard"), 
		CustomMatches = v1.import(script, game:GetService("ReplicatedStorage"), "TS", "remote-namespaces", "custom-matches-remotes"), 
		Locker = v1.import(script, game:GetService("ReplicatedStorage"), "TS", "remote-namespaces", "locker-remotes"), 
		BattlePass = v1.import(script, game:GetService("ReplicatedStorage"), "TS", "remote-namespaces", "battle-pass-remotes").BattlePassRemotesNamespace, 
		SocialConnections = v1.import(script, game:GetService("ReplicatedStorage"), "TS", "remote-namespaces", "social-connections-remotes"), 
		Gift = v1.import(script, game:GetService("ReplicatedStorage"), "TS", "remote-namespaces", "gift-remotes"), 
		ChargeShield = v1.import(script, game:GetService("ReplicatedStorage"), "TS", "remote-namespaces", "charge-shield-remotes"), 
		Update = v1.import(script, game:GetService("ReplicatedStorage"), "TS", "remote-namespaces", "update-remotes").default, 
		Inventory = v1.import(script, game:GetService("ReplicatedStorage"), "TS", "remote-namespaces", "inventory-remotes"), 
		Clans = v1.import(script, game:GetService("ReplicatedStorage"), "TS", "remote-namespaces", "clans-remotes"), 
		VendingMachine = v1.import(script, game:GetService("ReplicatedStorage"), "TS", "items", "vending-machine", "vending-machine-remotes"), 
		SheepHerder = v1.import(script, game:GetService("ReplicatedStorage"), "TS", "games", "bedwars", "kit", "kits", "sheep-herder", "sheep-herder-remotes"), 
		Disaster = v1.import(script, game:GetService("ReplicatedStorage"), "TS", "disaster", "disaster-remotes"), 
		ThemedEvent = v1.import(script, game:GetService("ReplicatedStorage"), "TS", "themed-event", "themed-event-remotes"), 
		Vehicle = v1.import(script, game:GetService("ReplicatedStorage"), "TS", "remote-namespaces", "vehicle-remotes").VehicleRemotes, 
		Helicopter = v1.import(script, game:GetService("ReplicatedStorage"), "TS", "remote-namespaces", "helicopter-remotes").HelicopterRemotes, 
		Gamemode = v1.import(script, game:GetService("ReplicatedStorage"), "TS", "gamemode", "gamemode-remotes"), 
		Event = v1.import(script, game:GetService("ReplicatedStorage"), "TS", "remote-namespaces", "event-remotes").EventRemotes, 
		PirateSceneRemotes = v1.import(script, game:GetService("ReplicatedStorage"), "TS", "remote-namespaces", "pirate-scene-remotes"), 
		bwbZhrfhsi = v2.Definitions.ServerFunction(), 
		yyiLbkicabNfpugJLrlGQzthE = v2.Definitions.ClientToServerEvent(), 
		ClrwZjzlcychopkec = v2.Definitions.ClientToServerEvent(), 
		itcUuesiyde = v2.Definitions.ClientToServerEvent(), 
		stufqxuPqmgwulsmnrcyxszzkJtwHtx = v2.Definitions.ClientToServerEvent(), 
		ydkYJkm = v2.Definitions.ClientToServerEvent(), 
		pjAdVvMeargwfUqNszc = v2.Definitions.ClientToServerEvent(), 
		ydIFipbEcqAylmxLDtyribjmerxmgaAggJdxdaVu = v2.Definitions.ClientToServerEvent(), 
		AutoTurretFired = v2.Definitions.ClientToServerEvent(), 
		wvtjzdShtwsduifpnpprwqllijjw = v2.Definitions.ClientToServerEvent(), 
		FetchServerRegion = v2.Definitions.ServerFunction(), 
		GetPlayerPermissions = v2.Definitions.ServerFunction(), 
		BanPlayer = v2.Definitions.ServerAsyncFunction(), 
		SelfReport = v2.Definitions.ClientToServerEvent({ l__WrappedTypechecker__5(l__t__3.literal("injection_detected")), v2.Middleware.RateLimit({
				MaxRequestsPerMinute = 1, 
				ErrorHandler = v4
			}) }), 
		PlayerConnect = v2.Definitions.ClientToServerEvent(), 
		PlayerReady = v2.Definitions.ClientToServerEvent(), 
		AnnouncementEvent = v2.Definitions.ServerToClientEvent(), 
		angleChanged = v2.Definitions.ServerToClientEvent(), 
		VoidPortalUsed = v2.Definitions.ServerToClientEvent(), 
		shockWaveRelease = v2.Definitions.ServerToClientEvent(), 
		AutoTurretPlaced = v2.Definitions.ServerToClientEvent(), 
		RocketBeltLaunch = v2.Definitions.ServerToClientEvent(), 
		PirateFlagPlaced = v2.Definitions.ServerToClientEvent(), 
		argbvrsfcwLvg = v2.Definitions.ServerToClientEvent(), 
		possyeryitbbgwPbGc = v2.Definitions.ServerToClientEvent(), 
		BombExplosion = v2.Definitions.ServerToClientEvent(), 
		bsqguhivtklCeayhtk = v2.Definitions.ServerToClientEvent(), 
		HealthDropBelowThresholdHannah = v2.Definitions.ServerToClientEvent(), 
		HealthHealAboveThresholdHannah = v2.Definitions.ServerToClientEvent(), 
		HannahTeleport = v2.Definitions.ServerToClientEvent(), 
		ddhov = v2.Definitions.ClientToServerEvent({ l__WrappedTypechecker__5(l__t__3.interface({
				weapon = l__t__3.Instance
			})) }), 
		jCeMmzjdpZprdzUUal = v2.Definitions.ServerFunction({ l__WrappedTypechecker__5(l__t__3.Instance) }), 
		Bounce = v2.Definitions.ServerToClientEvent(), 
		GroundHit = v2.Definitions.ClientToServerEvent(), 
		daaUwcvcsWppFdprgGndrarviskdglbwzkrbkLd = v2.Definitions.ClientToServerEvent(), 
		kqncozwVerBrpqsxkzfffmcePbYtjJbtvd = v2.Definitions.ServerFunction(), 
		emazHolyfmAx = v2.Definitions.ServerFunction(), 
		pukzcpzWpoqacH = v2.Definitions.ServerFunction(), 
		LoadMissionData = v2.Definitions.ServerFunction(), 
		InviteToParty = v2.Definitions.ServerFunction(), 
		RemoveFromParty = v2.Definitions.ServerFunction(), 
		JoinParty = v2.Definitions.ServerFunction(), 
		LeaveParty = v2.Definitions.ServerFunction(), 
		RequestPartyInfo = v2.Definitions.ClientToServerEvent(), 
		LeaveQueue = v2.Definitions.ServerFunction(), 
		TeleportToLobby = v2.Definitions.ClientToServerEvent(), 
		fmkomzlnPnivkbHhylWskjiu = v2.Definitions.ClientToServerEvent(), 
		bAevkwbxpazsdbghkjmCctrwacTxPWwwxmM = v2.Definitions.ServerFunction(), 
		dbXhf = v2.Definitions.ServerFunction(), 
		fVtxicPjSQfvj = v2.Definitions.ClientToServerEvent({ v2.Middleware.RateLimit({
				MaxRequestsPerMinute = 30, 
				ErrorHandler = v4
			}) }), 
		uvxNK = v2.Definitions.ClientToServerEvent({ v2.Middleware.RateLimit({
				MaxRequestsPerMinute = 30, 
				ErrorHandler = v4
			}) }), 
		BedwarsUpgradeGenerator = v2.Definitions.ServerFunction(), 
		BedwarsPurchaseItem = v2.Definitions.ServerFunction(), 
		BedwarsPurchaseTeamUpgrade = v2.Definitions.ServerFunction(), 
		BedwarsPurchaseShopCategoryUnlock = v2.Definitions.ServerFunction(), 
		BedwarsHarvestCrop = v2.Definitions.ServerFunction(), 
		TeleportToGame = v2.Definitions.ClientToServerEvent(), 
		RequestKitUpdate = v2.Definitions.ClientToServerEvent(), 
		BedwarsActivateKit = v2.Definitions.ServerFunction(), 
		BedwarsSetUseKitSkin = v2.Definitions.ServerFunction(), 
		BedwarsEquipKitSkin = v2.Definitions.ServerFunction(), 
		mlujpxfdxHfCd = v2.Definitions.ClientToServerEvent(), 
		aqqsskczxvxv = v2.Definitions.ServerFunction(), 
		EmfdyydleayHejuzbyh = v2.Definitions.ServerFunction(), 
		olshqrjihzcbugr = v2.Definitions.ClientToServerEvent(), 
		zoojkxyqhrtbjihkmzvoc = v2.Definitions.ClientToServerEvent(), 
		ujpwzcznlbrIzhimrJqzbruza = v2.Definitions.ClientToServerEvent(), 
		vslojmGUwiyiRwPrjb = v2.Definitions.ClientToServerEvent(), 
		tkvcUgqv = v2.Definitions.ClientToServerEvent(), 
		goCykugUysxsfuqvmkqLlavn = v2.Definitions.ClientToServerEvent(), 
		lnaRtfthysHchxuUAknckvoaNpsaeG = v2.Definitions.ClientToServerEvent(), 
		byrgHqwKJeogtcxdfopwbmvbtmdcdvrlooerH = v2.Definitions.ServerFunction(), 
		jwitopRngykdflikwmOzftju = v2.Definitions.ServerFunction(), 
		mgsxorgiingbhrix = v2.Definitions.ServerFunction(), 
		ngnwccjTweNiexpVzaoxil = v2.Definitions.ClientToServerEvent(), 
		bbIbZa = v2.Definitions.ClientToServerEvent(), 
		FfZxqcdVhgzHmEdwzaerobozmMaogrbtbJX = v2.Definitions.ClientToServerEvent(), 
		qlhzoqrh = v2.Definitions.ServerFunction(), 
		zobszqgzlkvEbwfixyPwutRlrdPrShgfxmlkAxVnas = v2.Definitions.ClientToServerEvent(), 
		pegwXgJJnfmvkmans = v2.Definitions.ClientToServerEvent(), 
		iWkniqyhcxa = v2.Definitions.ClientToServerEvent(), 
		lJdreMadgwsIpodgzu = v2.Definitions.ClientToServerEvent(), 
		raoq = v2.Definitions.ServerFunction(), 
		gkdpkii = v2.Definitions.ServerFunction(), 
		fcpiszgq = v2.Definitions.ServerFunction(), 
		xSvfdlheda = v2.Definitions.ServerFunction(), 
		vtwxRfbsonuymp = v2.Definitions.ServerFunction(), 
		xlfJmYTuO = v2.Definitions.ServerFunction(), 
		zzxgwmsqhyxlthik = v2.Definitions.ServerFunction(), 
		aThldjd = v2.Definitions.ServerFunction(), 
		pvonqndbykNsqtdvebvbczquupuupojvhNvze = v2.Definitions.ServerFunction(), 
		usfocbobgwbttmmi = v2.Definitions.ServerFunction(), 
		gciHUvlhwaaUevfztkkbJeGOadtmSordYdbl = v2.Definitions.ServerFunction(), 
		ziuvxekAJlh = v2.Definitions.ServerFunction(), 
		wdrmzihlckoUgGxsbAofbS = v2.Definitions.ServerFunction(), 
		nwEidiexdfzUcjdEmnginzwujlsfi = v2.Definitions.ServerFunction(), 
		glbxBxmofWozfxubeabzrjogXRktlac = v2.Definitions.ServerFunction(), 
		wjybVXncwndp = v2.Definitions.ServerFunction(), 
		aDevxmLeqnLeVUsUdrezmwiOvkmrx = v2.Definitions.ClientToServerEvent(), 
		exrqyafxxbcjypqzUmtwuhMmutslrV = v2.Definitions.ServerToClientEvent(), 
		npqRyurPAqrulwtiddapyPphmvmoaeopMetai = v2.Definitions.ServerToClientEvent(), 
		ZssmkvqceegqvfrhbdzranAy = v2.Definitions.ServerToClientEvent(), 
		fnvcFhhzlhMbfqvRlshLh = v2.Definitions.ClientToServerEvent(), 
		rdlhmdpztqp = v2.Definitions.ClientToServerEvent(), 
		AnalyticsReportEvent = v2.Definitions.ClientToServerEvent({ l__WrappedTypechecker__5(l__t__3.literal("ClientReady", "UIButtonPress", "ScreenPress", "DeviceType")) }), 
		ehezCdwojbTqjqfirz = v2.Definitions.ClientToServerEvent(), 
		pmgqfpmjb = v2.Definitions.ClientToServerEvent(), 
		BdylkviWigjrwxcbvvnyGuqd = v2.Definitions.ClientToServerEvent(), 
		hMlelarauhLzckcOgqcmdvtov = v2.Definitions.ClientToServerEvent(), 
		ugdvvqanJsartuBb = v2.Definitions.ClientToServerEvent(), 
		puvacNwucZZpn = v2.Definitions.ClientToServerEvent(), 
		gtQXzfBeoJvuHqqiifdeyc = v2.Definitions.ClientToServerEvent(), 
		ojvwijprasssvzdbwJ = v2.Definitions.ClientToServerEvent(), 
		nvcqzhnxpsuuFbF = v2.Definitions.ClientToServerEvent(), 
		csmjhdWEsrvIjeWAx = v2.Definitions.ClientToServerEvent(), 
		misOlBTTxyjpsmdJbpjehLRGytlyqMJkvfBzvcep = v2.Definitions.ClientToServerEvent(), 
		extAMcaWmFjuqu = v2.Definitions.ServerFunction(), 
		wgEmsgxbmnN = v2.Definitions.ClientToServerEvent(), 
		vIarFshzbmAurjwgutngszmvvbznx = v2.Definitions.ServerFunction(), 
		mmigishXkmjzqlwoRd = v2.Definitions.ClientToServerEvent(), 
		gMrApvwmijupFebmzzdcreqmjifhhjyhvikkiE = v2.Definitions.ClientToServerEvent(), 
		wjlssFwinTGursa = v2.Definitions.ClientToServerEvent(), 
		cvSlQmzbwtpccx = v2.Definitions.ClientToServerEvent(), 
		ugSPxuiasir = v2.Definitions.ClientToServerEvent(), 
		fckfLgodvJcoqq = v2.Definitions.ClientToServerEvent(), 
		okroijbrEIhDetQObjMgpdvMeIlkLfb = v2.Definitions.ServerFunction(), 
		myedgtnmvobUgzkxgcjWg = v2.Definitions.ClientToServerEvent(), 
		GqhgmLEhhdfGt = v2.Definitions.ServerFunction(), 
		HangGliderUse = v2.Definitions.ClientToServerEvent(), 
		HangGliderClose = v2.Definitions.ClientToServerEvent(), 
		HangGliderStateChanged = v2.Definitions.ServerToClientEvent(), 
		mtrpzoCjcKPoqhsZFjldL = v2.Definitions.ServerFunction(), 
		mazhdmexaujtwwtjrkzOtYCtyoYnKitmgqhb = v2.Definitions.ServerFunction(), 
		yPxojupagMrtekzhqztfUbajdk = v2.Definitions.ServerFunction(), 
		yiponOqYFsusoLvPnzIaf = v2.Definitions.ClientToServerEvent(), 
		ovtjwkmXmddcayrt = v2.Definitions.ClientToServerEvent(), 
		dcgpJaJnBwzrBkhRlgiJwbimhpoubyIwgtke = v2.Definitions.ClientToServerEvent(), 
		aivcvFrcnqusIGrfqsrRCrlLsO = v2.Definitions.ClientToServerEvent(), 
		WbcrfvhipojeeTGdjtMzhnlxrDauqe = v2.Definitions.ClientToServerEvent(), 
		umleoMugkKfjoziloaejZdnkpmsslwszbYc = v2.Definitions.ClientToServerEvent(), 
		sdkjsesix = v2.Definitions.ClientToServerEvent(), 
		kWyjirltwzlpalcbh = v2.Definitions.ClientToServerEvent(), 
		rluJMkjnsynvuobsafFOsaxokje = v2.Definitions.ClientToServerEvent(), 
		RequestStatusUpdate = v2.Definitions.ClientToServerEvent(), 
		pmrxlakzadvrzAicenxocaVLtdsVytcaqzajae = v2.Definitions.ClientToServerEvent(), 
		pdcfqtgdWVFBxUqeeulp = v2.Definitions.ClientToServerEvent(), 
		cicUidHqofmxsOmvfqltTsheysecdeOpukaeqzecyq = v2.Definitions.ClientToServerEvent(), 
		GetServerUnixTime = v2.Definitions.ServerFunction(), 
		DebugGetServerStartedTime = v2.Definitions.ServerFunction(), 
		ChatMakeSystemMessage = v2.Definitions.ServerToClientEvent(), 
		EntityDamageEvent = v2.Definitions.ServerToClientEvent(), 
		EntityDeathEvent = v2.Definitions.ServerToClientEvent(), 
		TeamsUpdateEvent = v2.Definitions.ServerToClientEvent(), 
		RequestTeamsUpdateEvent = v2.Definitions.ClientToServerEvent(), 
		KitsUpdateEvent = v2.Definitions.ServerToClientEvent(), 
		LandmineExplode = v2.Definitions.ServerToClientEvent(), 
		MatchStateEvent = v2.Definitions.ServerToClientEvent(), 
		QueueTypeEvent = v2.Definitions.ServerToClientEvent(), 
		MatchEndEvent = v2.Definitions.ServerToClientEvent(), 
		PlayerEarlyLeaveEvent = v2.Definitions.ServerToClientEvent(), 
		PickupItemEvent = v2.Definitions.ServerToClientEvent(), 
		ExplosionEffect = v2.Definitions.ServerToClientEvent(), 
		RocketLauncherMissileExplode = v2.Definitions.ServerToClientEvent(), 
		PlayTelescopeEffect = v2.Definitions.ServerToClientEvent(), 
		enbarjalGko = v2.Definitions.ServerToClientEvent(), 
		CarrotRocketExplode = v2.Definitions.ServerToClientEvent(), 
		BobaStickEvent = v2.Definitions.ServerToClientEvent(), 
		BombStickEvent = v2.Definitions.ServerToClientEvent(), 
		FireworkStickEvent = v2.Definitions.ServerToClientEvent(), 
		BedwarsShopCategoriesUpdate = v2.Definitions.ServerToClientEvent(), 
		BedwarsSetAllTeamUpgrades = v2.Definitions.ServerToClientEvent(), 
		BedwarsSetTeamUpgradeTier = v2.Definitions.ServerToClientEvent(), 
		ProjectileImpact = v2.Definitions.ServerToClientEvent(), 
		ProjectileLaunch = v2.Definitions.ServerToClientEvent(), 
		ProjectileLaunchClient = v2.Definitions.ServerToClientEvent(), 
		KitUpdate = v2.Definitions.ServerToClientEvent(), 
		HarvestCrop = v2.Definitions.ServerToClientEvent(), 
		BlockFortified = v2.Definitions.ServerToClientEvent(), 
		BillboardRiseEffect = v2.Definitions.ServerToClientEvent(), 
		SpectatePlayer = v2.Definitions.ServerToClientEvent(), 
		StopSpectating = v2.Definitions.ServerToClientEvent(), 
		ShieldBlocked = v2.Definitions.ServerToClientEvent(), 
		GuitarHeal = v2.Definitions.ServerToClientEvent(), 
		GuitarDamage = v2.Definitions.ServerToClientEvent(), 
		EntityHeal = v2.Definitions.ServerToClientEvent(), 
		CannonFired = v2.Definitions.ServerToClientEvent(), 
		BalloonInflated = v2.Definitions.ServerToClientEvent(), 
		BalloonPopped = v2.Definitions.ServerToClientEvent(), 
		BedwarsBedBreak = v2.Definitions.ServerToClientEvent(), 
		BedwarsSuddenDeath = v2.Definitions.ServerToClientEvent(), 
		TreeOrbSpawn = v2.Definitions.ServerToClientEvent(), 
		FireballExplode = v2.Definitions.ServerToClientEvent(), 
		SpawnGrimReaperSoul = v2.Definitions.ServerToClientEvent(), 
		SpawnSpiritOrb = v2.Definitions.ServerToClientEvent(), 
		SpawnTreasureChest = v2.Definitions.ServerToClientEvent(), 
		DestroyTreasureChest = v2.Definitions.ServerToClientEvent(), 
		EntityConsumeGrimReaperSoul = v2.Definitions.ServerToClientEvent(), 
		SpawnWindWalkerOrb = v2.Definitions.ServerToClientEvent(), 
		WindWalkerSpeedUpdate = v2.Definitions.ServerToClientEvent(), 
		WindWalkerSpawned = v2.Definitions.ServerToClientEvent(), 
		WindWalkerEffect = v2.Definitions.ServerToClientEvent(), 
		SpiritAssassinSpeedUpdate = v2.Definitions.ServerToClientEvent(), 
		SpiritAssassinUseSpirit = v2.Definitions.ServerToClientEvent(), 
		SpiritAssassinLanded = v2.Definitions.ServerToClientEvent(), 
		LightningStrike = v2.Definitions.ServerToClientEvent(), 
		AttachElectricOrb = v2.Definitions.ServerToClientEvent(), 
		DetachElectricOrb = v2.Definitions.ServerToClientEvent(), 
		BeeSpawn = v2.Definitions.ServerToClientEvent(), 
		BeeRemoved = v2.Definitions.ServerToClientEvent(), 
		CollectableEntitySpawn = v2.Definitions.ServerToClientEvent(), 
		CollectableEntityRemoved = v2.Definitions.ServerToClientEvent(), 
		RavenExploded = v2.Definitions.ServerToClientEvent(), 
		RobuxPurchaseSuccess = v2.Definitions.ServerToClientEvent(), 
		BedAlarmTriggered = v2.Definitions.ServerToClientEvent(), 
		BountyHunterTargetChanged = v2.Definitions.ServerToClientEvent(), 
		BountyHunterRewardClaimed = v2.Definitions.ServerToClientEvent(), 
		SpiritExplosion = v2.Definitions.ServerToClientEvent(), 
		TeslaTrapTargetsChanged = v2.Definitions.ServerToClientEvent(), 
		cvsazTthw = v2.Definitions.ServerToClientEvent(), 
		HealingBackpackEffect = v2.Definitions.ServerToClientEvent(), 
		HealingBackpackSound = v2.Definitions.ServerToClientEvent(), 
		VoidArmorShieldTrigger = v2.Definitions.ServerToClientEvent(), 
		AngelProgress = v2.Definitions.ServerToClientEvent(), 
		AngelOrb = v2.Definitions.ServerToClientEvent(), 
		LumenProgress = v2.Definitions.ServerToClientEvent(), 
		EmberProgress = v2.Definitions.ServerToClientEvent(), 
		PiggyBankIncrement = v2.Definitions.ServerToClientEvent(), 
		PiggyBankPop = v2.Definitions.ServerToClientEvent(), 
		DodoBirdInteraction = v2.Definitions.ServerToClientEvent(), 
		Nuke = v2.Definitions.ServerToClientEvent(), 
		wvlepsuhoTrSztQswxZkt = v2.Definitions.ServerToClientEvent(), 
		Distraction = v2.Definitions.ServerToClientEvent(), 
		SnapTrapSnared = v2.Definitions.ServerToClientEvent(), 
		SnapTrapMarkConsumed = v2.Definitions.ServerToClientEvent(), 
		FishFound = v2.Definitions.ServerToClientEvent(), 
		FishCaught = v2.Definitions.ServerToClientEvent(), 
		SpearImpactEffect = v2.Definitions.ServerToClientEvent(), 
		OilSpill = v2.Definitions.ServerToClientEvent(), 
		SantaStrafeEffect = v2.Definitions.ServerToClientEvent(), 
		ShowRankedRestriction = v2.Definitions.ServerToClientEvent(), 
		StopwatchActivated = v2.Definitions.ServerToClientEvent(), 
		StopwatchExpired = v2.Definitions.ServerToClientEvent(), 
		MatchRankReport = v2.Definitions.ServerToClientEvent(), 
		Tase = v2.Definitions.ServerToClientEvent(), 
		ForcePlayAnimation = v2.Definitions.ServerToClientEvent(), 
		PirateDigTreasure = v2.Definitions.ServerToClientEvent(), 
		GuidedProjectileDetonated = v2.Definitions.ServerToClientEvent(), 
		Fling = v2.Definitions.ServerToClientEvent(), 
		ParachuteDrop = v2.Definitions.ServerToClientEvent(), 
		HugeLuckyBlockEvent = v2.Definitions.ServerToClientEvent(), 
		StatusEffectActivatedEvent = v2.Definitions.ServerToClientEvent(), 
		IceQueenProgress = v2.Definitions.ServerToClientEvent(), 
		IceQueenFreeze = v2.Definitions.ServerToClientEvent(), 
		FireAspectHit = v2.Definitions.ServerToClientEvent(), 
		StaticHit = v2.Definitions.ServerToClientEvent(), 
		LifeStealHit = v2.Definitions.ServerToClientEvent(), 
		AeryGiveButterfly = v2.Definitions.ServerToClientEvent(), 
		EnchantTableRepair = v2.Definitions.ServerToClientEvent(), 
		EnchantTableResearch = v2.Definitions.ServerToClientEvent(), 
		YetiAbility = v2.Definitions.ServerToClientEvent(), 
		PirateFlagRemoved = v2.Definitions.ServerToClientEvent(), 
		LaunchPadUsed = v2.Definitions.ServerToClientEvent(), 
		VoidAxeLeap = v2.Definitions.ServerToClientEvent(), 
		PlayGameMusic = v2.Definitions.ServerToClientEvent(), 
		FireworkArrowExplode = v2.Definitions.ServerToClientEvent(), 
		OpenLuckyBlock = v2.Definitions.ServerToClientEvent(), 
		TwirlbladeSpin = v2.Definitions.ServerToClientEvent(), 
		HellBladeSpin = v2.Definitions.ServerToClientEvent(), 
		PlunderProc = v2.Definitions.ServerToClientEvent(), 
		MerchantDiscountApplied = v2.Definitions.ServerToClientEvent(), 
		lttiqVapazHqNrqcrrthqokwwx = v2.Definitions.ServerToClientEvent(), 
		dJyxfyUgecJpdxtqsdewuhrgijtSv = v2.Definitions.ServerToClientEvent(), 
		UtRprfrlhlqvrkoovupcgs = v2.Definitions.ServerToClientEvent(), 
		Petrified = v2.Definitions.ServerToClientEvent(), 
		PetrifiedPlayerDestroyed = v2.Definitions.ServerToClientEvent(), 
		MerchantItems = v2.Definitions.ServerToClientEvent(), 
		ActivateBeast = v2.Definitions.ServerToClientEvent(), 
		RPSEmotePlayed = v2.Definitions.ServerToClientEvent(), 
		CoinTossEmotePlayed = v2.Definitions.ServerToClientEvent(), 
		TW = v2.Definitions.ServerToClientEvent(), 
		gpqyoz = v2.Definitions.ServerToClientEvent(), 
		TW = v2.Definitions.ServerToClientEvent(), 
		vvmmthnAsipfezhzRvHrtdhqwhltv = v2.Definitions.ServerToClientEvent(), 
		rfopumQbvyXnkdgUiDleusJkdibevwnCvzYhXxyg = v2.Definitions.ServerToClientEvent(), 
		nmwmrsCvgG = v2.Definitions.ServerToClientEvent(), 
		tidzgvlhecgsdO = v2.Definitions.ServerToClientEvent(), 
		hoegEihxdyd = v2.Definitions.ClientToServerEvent(), 
		zgjnlqrDhyht = v2.Definitions.ServerToClientEvent(), 
		hqXumzkusdetveYeiqLmnfmf = v2.Definitions.ServerToClientEvent(), 
		keYIlVphdtclrxbapcxfc = v2.Definitions.ServerToClientEvent(), 
		kqvltdmvHhsYmkfdoauciudnyZihgdcbpuEfC = v2.Definitions.ClientToServerEvent(), 
		sshosNczku = v2.Definitions.ServerToClientEvent(), 
		ampbfdcuqmfypkxqoumvnom = v2.Definitions.ServerToClientEvent(), 
		nPOgplkzyXst = v2.Definitions.ServerToClientEvent(), 
		kxfkIiavquekAfmxI = v2.Definitions.ServerToClientEvent(), 
		wkdnluLdhixfajsIxvqebzs = v2.Definitions.ServerToClientEvent(), 
		lsIwlKslkfTonqdbfdbjlhzbyeilrSScoa = v2.Definitions.ServerToClientEvent(), 
		ivokXbxhxryiqmauouccnmnG = v2.Definitions.ServerToClientEvent(), 
		ghgsKrbukxYhejsknnlhYgwsHeEQQqladiqwrkifez = v2.Definitions.ServerToClientEvent(), 
		aqfppgmk = v2.Definitions.ServerToClientEvent(), 
		kbZytgramkeqbgoahfydp = v2.Definitions.ServerToClientEvent(), 
		DinHqgUExewrMhgqcnepbwLgtscxzEJqyikoa = v2.Definitions.ServerToClientEvent(), 
		ldqyxnbQPczFivXGaSBm = v2.Definitions.ServerToClientEvent(), 
		iVUrqemycujXslq = v2.Definitions.ServerToClientEvent(), 
		ggvith = v2.Definitions.ServerToClientEvent(), 
		oemVOmfffnntblCYq = v2.Definitions.ServerToClientEvent(), 
		qhtbucbGrlfzucumzjcyhpxje = v2.Definitions.ServerToClientEvent(), 
		eZdfujxiejEgz = v2.Definitions.ServerToClientEvent(), 
		RazbpokgczhgDqhh = v2.Definitions.ServerToClientEvent(), 
		fihkAfifplz = v2.Definitions.ServerToClientEvent(), 
		acgpNsagrBFslzMgoTFVueqrOKujcwiPwuhfoekwiXSw = v2.Definitions.ServerToClientEvent(), 
		saobeujftqgJp = v2.Definitions.ServerToClientEvent(), 
		tmsqytctbpCiJepoeElvttjPgcMhsTxmzhnbyrn = v2.Definitions.ServerToClientEvent(), 
		ybcxdalqjpNeoUfnD = v2.Definitions.ServerToClientEvent(), 
		afblyopybkbzTwohwkhgxmna = v2.Definitions.ServerToClientEvent(), 
		wjdboKsfcyktxcqckEB = v2.Definitions.ClientToServerEvent(), 
		vAAkyhpBwooFnhjzofljuzczzr = v2.Definitions.ServerToClientEvent(), 
		oxgcjMCssqxT = v2.Definitions.ServerToClientEvent(), 
		tIphwbodUrfcykmirflzhqnfafqlklkImJ = v2.Definitions.ServerFunction(), 
		zmBjigpujWhn = v2.Definitions.ServerFunction(), 
		qzhgtSmUdcyigGokJxrLcxurxXctsvinljJQXg = v2.Definitions.ServerToClientEvent(), 
		eetfigouaDXY = v2.Definitions.ServerToClientEvent(), 
		jGocgnzzvfYbCge = v2.Definitions.ServerToClientEvent(), 
		dcjpvicyjshisklvivhyjdbagbUxC = v2.Definitions.ServerToClientEvent(), 
		sgtoZTgefhcgGXslthijYnoazv = v2.Definitions.ServerToClientEvent(), 
		pzzubdsxbFyRuCgyeiQncyi = v2.Definitions.ServerToClientEvent(), 
		gacxmWscW = v2.Definitions.ServerToClientEvent(), 
		wvdcySnkg = v2.Definitions.ServerToClientEvent(), 
		WypdvfWszdqkzJI = v2.Definitions.ServerToClientEvent(), 
		xiwtbpdntGwsjjbjlQwvkxzZncjRxuRn = v2.Definitions.ServerToClientEvent(), 
		GlitchExplosion = v2.Definitions.ServerToClientEvent()
	}, v7)
};
