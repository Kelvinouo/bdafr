-- Decompiled with the Synapse X Luau decompiler.

local v1 = require(game:GetService("ReplicatedStorage"):WaitForChild("rbxts_include"):WaitForChild("RuntimeLib"));
local v2 = v1.import(script, v1.getModule(script, "@rbxts", "net").out);
local l__t__3 = v1.import(script, v1.getModule(script, "@rbxts", "t").lib.ts).t;
local v4 = v1.import(script, game:GetService("ReplicatedStorage"), "TS", "net-middleware", "ratelimit");
local l__WrappedTypechecker__5 = v1.import(script, game:GetService("ReplicatedStorage"), "TS", "net-middleware", "wrapped-typechecker").WrappedTypechecker;
local v6 = {};
local v7 = {};
local l__RunService__1 = v1.import(script, v1.getModule(script, "@rbxts", "services")).RunService;
local l__Metric__2 = v1.import(script, v1.getModule(script, "@easy-games", "game-core").out).Metric;
local l__Flamework__3 = v1.import(script, v1.getModule(script, "@flamework", "core").out).Flamework;
v7[1] = v2.Middleware.Global(function(p1, p2, p3)
	if not p3 then
		return nil;
	end;
	if not l__RunService__1:IsServer() then
		return nil;
	end;
	local u4 = false;
	local function u5(p4)
		if type(p4) == "number" then
			if p4 ~= p4 then
				u4 = true;
			end;
			if math.abs(p4) == math.huge then
				u4 = true;
				return;
			end;
		elseif type(p4) == "table" then
			for v8, v9 in pairs(p4) do
				u5(v9);
			end;
		end;
	end;
	local v10, v11, v12 = ipairs(p2);
	while true do
		v10(v11, v12);
		if not v10 then
			break;
		end;
		v12 = v10;
		u5(v11);	
	end;
	if u4 then
		l__Flamework__3.resolveDependency("@easy-games/game-core:server/services/metrics-service@MetricsService"):publishMetric((l__Metric__2.new("flagged-remote-number-check"):tag("remote-name", p1):tag("place-version", tostring(game.PlaceVersion)):fieldInteger("user", p3.UserId)));
		error("Player " .. p3.Name .. " sent NaN or math.huge over a remote");
	end;
end);
return {
	default = v2.Definitions.Create({
		Leaderboard = v1.import(script, game:GetService("ReplicatedStorage"), "TS", "remote-namespaces", "leaderboard"), 
		CustomMatches = v1.import(script, game:GetService("ReplicatedStorage"), "TS", "remote-namespaces", "custom-matches-remotes"), 
		Locker = v1.import(script, game:GetService("ReplicatedStorage"), "TS", "remote-namespaces", "locker-remotes"), 
		BattlePass = v1.import(script, game:GetService("ReplicatedStorage"), "TS", "remote-namespaces", "battle-pass-remotes").BattlePassRemotesNamespace, 
		SocialConnections = v1.import(script, game:GetService("ReplicatedStorage"), "TS", "remote-namespaces", "social-connections-remotes"), 
		Gift = v1.import(script, game:GetService("ReplicatedStorage"), "TS", "remote-namespaces", "gift-remotes"), 
		ChargeShield = v1.import(script, game:GetService("ReplicatedStorage"), "TS", "remote-namespaces", "charge-shield-remotes"), 
		Update = v1.import(script, game:GetService("ReplicatedStorage"), "TS", "remote-namespaces", "update-remotes").default, 
		Inventory = v1.import(script, game:GetService("ReplicatedStorage"), "TS", "remote-namespaces", "inventory-remotes"), 
		Clans = v1.import(script, game:GetService("ReplicatedStorage"), "TS", "remote-namespaces", "clans-remotes"), 
		VendingMachine = v1.import(script, game:GetService("ReplicatedStorage"), "TS", "items", "vending-machine", "vending-machine-remotes"), 
		SheepHerder = v1.import(script, game:GetService("ReplicatedStorage"), "TS", "games", "bedwars", "kit", "kits", "sheep-herder", "sheep-herder-remotes"), 
		Disaster = v1.import(script, game:GetService("ReplicatedStorage"), "TS", "disaster", "disaster-remotes"), 
		ThemedEvent = v1.import(script, game:GetService("ReplicatedStorage"), "TS", "themed-event", "themed-event-remotes"), 
		Vehicle = v1.import(script, game:GetService("ReplicatedStorage"), "TS", "remote-namespaces", "vehicle-remotes").VehicleRemotes, 
		Helicopter = v1.import(script, game:GetService("ReplicatedStorage"), "TS", "remote-namespaces", "helicopter-remotes").HelicopterRemotes, 
		Gamemode = v1.import(script, game:GetService("ReplicatedStorage"), "TS", "gamemode", "gamemode-remotes"), 
		Event = v1.import(script, game:GetService("ReplicatedStorage"), "TS", "remote-namespaces", "event-remotes").EventRemotes, 
		PirateSceneRemotes = v1.import(script, game:GetService("ReplicatedStorage"), "TS", "remote-namespaces", "pirate-scene-remotes"), 
		efqHkCfrhtdpuIofbralld = v2.Definitions.ServerFunction(), 
		kRhtmtcxvlkltxiueLfhtwdkpGTxPq = v2.Definitions.ClientToServerEvent(), 
		ojvoiulaqEGkpynzKaZemo = v2.Definitions.ClientToServerEvent(), 
		Ibaldggcbgcz = v2.Definitions.ClientToServerEvent(), 
		jnlyxwfkhshhLznsftmYvgpwpmzEefAqa = v2.Definitions.ClientToServerEvent(), 
		qtikQpbcagf = v2.Definitions.ClientToServerEvent(), 
		wpqmjqageQjvfs = v2.Definitions.ClientToServerEvent(), 
		qoojnnnNdknbidwuvbjqdefhZnldw = v2.Definitions.ClientToServerEvent(), 
		AutoTurretFired = v2.Definitions.ClientToServerEvent(), 
		qpueMbCHzxw = v2.Definitions.ClientToServerEvent(), 
		FetchServerRegion = v2.Definitions.ServerFunction(), 
		GetPlayerPermissions = v2.Definitions.ServerFunction(), 
		BanPlayer = v2.Definitions.ServerAsyncFunction(), 
		SelfReport = v2.Definitions.ClientToServerEvent({ l__WrappedTypechecker__5(l__t__3.literal("injection_detected")), v2.Middleware.RateLimit({
				MaxRequestsPerMinute = 1, 
				ErrorHandler = v4
			}) }), 
		PlayerConnect = v2.Definitions.ClientToServerEvent(), 
		PlayerReady = v2.Definitions.ClientToServerEvent(), 
		AnnouncementEvent = v2.Definitions.ServerToClientEvent(), 
		angleChanged = v2.Definitions.ServerToClientEvent(), 
		VoidPortalUsed = v2.Definitions.ServerToClientEvent(), 
		shockWaveRelease = v2.Definitions.ServerToClientEvent(), 
		AutoTurretPlaced = v2.Definitions.ServerToClientEvent(), 
		RocketBeltLaunch = v2.Definitions.ServerToClientEvent(), 
		PirateFlagPlaced = v2.Definitions.ServerToClientEvent(), 
		HnbumfKqqxkPavywq = v2.Definitions.ServerToClientEvent(), 
		iyfbdjwinbymd = v2.Definitions.ServerToClientEvent(), 
		BombExplosion = v2.Definitions.ServerToClientEvent(), 
		qZuwzKfulukeicssqxwrag = v2.Definitions.ServerToClientEvent(), 
		HealthDropBelowThresholdHannah = v2.Definitions.ServerToClientEvent(), 
		HealthHealAboveThresholdHannah = v2.Definitions.ServerToClientEvent(), 
		HannahTeleport = v2.Definitions.ServerToClientEvent(), 
		xtrgybanlzvLlKd = v2.Definitions.ClientToServerEvent({ l__WrappedTypechecker__5(l__t__3.interface({
				weapon = l__t__3.Instance
			})) }), 
		wIbsuuwXJdhfhtlbulPiFMeVvkipQhzIjlx = v2.Definitions.ServerFunction({ l__WrappedTypechecker__5(l__t__3.Instance) }), 
		Bounce = v2.Definitions.ServerToClientEvent(), 
		GroundHit = v2.Definitions.ClientToServerEvent(), 
		nJTbvgapwPScMwbt = v2.Definitions.ClientToServerEvent(), 
		vdkzcNddfjw = v2.Definitions.ServerFunction(), 
		oanlkha = v2.Definitions.ServerFunction(), 
		dkyjLldpqvLgsaysintugpkamzdxqjhisF = v2.Definitions.ServerFunction(), 
		LoadMissionData = v2.Definitions.ServerFunction(), 
		InviteToParty = v2.Definitions.ServerFunction(), 
		RemoveFromParty = v2.Definitions.ServerFunction(), 
		JoinParty = v2.Definitions.ServerFunction(), 
		LeaveParty = v2.Definitions.ServerFunction(), 
		RequestPartyInfo = v2.Definitions.ClientToServerEvent(), 
		LeaveQueue = v2.Definitions.ServerFunction(), 
		TeleportToLobby = v2.Definitions.ClientToServerEvent(), 
		blwiwhvquterwgymsnivfbbiXrrnuwjptDy = v2.Definitions.ClientToServerEvent(), 
		nNoKqyFmikhpuMBcwzrfxDgvutMzYvd = v2.Definitions.ServerFunction(), 
		jtLnjvmylsve = v2.Definitions.ServerFunction(), 
		uokrwpSgjfmntdhlzxxcjpdVdgnrRr = v2.Definitions.ClientToServerEvent({ v2.Middleware.RateLimit({
				MaxRequestsPerMinute = 30, 
				ErrorHandler = v4
			}) }), 
		onhkjjEujrHporohvzuMftkVlsen = v2.Definitions.ClientToServerEvent({ v2.Middleware.RateLimit({
				MaxRequestsPerMinute = 30, 
				ErrorHandler = v4
			}) }), 
		BedwarsUpgradeGenerator = v2.Definitions.ServerFunction(), 
		BedwarsPurchaseItem = v2.Definitions.ServerFunction(), 
		BedwarsPurchaseTeamUpgrade = v2.Definitions.ServerFunction(), 
		BedwarsPurchaseShopCategoryUnlock = v2.Definitions.ServerFunction(), 
		BedwarsHarvestCrop = v2.Definitions.ServerFunction(), 
		TeleportToGame = v2.Definitions.ClientToServerEvent(), 
		RequestKitUpdate = v2.Definitions.ClientToServerEvent(), 
		BedwarsActivateKit = v2.Definitions.ServerFunction(), 
		BedwarsSetUseKitSkin = v2.Definitions.ServerFunction(), 
		BedwarsEquipKitSkin = v2.Definitions.ServerFunction(), 
		epanNNeel = v2.Definitions.ClientToServerEvent(), 
		nkmkrqtqhmeVwmrzvvWY = v2.Definitions.ServerFunction(), 
		oumbzjkJToatj = v2.Definitions.ServerFunction(), 
		BbuhrxvbAewqeBeb = v2.Definitions.ClientToServerEvent(), 
		ltTLIKoymvpz = v2.Definitions.ClientToServerEvent(), 
		jdShavumdJBxcvbpsjxbgej = v2.Definitions.ClientToServerEvent(), 
		lJnabhSnjplCBg = v2.Definitions.ClientToServerEvent(), 
		mzSleojNQ = v2.Definitions.ClientToServerEvent(), 
		dtsjssuedLlyEkkjeuLcfOdurLsbtCvrGkj = v2.Definitions.ClientToServerEvent(), 
		zososetClHksdU = v2.Definitions.ClientToServerEvent(), 
		ZOczbsgflkoItfjkrxqqPfwtnejabntwbLmxZpGxx = v2.Definitions.ServerFunction(), 
		jejpBEJCszdqtikZvVpgq = v2.Definitions.ServerFunction(), 
		nvvvtabnhilelivmbMw = v2.Definitions.ServerFunction(), 
		edyz = v2.Definitions.ClientToServerEvent(), 
		ehoihghkrfVitxwiplqBpqfbejoathgrtgfccmZaylM = v2.Definitions.ClientToServerEvent(), 
		eklzervzf = v2.Definitions.ClientToServerEvent(), 
		zyzrlfstiywcencbsTsjjnWsacajVplzie = v2.Definitions.ServerFunction(), 
		RJpgeo = v2.Definitions.ClientToServerEvent(), 
		njfzridgjfqhRhley = v2.Definitions.ClientToServerEvent(), 
		iuhWponmibkckxFJjlendnQbvrprcpBssykoxgeTb = v2.Definitions.ClientToServerEvent(), 
		jxndimljnH = v2.Definitions.ClientToServerEvent(), 
		uwidNorFgyipdKuijXbDhNdjxmer = v2.Definitions.ServerFunction(), 
		nojltoxphyytghCvoeycmotjkpdwlbAlonasx = v2.Definitions.ServerFunction(), 
		cmgquobFrBmoAlam = v2.Definitions.ServerFunction(), 
		mlmwsRugZdKchsstMlmljk = v2.Definitions.ServerFunction(), 
		hcjkxluaZLfRxquPefnxrvfyZyepLpqkyyjxrm = v2.Definitions.ServerFunction(), 
		NvcMcfSgxsaiobyKiRcwdLdpxdZr = v2.Definitions.ServerFunction(), 
		OsqucicgiquulzemjusxKcwocjqhfpEhrk = v2.Definitions.ServerFunction(), 
		zedrjqwexg = v2.Definitions.ServerFunction(), 
		phjiiqimCtC = v2.Definitions.ServerFunction(), 
		mkseIuckewMxjpydauplryiwRsxefuOa = v2.Definitions.ServerFunction(), 
		lbkcibqRpmeiRbqzRkfjJryuvnxaVelpcojfndqjug = v2.Definitions.ServerFunction(), 
		punffdudbzokOPh = v2.Definitions.ServerFunction(), 
		dnJMerxlxmpT = v2.Definitions.ServerFunction(), 
		zoqnmoghqIwaslotaoqpiodloimyyccjrnlUqda = v2.Definitions.ServerFunction(), 
		vkw = v2.Definitions.ServerFunction(), 
		LymzmkyzhkmIgiop = v2.Definitions.ServerFunction(), 
		rcriBhazacltygsblfkjsnh = v2.Definitions.ClientToServerEvent(), 
		lzrcoxeSeaXdcehwtjugxnwuGgRvugrmupcXmr = v2.Definitions.ServerToClientEvent(), 
		ovzhMhJrYadwglqhrmSoqtkE = v2.Definitions.ServerToClientEvent(), 
		dopneuqsvayy = v2.Definitions.ServerToClientEvent(), 
		upcdtidkBlvtffG = v2.Definitions.ClientToServerEvent(), 
		KNgoBiuerk = v2.Definitions.ClientToServerEvent(), 
		AnalyticsReportEvent = v2.Definitions.ClientToServerEvent({ l__WrappedTypechecker__5(l__t__3.literal("ClientReady", "UIButtonPress", "ScreenPress", "DeviceType")) }), 
		DazgsjkyyljhZTrc = v2.Definitions.ClientToServerEvent(), 
		qfxchpzVnd = v2.Definitions.ClientToServerEvent(), 
		rhpbqvhwcjnfqxwrtRpphLh = v2.Definitions.ClientToServerEvent(), 
		rmsfdmoqrmDsbDduovafhMmeecaDWwynSqzgEmCrphuS = v2.Definitions.ClientToServerEvent(), 
		lQgtuKccB = v2.Definitions.ClientToServerEvent(), 
		zgmmZagmjFtikvttglomzIol = v2.Definitions.ClientToServerEvent(), 
		xvwdqvupnluwqdsw = v2.Definitions.ClientToServerEvent(), 
		eyHrfkGriqksguAUymLytpneuvlythLxAymiiiif = v2.Definitions.ClientToServerEvent(), 
		aKywKdadkplcrrffttslztpd = v2.Definitions.ClientToServerEvent(), 
		fKzfqResqruwdrwmfzyArx = v2.Definitions.ClientToServerEvent(), 
		XcnfknrbwXvqduqbng = v2.Definitions.ClientToServerEvent(), 
		xyxqcJquxkzmSeyqZwpett = v2.Definitions.ServerFunction(), 
		zhHczsjwjnpKsBdWfbpg = v2.Definitions.ClientToServerEvent(), 
		iHuWukx = v2.Definitions.ServerFunction(), 
		ldvwaxrzacbcEJsowkYdJckcboikmo = v2.Definitions.ClientToServerEvent(), 
		ZzhwcjwpHubTuyapitgnXwqkhw = v2.Definitions.ClientToServerEvent(), 
		rfsjwrOqezPOnmpehkHpn = v2.Definitions.ClientToServerEvent(), 
		nvnDtcipnYFlx = v2.Definitions.ClientToServerEvent(), 
		Vfwnoix = v2.Definitions.ClientToServerEvent(), 
		iifcvfjmscddqi = v2.Definitions.ClientToServerEvent(), 
		xhmhrklgtgagtbcqcdnkbge = v2.Definitions.ServerFunction(), 
		NeykzqjanquankzxjyrpfTqpamnwXKm = v2.Definitions.ClientToServerEvent(), 
		FtaatpHjCgdvbfMa = v2.Definitions.ServerFunction(), 
		HangGliderUse = v2.Definitions.ClientToServerEvent(), 
		HangGliderClose = v2.Definitions.ClientToServerEvent(), 
		HangGliderStateChanged = v2.Definitions.ServerToClientEvent(), 
		JeboeggydFuByhckcfrggLyPvcafy = v2.Definitions.ServerFunction(), 
		Burmesccqly = v2.Definitions.ServerFunction(), 
		jagbmkszqbthjriwcqmfsOazQrfjayrkiKfeGjrsrgoilvy = v2.Definitions.ServerFunction(), 
		labGnwzbiiVtzzWdWenakd = v2.Definitions.ClientToServerEvent(), 
		rkfnvqhZggSGaXvbgoihehyowlm = v2.Definitions.ClientToServerEvent(), 
		lxplbondNoysaoqeblccrvyndgqrlceHOferz = v2.Definitions.ClientToServerEvent(), 
		ppijyNhkk = v2.Definitions.ClientToServerEvent(), 
		aLVltvlkudia = v2.Definitions.ClientToServerEvent(), 
		RgsptafisfEeKLavijqDjwmim = v2.Definitions.ClientToServerEvent(), 
		zkeonlpourklc = v2.Definitions.ClientToServerEvent(), 
		noQlrbEosrfosyxfv = v2.Definitions.ClientToServerEvent(), 
		dkushthravmptnujnh = v2.Definitions.ClientToServerEvent(), 
		RequestStatusUpdate = v2.Definitions.ClientToServerEvent(), 
		dUISmixlm = v2.Definitions.ClientToServerEvent(), 
		vhffQlkIgepyqzycigfugb = v2.Definitions.ClientToServerEvent(), 
		tluGbrjrrmkdwbjLntqvnDqiqdiXoygakQv = v2.Definitions.ClientToServerEvent(), 
		GetServerUnixTime = v2.Definitions.ServerFunction(), 
		DebugGetServerStartedTime = v2.Definitions.ServerFunction(), 
		ChatMakeSystemMessage = v2.Definitions.ServerToClientEvent(), 
		EntityDamageEvent = v2.Definitions.ServerToClientEvent(), 
		EntityDeathEvent = v2.Definitions.ServerToClientEvent(), 
		TeamsUpdateEvent = v2.Definitions.ServerToClientEvent(), 
		RequestTeamsUpdateEvent = v2.Definitions.ClientToServerEvent(), 
		KitsUpdateEvent = v2.Definitions.ServerToClientEvent(), 
		LandmineExplode = v2.Definitions.ServerToClientEvent(), 
		MatchStateEvent = v2.Definitions.ServerToClientEvent(), 
		QueueTypeEvent = v2.Definitions.ServerToClientEvent(), 
		MatchEndEvent = v2.Definitions.ServerToClientEvent(), 
		PlayerEarlyLeaveEvent = v2.Definitions.ServerToClientEvent(), 
		PickupItemEvent = v2.Definitions.ServerToClientEvent(), 
		ExplosionEffect = v2.Definitions.ServerToClientEvent(), 
		RocketLauncherMissileExplode = v2.Definitions.ServerToClientEvent(), 
		PlayTelescopeEffect = v2.Definitions.ServerToClientEvent(), 
		djmiknOokihsur = v2.Definitions.ServerToClientEvent(), 
		CarrotRocketExplode = v2.Definitions.ServerToClientEvent(), 
		BobaStickEvent = v2.Definitions.ServerToClientEvent(), 
		BombStickEvent = v2.Definitions.ServerToClientEvent(), 
		FireworkStickEvent = v2.Definitions.ServerToClientEvent(), 
		BedwarsShopCategoriesUpdate = v2.Definitions.ServerToClientEvent(), 
		BedwarsSetAllTeamUpgrades = v2.Definitions.ServerToClientEvent(), 
		BedwarsSetTeamUpgradeTier = v2.Definitions.ServerToClientEvent(), 
		ProjectileImpact = v2.Definitions.ServerToClientEvent(), 
		ProjectileLaunch = v2.Definitions.ServerToClientEvent(), 
		ProjectileLaunchClient = v2.Definitions.ServerToClientEvent(), 
		KitUpdate = v2.Definitions.ServerToClientEvent(), 
		HarvestCrop = v2.Definitions.ServerToClientEvent(), 
		BlockFortified = v2.Definitions.ServerToClientEvent(), 
		BillboardRiseEffect = v2.Definitions.ServerToClientEvent(), 
		SpectatePlayer = v2.Definitions.ServerToClientEvent(), 
		StopSpectating = v2.Definitions.ServerToClientEvent(), 
		ShieldBlocked = v2.Definitions.ServerToClientEvent(), 
		GuitarHeal = v2.Definitions.ServerToClientEvent(), 
		GuitarDamage = v2.Definitions.ServerToClientEvent(), 
		EntityHeal = v2.Definitions.ServerToClientEvent(), 
		CannonFired = v2.Definitions.ServerToClientEvent(), 
		BalloonInflated = v2.Definitions.ServerToClientEvent(), 
		BalloonPopped = v2.Definitions.ServerToClientEvent(), 
		BedwarsBedBreak = v2.Definitions.ServerToClientEvent(), 
		BedwarsSuddenDeath = v2.Definitions.ServerToClientEvent(), 
		TreeOrbSpawn = v2.Definitions.ServerToClientEvent(), 
		FireballExplode = v2.Definitions.ServerToClientEvent(), 
		SpawnGrimReaperSoul = v2.Definitions.ServerToClientEvent(), 
		SpawnSpiritOrb = v2.Definitions.ServerToClientEvent(), 
		SpawnTreasureChest = v2.Definitions.ServerToClientEvent(), 
		DestroyTreasureChest = v2.Definitions.ServerToClientEvent(), 
		EntityConsumeGrimReaperSoul = v2.Definitions.ServerToClientEvent(), 
		SpawnWindWalkerOrb = v2.Definitions.ServerToClientEvent(), 
		WindWalkerSpeedUpdate = v2.Definitions.ServerToClientEvent(), 
		WindWalkerSpawned = v2.Definitions.ServerToClientEvent(), 
		WindWalkerEffect = v2.Definitions.ServerToClientEvent(), 
		SpiritAssassinSpeedUpdate = v2.Definitions.ServerToClientEvent(), 
		SpiritAssassinUseSpirit = v2.Definitions.ServerToClientEvent(), 
		SpiritAssassinLanded = v2.Definitions.ServerToClientEvent(), 
		LightningStrike = v2.Definitions.ServerToClientEvent(), 
		AttachElectricOrb = v2.Definitions.ServerToClientEvent(), 
		DetachElectricOrb = v2.Definitions.ServerToClientEvent(), 
		BeeSpawn = v2.Definitions.ServerToClientEvent(), 
		BeeRemoved = v2.Definitions.ServerToClientEvent(), 
		CollectableEntitySpawn = v2.Definitions.ServerToClientEvent(), 
		CollectableEntityRemoved = v2.Definitions.ServerToClientEvent(), 
		RavenExploded = v2.Definitions.ServerToClientEvent(), 
		RobuxPurchaseSuccess = v2.Definitions.ServerToClientEvent(), 
		BedAlarmTriggered = v2.Definitions.ServerToClientEvent(), 
		BountyHunterTargetChanged = v2.Definitions.ServerToClientEvent(), 
		BountyHunterRewardClaimed = v2.Definitions.ServerToClientEvent(), 
		SpiritExplosion = v2.Definitions.ServerToClientEvent(), 
		TeslaTrapTargetsChanged = v2.Definitions.ServerToClientEvent(), 
		qoZnovzkzqkfoujmomk = v2.Definitions.ServerToClientEvent(), 
		HealingBackpackEffect = v2.Definitions.ServerToClientEvent(), 
		HealingBackpackSound = v2.Definitions.ServerToClientEvent(), 
		VoidArmorShieldTrigger = v2.Definitions.ServerToClientEvent(), 
		AngelProgress = v2.Definitions.ServerToClientEvent(), 
		AngelOrb = v2.Definitions.ServerToClientEvent(), 
		LumenProgress = v2.Definitions.ServerToClientEvent(), 
		EmberProgress = v2.Definitions.ServerToClientEvent(), 
		PiggyBankIncrement = v2.Definitions.ServerToClientEvent(), 
		PiggyBankPop = v2.Definitions.ServerToClientEvent(), 
		DodoBirdInteraction = v2.Definitions.ServerToClientEvent(), 
		Nuke = v2.Definitions.ServerToClientEvent(), 
		xXhnxpkePcshecrssHpptd = v2.Definitions.ServerToClientEvent(), 
		Distraction = v2.Definitions.ServerToClientEvent(), 
		SnapTrapSnared = v2.Definitions.ServerToClientEvent(), 
		SnapTrapMarkConsumed = v2.Definitions.ServerToClientEvent(), 
		FishFound = v2.Definitions.ServerToClientEvent(), 
		FishCaught = v2.Definitions.ServerToClientEvent(), 
		SpearImpactEffect = v2.Definitions.ServerToClientEvent(), 
		OilSpill = v2.Definitions.ServerToClientEvent(), 
		SantaStrafeEffect = v2.Definitions.ServerToClientEvent(), 
		ShowRankedRestriction = v2.Definitions.ServerToClientEvent(), 
		StopwatchActivated = v2.Definitions.ServerToClientEvent(), 
		StopwatchExpired = v2.Definitions.ServerToClientEvent(), 
		MatchRankReport = v2.Definitions.ServerToClientEvent(), 
		Tase = v2.Definitions.ServerToClientEvent(), 
		ForcePlayAnimation = v2.Definitions.ServerToClientEvent(), 
		PirateDigTreasure = v2.Definitions.ServerToClientEvent(), 
		GuidedProjectileDetonated = v2.Definitions.ServerToClientEvent(), 
		Fling = v2.Definitions.ServerToClientEvent(), 
		ParachuteDrop = v2.Definitions.ServerToClientEvent(), 
		HugeLuckyBlockEvent = v2.Definitions.ServerToClientEvent(), 
		StatusEffectActivatedEvent = v2.Definitions.ServerToClientEvent(), 
		IceQueenProgress = v2.Definitions.ServerToClientEvent(), 
		IceQueenFreeze = v2.Definitions.ServerToClientEvent(), 
		FireAspectHit = v2.Definitions.ServerToClientEvent(), 
		StaticHit = v2.Definitions.ServerToClientEvent(), 
		LifeStealHit = v2.Definitions.ServerToClientEvent(), 
		AeryGiveButterfly = v2.Definitions.ServerToClientEvent(), 
		EnchantTableRepair = v2.Definitions.ServerToClientEvent(), 
		EnchantTableResearch = v2.Definitions.ServerToClientEvent(), 
		YetiAbility = v2.Definitions.ServerToClientEvent(), 
		PirateFlagRemoved = v2.Definitions.ServerToClientEvent(), 
		LaunchPadUsed = v2.Definitions.ServerToClientEvent(), 
		VoidAxeLeap = v2.Definitions.ServerToClientEvent(), 
		PlayGameMusic = v2.Definitions.ServerToClientEvent(), 
		FireworkArrowExplode = v2.Definitions.ServerToClientEvent(), 
		OpenLuckyBlock = v2.Definitions.ServerToClientEvent(), 
		TwirlbladeSpin = v2.Definitions.ServerToClientEvent(), 
		HellBladeSpin = v2.Definitions.ServerToClientEvent(), 
		PlunderProc = v2.Definitions.ServerToClientEvent(), 
		MerchantDiscountApplied = v2.Definitions.ServerToClientEvent(), 
		duwdAecuJg = v2.Definitions.ServerToClientEvent(), 
		voofKptljpxgeUgsri = v2.Definitions.ServerToClientEvent(), 
		llbFQnebyggjbflopRcc = v2.Definitions.ServerToClientEvent(), 
		Petrified = v2.Definitions.ServerToClientEvent(), 
		PetrifiedPlayerDestroyed = v2.Definitions.ServerToClientEvent(), 
		MerchantItems = v2.Definitions.ServerToClientEvent(), 
		ActivateBeast = v2.Definitions.ServerToClientEvent(), 
		RPSEmotePlayed = v2.Definitions.ServerToClientEvent(), 
		CoinTossEmotePlayed = v2.Definitions.ServerToClientEvent(), 
		pcbJfQhvf = v2.Definitions.ServerToClientEvent(), 
		spCcipwndgknitrfn = v2.Definitions.ServerToClientEvent(), 
		pcbJfQhvf = v2.Definitions.ServerToClientEvent(), 
		fsbqufDWWYSarbgiylvOtklezgyHbqc = v2.Definitions.ServerToClientEvent(), 
		cktsqrxynpPboyoqwHghp = v2.Definitions.ServerToClientEvent(), 
		gEiHgNcUmqGfonv = v2.Definitions.ServerToClientEvent(), 
		pLuqyonIeNqvksEtewcxqm = v2.Definitions.ServerToClientEvent(), 
		bmauxehdpwtsjD = v2.Definitions.ClientToServerEvent(), 
		AdexfWfkkaxqsswvd = v2.Definitions.ServerToClientEvent(), 
		qnkqnEnmxg = v2.Definitions.ServerToClientEvent(), 
		hukltHcepvYDnuyxcenvje = v2.Definitions.ServerToClientEvent(), 
		yuqYsDiBOczlurbKgwAnwWttxej = v2.Definitions.ClientToServerEvent(), 
		osXxuqz = v2.Definitions.ServerToClientEvent(), 
		aSxxblhtnzhuzhjmwrWEz = v2.Definitions.ServerToClientEvent(), 
		soiokhlhnopdhmpohlrlxanaagzxaen = v2.Definitions.ServerToClientEvent(), 
		qjdTBsXearfmvchdrogrzzyt = v2.Definitions.ServerToClientEvent(), 
		mdqiekqgq = v2.Definitions.ServerToClientEvent(), 
		NWzgkezxLcBurrcvmkh = v2.Definitions.ServerToClientEvent(), 
		OivgdvCylmvibm = v2.Definitions.ServerToClientEvent(), 
		krownlgpmzo = v2.Definitions.ServerToClientEvent(), 
		vfzRioaipJlqDmy = v2.Definitions.ServerToClientEvent(), 
		tvE = v2.Definitions.ServerToClientEvent(), 
		ufchswzn = v2.Definitions.ServerToClientEvent(), 
		litrMvy = v2.Definitions.ServerToClientEvent(), 
		lsaELjDolduDpqsbyzxcMvalOlhbtpl = v2.Definitions.ServerToClientEvent(), 
		lbyshROcfgvzoihtfjfp = v2.Definitions.ServerToClientEvent(), 
		emupodfrwybsebpc = v2.Definitions.ServerToClientEvent(), 
		baicpqsSxbcbzyiexxFhaoyccyr = v2.Definitions.ServerToClientEvent(), 
		gdrzQgvizdooBK = v2.Definitions.ServerToClientEvent(), 
		qorerejlbM = v2.Definitions.ServerToClientEvent(), 
		foYhTvhezOrgVgtvhthueHimRbokmsfm = v2.Definitions.ServerToClientEvent(), 
		PeqmhjrvqhiIimddLacdxoccaejHwTifrbyR = v2.Definitions.ServerToClientEvent(), 
		xswvyquzyqapftt = v2.Definitions.ServerToClientEvent(), 
		bazwfankdnsuiOJtAdugonvRocQhxu = v2.Definitions.ServerToClientEvent(), 
		hpgajxJkityyxfkQmbuWlorgowpNanwrGifzzDbifkfg = v2.Definitions.ServerToClientEvent(), 
		wZpkskojbKjgxkk = v2.Definitions.ServerToClientEvent(), 
		megtJmIbmyVgNDazwtulafebiRkiaffemfjvufo = v2.Definitions.ClientToServerEvent(), 
		ihkzxayTtzbilpvIktDakxnecrmubyn = v2.Definitions.ServerToClientEvent(), 
		OcqfdxyalvlGsNtwL = v2.Definitions.ServerToClientEvent(), 
		orvb = v2.Definitions.ServerFunction(), 
		YMriirkdMljfhMhkkcJcyn = v2.Definitions.ServerFunction(), 
		CmpjrtMRtawpkqviqeuqjmblbvclsqnkvC = v2.Definitions.ServerToClientEvent(), 
		dlcfiyrrbcwitWrttlpedbjvrFbkrpwwlbq = v2.Definitions.ServerToClientEvent(), 
		lohqgdife = v2.Definitions.ServerToClientEvent(), 
		ElfrdqeIzklyvmbmnlbaupicyeftdvyxEgrkjs = v2.Definitions.ServerToClientEvent(), 
		QxivzVntwtrmOYdwyvowygifp = v2.Definitions.ServerToClientEvent(), 
		sYilnxoC = v2.Definitions.ServerToClientEvent(), 
		jqfjoxbhfuzLnrhivPdivEkfr = v2.Definitions.ServerToClientEvent(), 
		DeuvRdowbKrmLvsqddvxuiwplyLgisimdktx = v2.Definitions.ServerToClientEvent(), 
		nEBrEsRajqoIzdd = v2.Definitions.ServerToClientEvent(), 
		txjqyoJcAnohsGjpvccksgocJnEewrwbwfkt = v2.Definitions.ServerToClientEvent(), 
		GlitchExplosion = v2.Definitions.ServerToClientEvent()
	}, v7)
};
