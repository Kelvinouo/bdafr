-- Decompiled with the Synapse X Luau decompiler.

local v1 = require(game:GetService("ReplicatedStorage"):WaitForChild("rbxts_include"):WaitForChild("RuntimeLib"));
local v2 = v1.import(script, v1.getModule(script, "@rbxts", "net").out);
local l__default__3 = v1.import(script, v1.getModule(script, "@rbxts", "net").out.definitions).default;
local l__t__4 = v1.import(script, v1.getModule(script, "@rbxts", "t").lib.ts).t;
local v5 = v1.import(script, game:GetService("ReplicatedStorage"), "TS", "net-middleware", "ratelimit");
local l__WrappedTypechecker__6 = v1.import(script, game:GetService("ReplicatedStorage"), "TS", "net-middleware", "wrapped-typechecker").WrappedTypechecker;
local v7 = {};
local v8 = {};
local l__RunService__1 = v1.import(script, v1.getModule(script, "@rbxts", "services")).RunService;
local l__Metric__2 = v1.import(script, v1.getModule(script, "@easy-games", "game-core").out).Metric;
local l__Flamework__3 = v1.import(script, v1.getModule(script, "@flamework", "core").out).Flamework;
v8[1] = v2.Middleware.Global(function(p1, p2, p3)
	if not p3 then
		return nil;
	end;
	if not l__RunService__1:IsServer() then
		return nil;
	end;
	local u4 = false;
	local function u5(p4)
		if type(p4) == "number" then
			if p4 ~= p4 then
				u4 = true;
			end;
			if math.abs(p4) == math.huge then
				u4 = true;
				return;
			end;
		elseif type(p4) == "table" then
			for v9, v10 in pairs(p4) do
				u5(v10);
			end;
		end;
	end;
	local v11, v12, v13 = ipairs(p2);
	while true do
		v11(v12, v13);
		if not v11 then
			break;
		end;
		v13 = v11;
		u5(v12);	
	end;
	if u4 then
		l__Flamework__3.resolveDependency("@easy-games/game-core:server/services/metrics-service@MetricsService"):publishMetric((l__Metric__2.new("flagged-remote-number-check"):tag("remote-name", p1):tag("place-version", tostring(game.PlaceVersion)):fieldInteger("user", p3.UserId)));
		error("Player " .. p3.Name .. " sent NaN or math.huge over a remote");
	end;
end);
return {
	default = v2.Definitions.Create({
		Leaderboard = v1.import(script, game:GetService("ReplicatedStorage"), "TS", "remote-namespaces", "leaderboard"), 
		CustomMatches = v1.import(script, game:GetService("ReplicatedStorage"), "TS", "remote-namespaces", "custom-matches-remotes"), 
		Locker = v1.import(script, game:GetService("ReplicatedStorage"), "TS", "remote-namespaces", "locker-remotes"), 
		BattlePass = v1.import(script, game:GetService("ReplicatedStorage"), "TS", "remote-namespaces", "battle-pass-remotes").BattlePassRemotesNamespace, 
		SocialConnections = v1.import(script, game:GetService("ReplicatedStorage"), "TS", "remote-namespaces", "social-connections-remotes"), 
		Gift = v1.import(script, game:GetService("ReplicatedStorage"), "TS", "remote-namespaces", "gift-remotes"), 
		ChargeShield = v1.import(script, game:GetService("ReplicatedStorage"), "TS", "remote-namespaces", "charge-shield-remotes"), 
		Update = v1.import(script, game:GetService("ReplicatedStorage"), "TS", "remote-namespaces", "update-remotes").default, 
		Inventory = v1.import(script, game:GetService("ReplicatedStorage"), "TS", "remote-namespaces", "inventory-remotes"), 
		Clans = v1.import(script, game:GetService("ReplicatedStorage"), "TS", "remote-namespaces", "clans-remotes"), 
		VendingMachine = v1.import(script, game:GetService("ReplicatedStorage"), "TS", "items", "vending-machine", "vending-machine-remotes"), 
		SheepHerder = v1.import(script, game:GetService("ReplicatedStorage"), "TS", "games", "bedwars", "kit", "kits", "sheep-herder", "sheep-herder-remotes"), 
		Disaster = v1.import(script, game:GetService("ReplicatedStorage"), "TS", "disaster", "disaster-remotes"), 
		ThemedEvent = v1.import(script, game:GetService("ReplicatedStorage"), "TS", "themed-event", "themed-event-remotes"), 
		Vehicle = v1.import(script, game:GetService("ReplicatedStorage"), "TS", "remote-namespaces", "vehicle-remotes").VehicleRemotes, 
		Helicopter = v1.import(script, game:GetService("ReplicatedStorage"), "TS", "remote-namespaces", "helicopter-remotes").HelicopterRemotes, 
		Gamemode = v1.import(script, game:GetService("ReplicatedStorage"), "TS", "gamemode", "gamemode-remotes"), 
		Event = v1.import(script, game:GetService("ReplicatedStorage"), "TS", "remote-namespaces", "event-remotes").EventRemotes, 
		PirateSceneRemotes = v1.import(script, game:GetService("ReplicatedStorage"), "TS", "remote-namespaces", "pirate-scene-remotes"), 
		BerALbPTddQlkbeq = v2.Definitions.ClientToServerEvent(), 
		hhywXbrkgsim = v2.Definitions.ServerFunction(), 
		umahoqxLlCNgjtlv = v2.Definitions.ClientToServerEvent(), 
		afJecqdogoll = v2.Definitions.ClientToServerEvent(), 
		xnoghdzsjr = v2.Definitions.ClientToServerEvent(), 
		hVTzfnruqhhwbyucrpntdriyywpc = v2.Definitions.ClientToServerEvent(), 
		xrVbpcxeeNocttdcz = v2.Definitions.ClientToServerEvent(), 
		vatvkoThmckqmhHbjyuToammlyslv = v2.Definitions.ClientToServerEvent(), 
		bcOcgpvnMvoGuxtidNqbrRdzoiumkeWc = v2.Definitions.ClientToServerEvent(), 
		smhpDHJrsqaCtCwozycyvoknhmjevlf = v2.Definitions.ClientToServerEvent(), 
		ydfokEzzFwqcabqjhPsUyw = v2.Definitions.ClientToServerEvent(), 
		AutoTurretFired = v2.Definitions.ClientToServerEvent(), 
		kzHhuradpuremfKmFaGqde = v2.Definitions.ClientToServerEvent(), 
		FetchServerRegion = v2.Definitions.ServerFunction(), 
		GetPlayerPermissions = v2.Definitions.ServerFunction(), 
		BanPlayer = v2.Definitions.ServerAsyncFunction(), 
		SelfReport = v2.Definitions.ClientToServerEvent({ l__WrappedTypechecker__6(l__t__4.literal("injection_detected")), v2.Middleware.RateLimit({
				MaxRequestsPerMinute = 1, 
				ErrorHandler = v5
			}) }), 
		PlayerConnect = v2.Definitions.ClientToServerEvent(), 
		PlayerReady = v2.Definitions.ClientToServerEvent(), 
		AnnouncementEvent = v2.Definitions.ServerToClientEvent(), 
		angleChanged = v2.Definitions.ServerToClientEvent(), 
		VoidPortalUsed = v2.Definitions.ServerToClientEvent(), 
		shockWaveRelease = v2.Definitions.ServerToClientEvent(), 
		AutoTurretPlaced = v2.Definitions.ServerToClientEvent(), 
		RocketBeltLaunch = v2.Definitions.ServerToClientEvent(), 
		PirateFlagPlaced = v2.Definitions.ServerToClientEvent(), 
		VoidDragonLanded = v2.Definitions.ServerToClientEvent(), 
		amrfcqrwx = v2.Definitions.ServerToClientEvent(), 
		tGhjyXkjn = v2.Definitions.ServerToClientEvent(), 
		BombExplosion = v2.Definitions.ServerToClientEvent(), 
		rtzOyotwqjxaquPmvKN = v2.Definitions.ServerToClientEvent(), 
		HealthDropBelowThresholdHannah = v2.Definitions.ServerToClientEvent(), 
		HealthHealAboveThresholdHannah = v2.Definitions.ServerToClientEvent(), 
		HannahTeleport = v2.Definitions.ServerToClientEvent(), 
		jNvzCygvrvzdfDglsepn = l__default__3.ServerToClientEvent(), 
		ghmsXticVObzlUrPQxICdjXhsom = l__default__3.ServerToClientEvent(), 
		duUhlnefjQlxnvg = l__default__3.ServerToClientEvent(), 
		Vuhtzwalvtfgh = v2.Definitions.ClientToServerEvent({ l__WrappedTypechecker__6(l__t__4.interface({
				weapon = l__t__4.Instance
			})) }), 
		mqjihsbqkgNB = v2.Definitions.ServerFunction({ l__WrappedTypechecker__6(l__t__4.Instance) }), 
		Bounce = v2.Definitions.ServerToClientEvent(), 
		GroundHit = v2.Definitions.ClientToServerEvent(), 
		WbexvcQsc = v2.Definitions.ClientToServerEvent(), 
		reucpebekVTpJonjwrqlabzrgr = v2.Definitions.ServerFunction(), 
		aeeXryqlrw = v2.Definitions.ServerFunction(), 
		zddu = v2.Definitions.ServerFunction(), 
		LoadMissionData = v2.Definitions.ServerFunction(), 
		InviteToParty = v2.Definitions.ServerFunction(), 
		RemoveFromParty = v2.Definitions.ServerFunction(), 
		JoinParty = v2.Definitions.ServerFunction(), 
		LeaveParty = v2.Definitions.ServerFunction(), 
		RequestPartyInfo = v2.Definitions.ClientToServerEvent(), 
		LeaveQueue = v2.Definitions.ServerFunction(), 
		TeleportToLobby = v2.Definitions.ClientToServerEvent(), 
		ouroWtlZkfiKm = v2.Definitions.ClientToServerEvent(), 
		hhdhPvuciuL = v2.Definitions.ServerFunction(), 
		hsrCnQyjpMb = v2.Definitions.ServerFunction(), 
		kKcOpredjrOiCwHhcR = v2.Definitions.ClientToServerEvent({ v2.Middleware.RateLimit({
				MaxRequestsPerMinute = 30, 
				ErrorHandler = v5
			}) }), 
		rqgdqoiHiIvuqnrjKnyjwhdazvLYfed = v2.Definitions.ClientToServerEvent({ v2.Middleware.RateLimit({
				MaxRequestsPerMinute = 30, 
				ErrorHandler = v5
			}) }), 
		BedwarsUpgradeGenerator = v2.Definitions.ServerFunction(), 
		BedwarsPurchaseItem = v2.Definitions.ServerFunction(), 
		BedwarsPurchaseTeamUpgrade = v2.Definitions.ServerFunction(), 
		BedwarsPurchaseShopCategoryUnlock = v2.Definitions.ServerFunction(), 
		BedwarsHarvestCrop = v2.Definitions.ServerFunction(), 
		TeleportToGame = v2.Definitions.ClientToServerEvent(), 
		RequestKitUpdate = v2.Definitions.ClientToServerEvent(), 
		BedwarsActivateKit = v2.Definitions.ServerFunction(), 
		BedwarsSetUseKitSkin = v2.Definitions.ServerFunction(), 
		BedwarsEquipKitSkin = v2.Definitions.ServerFunction(), 
		nhcjuajelevnrVdpzdo = v2.Definitions.ClientToServerEvent(), 
		ewjbqdjxsOozjzfqOqkosfgZLmZvnukzkrAf = v2.Definitions.ServerFunction(), 
		hxqyc = v2.Definitions.ServerFunction(), 
		cBtrbfxpmD = v2.Definitions.ClientToServerEvent(), 
		wkpcfgeuqdH = v2.Definitions.ClientToServerEvent(), 
		rugpppTxBTobxu = v2.Definitions.ClientToServerEvent(), 
		DuIhgzzwikxdbeg = v2.Definitions.ClientToServerEvent(), 
		ofKdhQriovyueg = v2.Definitions.ClientToServerEvent(), 
		woepriqyRxuchLsxzJgZldzvdpaem = v2.Definitions.ClientToServerEvent(), 
		fhflqqo = v2.Definitions.ClientToServerEvent(), 
		brxiiumfazxafrMmcuKVeuyiqlb = v2.Definitions.ServerFunction(), 
		iMlmui = v2.Definitions.ServerFunction(), 
		mhtryMnnXrpzSfy = v2.Definitions.ServerFunction(), 
		FeQfRuykKghoxsewSyVn = v2.Definitions.ClientToServerEvent(), 
		pdzkteoWsv = v2.Definitions.ClientToServerEvent(), 
		tnenMtbszsQlNdvzryqUexuxHagxjai = v2.Definitions.ClientToServerEvent(), 
		uhJshlaIRlqvbtvKvlhzGwamoS = v2.Definitions.ServerFunction(), 
		efsamrkmGxoqyniwz = v2.Definitions.ClientToServerEvent(), 
		ofuzghinvuihxzOgnMxaoxlu = v2.Definitions.ClientToServerEvent(), 
		kqwltnTn = v2.Definitions.ClientToServerEvent(), 
		ghofXcfHfhqqvpi = v2.Definitions.ClientToServerEvent(), 
		igrhkNpuha = v2.Definitions.ServerFunction(), 
		ipvLyhlqnpjoVgCgNilkovwivi = v2.Definitions.ServerFunction(), 
		sepIzqOGgddvrP = v2.Definitions.ServerFunction(), 
		ebxbvw = v2.Definitions.ServerFunction(), 
		DvlhHmcufymzolVNbfYfuxeizynyozkwvda = v2.Definitions.ServerFunction(), 
		Eqjdfkdznankr = v2.Definitions.ServerFunction(), 
		sVJnmegIjcPcqiaFarkgtuVl = v2.Definitions.ServerFunction(), 
		wndbbmh = v2.Definitions.ServerFunction(), 
		NfseiqwewuerXzpo = v2.Definitions.ServerFunction(), 
		eoizxlocYtgvmfdeVtfhwebch = v2.Definitions.ServerFunction(), 
		oupydqstut = v2.Definitions.ServerFunction(), 
		urbtaqhnBookrvcbaxQmdDioqnuwyoxpbkc = v2.Definitions.ServerFunction(), 
		fyDyikomhzuixpmdxolmivp = v2.Definitions.ServerFunction(), 
		xldwJjwfo = v2.Definitions.ServerFunction(), 
		wjpgqbDqDeumcWqxqkq = v2.Definitions.ServerFunction(), 
		szImtXlnmWmqte = v2.Definitions.ServerFunction(), 
		NxhL = v2.Definitions.ServerFunction(), 
		gdloTYdFcthvBPJCyvozyJrkJdvDwn = v2.Definitions.ClientToServerEvent(), 
		EzmKhrjxcohmkkrieulugrHtxkwpcbpostsoStqaFv = v2.Definitions.ServerToClientEvent(), 
		zXbcnjjpiwnwHtFo = v2.Definitions.ServerToClientEvent(), 
		wicayGezauhrcwpxir = v2.Definitions.ServerToClientEvent(), 
		Ujtptmfwymxooywkdunmvgv = v2.Definitions.ClientToServerEvent(), 
		BylkasgnrrqyzkydNbxncOuPEmEeydkvhos = v2.Definitions.ClientToServerEvent(), 
		AnalyticsReportEvent = v2.Definitions.ClientToServerEvent({ l__WrappedTypechecker__6(l__t__4.literal("ClientReady", "UIButtonPress", "ScreenPress", "DeviceType")) }), 
		qwGrMLwbaOwltoGogbNioxjvmnF = v2.Definitions.ClientToServerEvent(), 
		mbyhjrgxftu = v2.Definitions.ClientToServerEvent(), 
		yse = v2.Definitions.ClientToServerEvent(), 
		hcpxmavYztumMAbrps = v2.Definitions.ClientToServerEvent(), 
		ojdezgoGgozD = v2.Definitions.ClientToServerEvent(), 
		ddvujeCQnvbRahye = v2.Definitions.ClientToServerEvent(), 
		OeozbcplsxgnZXftdf = v2.Definitions.ClientToServerEvent(), 
		bYAqxmhqyeVZtEFhojwm = v2.Definitions.ClientToServerEvent(), 
		vYgmnbsNpnzqBazypehbsoutmhUejwzajzv = v2.Definitions.ClientToServerEvent(), 
		AFeusvud = v2.Definitions.ClientToServerEvent(), 
		vKeehterPzthwoh = v2.Definitions.ClientToServerEvent(), 
		loKloRebbhejmMbkribgb = v2.Definitions.ServerFunction(), 
		Gfoxvgvo = v2.Definitions.ClientToServerEvent(), 
		qpfohXhzawcpjkgS = v2.Definitions.ServerFunction(), 
		hegdLyjsmnHhoo = v2.Definitions.ClientToServerEvent(), 
		uBMyyduqvhuxfs = v2.Definitions.ClientToServerEvent(), 
		ganaDatiutwagge = v2.Definitions.ClientToServerEvent(), 
		jmrmuuMbtraDoaignTfpmpbfsirbhorzd = v2.Definitions.ClientToServerEvent(), 
		eKzgJfjmeLronzkcEw = v2.Definitions.ClientToServerEvent(), 
		mslAhku = v2.Definitions.ClientToServerEvent(), 
		LkjbkqVmcduli = v2.Definitions.ServerFunction(), 
		whtjdkquoxcb = v2.Definitions.ClientToServerEvent(), 
		eixscsPp = v2.Definitions.ServerFunction(), 
		HangGliderUse = v2.Definitions.ClientToServerEvent(), 
		HangGliderClose = v2.Definitions.ClientToServerEvent(), 
		HangGliderStateChanged = v2.Definitions.ServerToClientEvent(), 
		eqksczsMyoCvwwswdaeEo = v2.Definitions.ServerFunction(), 
		dVchsWqpviumeorGlLategwwnmPr = v2.Definitions.ServerFunction(), 
		bzdfzvYqcRTbrowVurgzkn = v2.Definitions.ServerFunction(), 
		OilmdiaZyqfgutlubbev = v2.Definitions.ClientToServerEvent(), 
		ZmuxkhqxGmY = v2.Definitions.ClientToServerEvent(), 
		Mcdlzwvndyydmljpjxku = v2.Definitions.ClientToServerEvent(), 
		icanuytljAtjiitH = v2.Definitions.ClientToServerEvent(), 
		niszhihpwcihua = v2.Definitions.ClientToServerEvent(), 
		GgStgntwmy = v2.Definitions.ClientToServerEvent(), 
		CfkgpkPvoybSkguLforpgROhdjgjqzxFjmL = v2.Definitions.ClientToServerEvent(), 
		immagZhtzNXsOTniM = v2.Definitions.ClientToServerEvent(), 
		mDjvDhgxulLT = v2.Definitions.ClientToServerEvent(), 
		RequestStatusUpdate = v2.Definitions.ClientToServerEvent(), 
		bmlepwevFjqqtm = v2.Definitions.ClientToServerEvent(), 
		tpnSbzwDmOnlkrkdoVtl = v2.Definitions.ClientToServerEvent(), 
		UhiozamMRtdiWggrBjjnmhllmeauGery = v2.Definitions.ClientToServerEvent(), 
		GetServerUnixTime = v2.Definitions.ServerFunction(), 
		DebugGetServerStartedTime = v2.Definitions.ServerFunction(), 
		ChatMakeSystemMessage = v2.Definitions.ServerToClientEvent(), 
		EntityDamageEvent = v2.Definitions.ServerToClientEvent(), 
		EntityDeathEvent = v2.Definitions.ServerToClientEvent(), 
		TeamsUpdateEvent = v2.Definitions.ServerToClientEvent(), 
		RequestTeamsUpdateEvent = v2.Definitions.ClientToServerEvent(), 
		KitsUpdateEvent = v2.Definitions.ServerToClientEvent(), 
		LandmineExplode = v2.Definitions.ServerToClientEvent(), 
		MatchStateEvent = v2.Definitions.ServerToClientEvent(), 
		QueueTypeEvent = v2.Definitions.ServerToClientEvent(), 
		MatchEndEvent = v2.Definitions.ServerToClientEvent(), 
		PlayerEarlyLeaveEvent = v2.Definitions.ServerToClientEvent(), 
		PickupItemEvent = v2.Definitions.ServerToClientEvent(), 
		ExplosionEffect = v2.Definitions.ServerToClientEvent(), 
		RocketLauncherMissileExplode = v2.Definitions.ServerToClientEvent(), 
		PlayTelescopeEffect = v2.Definitions.ServerToClientEvent(), 
		ttsudsjdb = v2.Definitions.ServerToClientEvent(), 
		CarrotRocketExplode = v2.Definitions.ServerToClientEvent(), 
		GlitchedExplodeEffect = v2.Definitions.ServerToClientEvent(), 
		BobaStickEvent = v2.Definitions.ServerToClientEvent(), 
		BombStickEvent = v2.Definitions.ServerToClientEvent(), 
		FireworkStickEvent = v2.Definitions.ServerToClientEvent(), 
		BedwarsShopCategoriesUpdate = v2.Definitions.ServerToClientEvent(), 
		BedwarsSetAllTeamUpgrades = v2.Definitions.ServerToClientEvent(), 
		BedwarsSetTeamUpgradeTier = v2.Definitions.ServerToClientEvent(), 
		ProjectileImpact = v2.Definitions.ServerToClientEvent(), 
		ProjectileLaunch = v2.Definitions.ServerToClientEvent(), 
		ProjectileLaunchClient = v2.Definitions.ServerToClientEvent(), 
		KitUpdate = v2.Definitions.ServerToClientEvent(), 
		HarvestCrop = v2.Definitions.ServerToClientEvent(), 
		BlockFortified = v2.Definitions.ServerToClientEvent(), 
		BillboardRiseEffect = v2.Definitions.ServerToClientEvent(), 
		SpectatePlayer = v2.Definitions.ServerToClientEvent(), 
		StopSpectating = v2.Definitions.ServerToClientEvent(), 
		ShieldBlocked = v2.Definitions.ServerToClientEvent(), 
		GuitarHeal = v2.Definitions.ServerToClientEvent(), 
		GuitarDamage = v2.Definitions.ServerToClientEvent(), 
		EntityHeal = v2.Definitions.ServerToClientEvent(), 
		CannonFired = v2.Definitions.ServerToClientEvent(), 
		BalloonInflated = v2.Definitions.ServerToClientEvent(), 
		BalloonPopped = v2.Definitions.ServerToClientEvent(), 
		BedwarsBedBreak = v2.Definitions.ServerToClientEvent(), 
		BedwarsSuddenDeath = v2.Definitions.ServerToClientEvent(), 
		TreeOrbSpawn = v2.Definitions.ServerToClientEvent(), 
		FireballExplode = v2.Definitions.ServerToClientEvent(), 
		SpawnGrimReaperSoul = v2.Definitions.ServerToClientEvent(), 
		SpawnSpiritOrb = v2.Definitions.ServerToClientEvent(), 
		SpawnTreasureChest = v2.Definitions.ServerToClientEvent(), 
		DestroyTreasureChest = v2.Definitions.ServerToClientEvent(), 
		EntityConsumeGrimReaperSoul = v2.Definitions.ServerToClientEvent(), 
		SpawnWindWalkerOrb = v2.Definitions.ServerToClientEvent(), 
		WindWalkerSpeedUpdate = v2.Definitions.ServerToClientEvent(), 
		WindWalkerSpawned = v2.Definitions.ServerToClientEvent(), 
		WindWalkerEffect = v2.Definitions.ServerToClientEvent(), 
		SpiritAssassinSpeedUpdate = v2.Definitions.ServerToClientEvent(), 
		SpiritAssassinUseSpirit = v2.Definitions.ServerToClientEvent(), 
		SpiritAssassinLanded = v2.Definitions.ServerToClientEvent(), 
		LightningStrike = v2.Definitions.ServerToClientEvent(), 
		AttachElectricOrb = v2.Definitions.ServerToClientEvent(), 
		DetachElectricOrb = v2.Definitions.ServerToClientEvent(), 
		BeeSpawn = v2.Definitions.ServerToClientEvent(), 
		BeeRemoved = v2.Definitions.ServerToClientEvent(), 
		CollectableEntitySpawn = v2.Definitions.ServerToClientEvent(), 
		CollectableEntityRemoved = v2.Definitions.ServerToClientEvent(), 
		RavenExploded = v2.Definitions.ServerToClientEvent(), 
		RobuxPurchaseSuccess = v2.Definitions.ServerToClientEvent(), 
		BedAlarmTriggered = v2.Definitions.ServerToClientEvent(), 
		BountyHunterTargetChanged = v2.Definitions.ServerToClientEvent(), 
		BountyHunterRewardClaimed = v2.Definitions.ServerToClientEvent(), 
		SpiritExplosion = v2.Definitions.ServerToClientEvent(), 
		TeslaTrapTargetsChanged = v2.Definitions.ServerToClientEvent(), 
		rvkuNzwsTnqNtRPerj = v2.Definitions.ServerToClientEvent(), 
		HealingBackpackEffect = v2.Definitions.ServerToClientEvent(), 
		HealingBackpackSound = v2.Definitions.ServerToClientEvent(), 
		VoidArmorShieldTrigger = v2.Definitions.ServerToClientEvent(), 
		AngelProgress = v2.Definitions.ServerToClientEvent(), 
		VoidDragonEnergyIncrease = v2.Definitions.ServerToClientEvent(), 
		AngelOrb = v2.Definitions.ServerToClientEvent(), 
		LumenProgress = v2.Definitions.ServerToClientEvent(), 
		EmberProgress = v2.Definitions.ServerToClientEvent(), 
		PiggyBankIncrement = v2.Definitions.ServerToClientEvent(), 
		PiggyBankPop = v2.Definitions.ServerToClientEvent(), 
		DodoBirdInteraction = v2.Definitions.ServerToClientEvent(), 
		Nuke = v2.Definitions.ServerToClientEvent(), 
		ufdlceppaijrwwonf = v2.Definitions.ServerToClientEvent(), 
		Distraction = v2.Definitions.ServerToClientEvent(), 
		SnapTrapSnared = v2.Definitions.ServerToClientEvent(), 
		SnapTrapMarkConsumed = v2.Definitions.ServerToClientEvent(), 
		FishFound = v2.Definitions.ServerToClientEvent(), 
		FishCaught = v2.Definitions.ServerToClientEvent(), 
		SpearImpactEffect = v2.Definitions.ServerToClientEvent(), 
		OilSpill = v2.Definitions.ServerToClientEvent(), 
		SantaStrafeEffect = v2.Definitions.ServerToClientEvent(), 
		ShowRankedRestriction = v2.Definitions.ServerToClientEvent(), 
		StopwatchActivated = v2.Definitions.ServerToClientEvent(), 
		StopwatchExpired = v2.Definitions.ServerToClientEvent(), 
		MatchRankReport = v2.Definitions.ServerToClientEvent(), 
		Tase = v2.Definitions.ServerToClientEvent(), 
		ForcePlayAnimation = v2.Definitions.ServerToClientEvent(), 
		PirateDigTreasure = v2.Definitions.ServerToClientEvent(), 
		GuidedProjectileDetonated = v2.Definitions.ServerToClientEvent(), 
		Fling = v2.Definitions.ServerToClientEvent(), 
		ParachuteDrop = v2.Definitions.ServerToClientEvent(), 
		HugeLuckyBlockEvent = v2.Definitions.ServerToClientEvent(), 
		StatusEffectActivatedEvent = v2.Definitions.ServerToClientEvent(), 
		IceQueenProgress = v2.Definitions.ServerToClientEvent(), 
		IceQueenFreeze = v2.Definitions.ServerToClientEvent(), 
		FireAspectHit = v2.Definitions.ServerToClientEvent(), 
		StaticHit = v2.Definitions.ServerToClientEvent(), 
		LifeStealHit = v2.Definitions.ServerToClientEvent(), 
		AeryGiveButterfly = v2.Definitions.ServerToClientEvent(), 
		EnchantTableRepair = v2.Definitions.ServerToClientEvent(), 
		EnchantTableResearch = v2.Definitions.ServerToClientEvent(), 
		YetiAbility = v2.Definitions.ServerToClientEvent(), 
		PirateFlagRemoved = v2.Definitions.ServerToClientEvent(), 
		LaunchPadUsed = v2.Definitions.ServerToClientEvent(), 
		VoidAxeLeap = v2.Definitions.ServerToClientEvent(), 
		PlayGameMusic = v2.Definitions.ServerToClientEvent(), 
		FireworkArrowExplode = v2.Definitions.ServerToClientEvent(), 
		OpenLuckyBlock = v2.Definitions.ServerToClientEvent(), 
		TwirlbladeSpin = v2.Definitions.ServerToClientEvent(), 
		HellBladeSpin = v2.Definitions.ServerToClientEvent(), 
		PlunderProc = v2.Definitions.ServerToClientEvent(), 
		MerchantDiscountApplied = v2.Definitions.ServerToClientEvent(), 
		wbuqnSaowmhX = v2.Definitions.ServerToClientEvent(), 
		qfuyvrfjumkyfEhhdecejk = v2.Definitions.ServerToClientEvent(), 
		iekeeolyj = v2.Definitions.ServerToClientEvent(), 
		Petrified = v2.Definitions.ServerToClientEvent(), 
		PetrifiedPlayerDestroyed = v2.Definitions.ServerToClientEvent(), 
		MerchantItems = v2.Definitions.ServerToClientEvent(), 
		ActivateBeast = v2.Definitions.ServerToClientEvent(), 
		RPSEmotePlayed = v2.Definitions.ServerToClientEvent(), 
		CoinTossEmotePlayed = v2.Definitions.ServerToClientEvent(), 
		LHrWogIlnfltyyPzhrp = v2.Definitions.ServerToClientEvent(), 
		pGwtvfVirgoe = v2.Definitions.ServerToClientEvent(), 
		LHrWogIlnfltyyPzhrp = v2.Definitions.ServerToClientEvent(), 
		gidVrcAEvVhaFghnqfkudpmjVrZqLnm = v2.Definitions.ServerToClientEvent(), 
		pocLdfRytd = v2.Definitions.ServerToClientEvent(), 
		lpuxfghpgyphzHoKgsidkt = v2.Definitions.ServerToClientEvent(), 
		atexzFtprezne = v2.Definitions.ServerToClientEvent(), 
		xjpgzlsrBokhrnrzFaxatcbaovxjSzFkCql = v2.Definitions.ServerToClientEvent(), 
		iEnSFwbcagzeknjkdflUL = v2.Definitions.ClientToServerEvent(), 
		kwqxIyzbgklZrtbgxnuiygtPsHeny = v2.Definitions.ServerToClientEvent(), 
		jedotgobvrbxezi = v2.Definitions.ServerToClientEvent(), 
		ufyytnnuoCMeRyt = v2.Definitions.ServerToClientEvent(), 
		tBicjngtEboIrmioruxeA = v2.Definitions.ClientToServerEvent(), 
		HrurxyHOeuerQgnibhqrjkgqisbNdrztgQh = v2.Definitions.ServerToClientEvent(), 
		dnswgaaftwJnsIbwdsgeocvsq = v2.Definitions.ServerToClientEvent(), 
		aPnyatutqlvvu = v2.Definitions.ServerToClientEvent(), 
		dclzHyiWeliyiKfzMtnlekrtz = v2.Definitions.ServerToClientEvent(), 
		shwUsejhXqUvtqt = v2.Definitions.ServerToClientEvent(), 
		jltvhhwrzqgbpkyLHerxbie = v2.Definitions.ServerToClientEvent(), 
		GpkxizguvvdavPlhhqiyuiSmrhvq = v2.Definitions.ServerToClientEvent(), 
		tpyzecVgnpvKhQaqicRfkctzcmd = v2.Definitions.ServerToClientEvent(), 
		nriflswtgkuAlHR = v2.Definitions.ServerToClientEvent(), 
		oefWvgmpWkgwnFgzkup = v2.Definitions.ServerToClientEvent(), 
		daqzEiHlwNlJl = v2.Definitions.ServerToClientEvent(), 
		llmrslgbbEynyK = v2.Definitions.ServerToClientEvent(), 
		oksbFjhbdrzafDtdSmaynqoryvakcigaqip = v2.Definitions.ServerToClientEvent(), 
		pizKqpmywmxoy = v2.Definitions.ServerToClientEvent(), 
		crnrkwr = v2.Definitions.ServerToClientEvent(), 
		jLgzqbzpqehtppxka = v2.Definitions.ServerToClientEvent(), 
		amjeCLirHeyuExWqcz = v2.Definitions.ServerToClientEvent(), 
		zwlcyqbvMwnouiChZndzsn = v2.Definitions.ServerToClientEvent(), 
		cwwIiGykbarv = v2.Definitions.ServerToClientEvent(), 
		panspwtnmeurrwgjfkryRec = v2.Definitions.ServerToClientEvent(), 
		yduunyvqyhncvqWhbryRW = v2.Definitions.ServerToClientEvent(), 
		vlgayrqdlmb = v2.Definitions.ServerToClientEvent(), 
		hcnsbecfwrbuh = v2.Definitions.ServerToClientEvent(), 
		zzZmzafirPplxmxrzczkedljftunM = v2.Definitions.ServerToClientEvent(), 
		sddupApGfeleosisKUeeyctksGdgnqecgxnefm = v2.Definitions.ClientToServerEvent(), 
		Cyzklno = v2.Definitions.ClientToServerEvent(), 
		bDfmnpwgjodqmwle = v2.Definitions.ServerToClientEvent(), 
		VdkCXlzeRx = v2.Definitions.ServerToClientEvent(), 
		ealmmmcwarmwhoaldsldcyewdn = v2.Definitions.ServerFunction(), 
		oKfgieHsjxkhwTekSlwbxjmDOgCanlyfn = v2.Definitions.ServerFunction(), 
		ngqyz = v2.Definitions.ClientToServerEvent(), 
		ueeTcppqfvsmmrFNpp = v2.Definitions.ServerFunction(), 
		iokUtf = v2.Definitions.ServerFunction(), 
		fxdLhdgjohEgzcjpojAawdtnscewnwawobnCu = v2.Definitions.ServerToClientEvent(), 
		ajlllEpfqvyadumTzhzpqiYpoBtWYfml = v2.Definitions.ServerToClientEvent(), 
		emCAwiofanWc = v2.Definitions.ServerToClientEvent(), 
		ukgDabGfisFljkvbqhqvgachzfjmbjmiOrplfqtkjzca = v2.Definitions.ServerToClientEvent(), 
		bicpxiqfpvnmDhvgfzFdieipuxshX = v2.Definitions.ServerToClientEvent(), 
		cyyPeOuwyzrr = v2.Definitions.ServerToClientEvent(), 
		lirzj = v2.Definitions.ServerToClientEvent(), 
		wsMemvdzivjkrjgVbwfUuzhXydmllcw = l__default__3.ServerToClientEvent(), 
		bfTbxuThelspglvciycegzxmzopnacRopjzhiduavhmanm = l__default__3.ServerToClientEvent(), 
		SecondWindActivate = v2.Definitions.ServerToClientEvent(), 
		gmlcMbpvamlBlpnrfrks = v2.Definitions.ServerToClientEvent(), 
		kfOknssfytHntknrdcenhhseafnmq = v2.Definitions.ServerToClientEvent(), 
		fbaQpmiafppovykdxxezBvcVmpmmnZrgH = v2.Definitions.ServerToClientEvent(), 
		GUncqrnvPydjrskdgtolgvmoKpru = v2.Definitions.ServerToClientEvent(), 
		GcQhhVnvaKsbulnkrlsswumTzXcroQefribi = v2.Definitions.ServerToClientEvent(), 
		njlzul = v2.Definitions.ServerToClientEvent(), 
		utobsvqydgyTEtkbtIKs = v2.Definitions.ClientToServerEvent(), 
		GlitchExplosion = v2.Definitions.ServerToClientEvent(), 
		dBJrldvwptP = v2.Definitions.ServerToClientEvent(), 
		wlkVgusEijrnzs = v2.Definitions.ServerFunction(), 
		LooterProc = v2.Definitions.ServerToClientEvent(), 
		rwdPqf = v2.Definitions.ServerToClientEvent(), 
		NaturesEssenceUse = v2.Definitions.ServerToClientEvent(), 
		VoidDragonAction = v2.Definitions.ServerToClientEvent()
	}, v8)
};
