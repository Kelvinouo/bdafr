-- Decompiled with the Synapse X Luau decompiler.

local function u1(p1, p2, p3, p4, p5, p6, p7, p8)
	local v1 = p1 * p5 + p2 * p6 + p3 * p7 + p4 * p8;
	local v2 = p1 * p6 - p2 * p5 + p3 * p8 - p4 * p7;
	local v3 = p1 * p7 - p2 * p8 - p3 * p5 + p4 * p6;
	local v4 = p1 * p8 + p2 * p7 - p3 * p6 - p4 * p5;
	local v5 = math.sqrt(v2 ^ 2 + v3 ^ 2 + v4 ^ 2);
	if v5 > 0.0001 then
		local v6 = math.atan2(v5, v1) / (4 * v5) or 0.38095238095238093 + v1 * (-0.19285714285714287 + v1 * (0.0761904761904762 - v1 / 70));
	else
		v6 = 0.38095238095238093 + v1 * (-0.19285714285714287 + v1 * (0.0761904761904762 - v1 / 70));
	end;
	return v2 * v6, v3 * v6, v4 * v6;
end;
local function u2(p9, p10, p11, p12, p13, p14, p15, p16, p17, p18, p19, p20)
	if p9 * p13 + p10 * p14 + p11 * p15 + p12 * p16 < 0 then
		p9 = -p9;
		p10 = -p10;
		p11 = -p11;
		p12 = -p12;
	end;
	if p17 * p13 + p18 * p14 + p19 * p15 + p20 * p16 < 0 then
		p17 = -p17;
		p18 = -p18;
		p19 = -p19;
		p20 = -p20;
	end;
	local v7, v8, v9 = u1(p9, p10, p11, p12, p13, p14, p15, p16);
	local v10, v11, v12 = u1(p17, p18, p19, p20, p13, p14, p15, p16);
	local v13 = v7 + v10;
	local v14 = v8 + v11;
	local v15 = v9 + v12;
	local v16 = math.sqrt(v13 * v13 + v14 * v14 + v15 * v15);
	local v17 = v16 > 0.0001 and math.sin(v16) / v16 or 1 + v16 * v16 * (v16 * v16 / 120 - 0.16666666666666666);
	local v18 = math.cos(v16);
	local v19 = v17 * v13;
	local v20 = v17 * v14;
	local v21 = v17 * v15;
	return v18 * p13 - v19 * p14 - v20 * p15 - v21 * p16, v19 * p13 + v18 * p14 - v21 * p15 + v20 * p16, v20 * p13 + v21 * p14 + v18 * p15 - v19 * p16, v21 * p13 - v20 * p14 + v19 * p15 + v18 * p16;
end;
local function u3(p21, p22, p23, p24, p25, p26, p27, p28, p29, p30)
	if p30 < 0.9999 then
		local v22 = math.atan2(math.sqrt((p24 * p27 + p22 * p29 - p23 * p28 - p25 * p26) ^ 2 + (p24 * p26 - p22 * p28 + p25 * p27 - p23 * p29) ^ 2 + (p24 * p29 - p22 * p27 - p25 * p28 + p23 * p26) ^ 2), p30);
		local v23 = math.sqrt(1 - p30 * p30);
		local v24 = math.sin((1 - p21) * v22) / v23;
		local v25 = math.sin(p21 * v22) / v23;
	else
		v24 = 1 - p21;
		v25 = p21;
	end;
	return p22 * v24 + p26 * v25, p23 * v24 + p27 * v25, p24 * v24 + p28 * v25, p25 * v24 + p29 * v25;
end;
return function(p31, p32, p33, p34, p35)
	local v26 = p32[1];
	local v27 = p32[2];
	local v28 = p32[3];
	local v29 = p32[4];
	local v30 = p33[1];
	local v31 = p33[2];
	local v32 = p33[3];
	local v33 = p33[4];
	local v34, v35, v36, v37 = u2(p31[1], p31[2], p31[3], p31[4], v26, v27, v28, v29, v30, v31, v32, v33);
	local v38, v39, v40, v41 = u2(v26, v27, v28, v29, v30, v31, v32, v33, p34[1], p34[2], p34[3], p34[4]);
	local v42 = v26 * v30 + v27 * v31 + v28 * v32 + v29 * v33;
	local v43 = math.abs(v34 * v38 + v35 * v39 + v36 * v40 + v37 * v41);
	if v42 < 0 then
		v38 = -v38;
		v39 = -v39;
		v40 = -v40;
		v41 = -v41;
		v30 = -v30;
		v31 = -v31;
		v32 = -v32;
		v33 = -v33;
		v42 = -v42;
	end;
	local v44, v45, v46, v47 = u3(p35, v26, v27, v28, v29, v30, v31, v32, v33, v42);
	local v48, v49, v50, v51 = u3(p35, v34, v35, v36, v37, v38, v39, v40, v41, v43);
	return u3(2 * p35 * (1 - p35), v44, v45, v46, v47, v48, v49, v50, v51, v44 * v48 + v45 * v49 + v46 * v50 + v47 * v51);
end;
