-- Script Hash: 6ebc88b7b420b4d843aae6a4b78d98f78635171bdf073a5289d5396091edae53104fb7e9d3479ae781ba281b99ae5e5d
-- Decompiled with the Synapse X Luau decompiler.

local l__RunService__1 = game:GetService("RunService");
local v2 = Instance.new("Part");
v2.TopSurface = 0;
v2.BottomSurface = 0;
v2.Anchored = true;
v2.CanCollide = false;
v2.Locked = true;
v2.CastShadow = false;
v2.Shape = "Cylinder";
v2.Name = "BoltPart";
v2.Material = Enum.Material.Neon;
v2.Color = Color3.new(1, 1, 1);
v2.Transparency = 1;
local v3 = require(script.PartCache:WaitForChild("PartCache")).new(v2, 50);
v3:SetCacheParent(game:GetService("Workspace").Terrain);
local v4 = {
	__type = "LightningBolt"
};
v4.__index = v4;
local function u1(p1, p2, p3, p4, p5)
	return p2 * (1 - p1) ^ 3 + p3 * 3 * p1 * (1 - p1) ^ 2 + p4 * 3 * (1 - p1) * p1 ^ 2 + p5 * p1 ^ 3;
end;
local function u2(p6, p7, p8, p9, p10, p11, p12)
	return math.clamp(p9 / (2 * p10) - math.abs((p6 - p7 * p8 + 0.5 * p9) / p10), p11, p12);
end;
local function u3(p13)
	return math.exp(-5000 * (p13 - 0.5) ^ 10);
end;
local l__os_clock__4 = os.clock;
local u5 = {};
function v4.new(p14, p15, p16)
	local v5 = setmetatable({}, v4);
	p16 = p16 and 30;
	v5.Enabled = true;
	v5.Attachment0 = p14;
	v5.Attachment1 = p15;
	v5.CurveSize0 = 0;
	v5.CurveSize1 = 0;
	v5.MinRadius = 0;
	v5.MaxRadius = 2.4;
	v5.Frequency = 1;
	v5.AnimationSpeed = 7;
	v5.Thickness = 1;
	v5.MinThicknessMultiplier = 0.2;
	v5.MaxThicknessMultiplier = 1;
	v5.MinTransparency = 0;
	v5.MaxTransparency = 1;
	v5.PulseSpeed = 2;
	v5.PulseLength = 1000000;
	v5.FadeLength = 0.2;
	v5.ContractFrom = 0.5;
	v5.Color = Color3.new(1, 1, 1);
	v5.ColorOffsetSpeed = 3;
	v5.SpaceCurveFunction = u1;
	v5.OpacityProfileFunction = u2;
	v5.RadialProfileFunction = u3;
	v5._Parts = {};
	for v6 = 1, p16 do
		v5._Parts[v6] = v3:GetPart();
	end;
	v5._PartsHidden = false;
	v5._DisabledTransparency = 1;
	v5._StartT = l__os_clock__4();
	v5._RanNum = math.random() * 100;
	v5._RefIndex = #u5 + 1;
	u5[v5._RefIndex] = v5;
	return v5;
end;
function v4.Destroy(p17)
	u5[p17._RefIndex] = nil;
	for v7 = 1, #p17._Parts do
		v3:ReturnPart(p17._Parts[v7]);
	end;
	p17 = nil;
end;
function v4.DestroyDissipate(p18, p19, p20)
	p19 = p19 and 0.2;
	p20 = p20 and 0.5;
	local u6 = l__os_clock__4();
	local l__MinThicknessMultiplier__7 = p18.MinThicknessMultiplier;
	local l__MinTransparency__8 = p18.MinTransparency;
	local l__ContractFrom__9 = p18.ContractFrom;
	local u10 = p18.ContractFrom + 1 / (#p18._Parts * p18.FadeLength);
	local l__MaxRadius__11 = p18.MaxRadius;
	local u12 = nil;
	u12 = l__RunService__1.Heartbeat:Connect(function()
		local v8 = l__os_clock__4() - u6;
		p18.MinThicknessMultiplier = l__MinThicknessMultiplier__7 + (-2 - l__MinThicknessMultiplier__7) * v8 / p19;
		if v8 < p19 * 0.4 then
			p18.MinTransparency = l__MinTransparency__8 + (l__ContractFrom__9 - l__MinTransparency__8) * (v8 / (p19 * 0.4));
			return;
		end;
		if not (v8 < p19) then
			if l__os_clock__4() - p18._StartT < (p18.PulseLength + 1) / p18.PulseSpeed then
				p18:Destroy();
			end;
			u12:Disconnect();
			u12 = nil;
			return;
		end;
		local v9 = (v8 - p19 * 0.4) / (p19 * 0.6);
		p18.MinTransparency = l__ContractFrom__9 + (u10 - l__ContractFrom__9) * v9;
		p18.MaxRadius = l__MaxRadius__11 * (1 + p20 * v9);
		p18.MinRadius = p18.MinRadius + (p18.MaxRadius - p18.MinRadius) * v9;
	end);
end;
local u13 = CFrame.lookAt(Vector3.new(), Vector3.new(1, 0, 0)):inverse();
function v4._UpdateGeometry(p21, p22, p23, p24, p25, p26, p27)
	local v10 = p21.OpacityProfileFunction(p23, p24, p21.PulseSpeed, p21.PulseLength, p21.FadeLength, 1 - p21.MaxTransparency, 1 - p21.MinTransparency);
	local v11 = p21.Thickness * p25 * v10;
	local v12 = v11 > 0 and v10 or 0;
	local v13 = 1 - p21.ContractFrom;
	local v14 = #p21._Parts;
	if v13 < v12 then
		p22.Size = Vector3.new((p27 - p26).Magnitude, v11, v11);
		p22.CFrame = CFrame.lookAt((p26 + p27) * 0.5, p27) * u13;
		p22.Transparency = 1 - v12;
		return;
	end;
	if not (v13 - 1 / (v14 * p21.FadeLength) < v12) then
		p22.Transparency = 1;
		return;
	end;
	if p23 < p24 * p21.PulseSpeed - 0.5 * p21.PulseLength then
		local v15 = 1;
	else
		v15 = -1;
	end;
	local v16 = (1 - (v12 - (v13 - 1 / (v14 * p21.FadeLength))) * v14 * p21.FadeLength) * v15;
	p22.Size = Vector3.new((1 - math.abs(v16)) * (p27 - p26).Magnitude, v11, v11);
	p22.CFrame = CFrame.lookAt(p26 + (p27 - p26) * (math.max(0, v16) + 0.5 * (1 - math.abs(v16))), p27) * u13;
	p22.Transparency = 1 - v12;
end;
function v4._UpdateColor(p28, p29, p30, p31)
	if typeof(p28.Color) == "Color3" then
		p29.Color = p28.Color;
		return;
	end;
	local v17 = (p28._RanNum + p30 - p31 * p28.ColorOffsetSpeed) % 1;
	local l__Keypoints__18 = p28.Color.Keypoints;
	for v19 = 1, #l__Keypoints__18 - 1 do
		if l__Keypoints__18[v19].Time < v17 and v17 < l__Keypoints__18[v19 + 1].Time then
			p29.Color = l__Keypoints__18[v19].Value:lerp(l__Keypoints__18[v19 + 1].Value, (v17 - l__Keypoints__18[v19].Time) / (l__Keypoints__18[v19 + 1].Time - l__Keypoints__18[v19].Time));
			return;
		end;
	end;
end;
function v4._Disable(p32)
	p32.Enabled = false;
	for v20, v21 in ipairs(p32._Parts) do
		v21.Transparency = p32._DisabledTransparency;
	end;
end;
local function u14(p33, p34, p35, p36, p37)
	return p36 + (p37 - p36) * (math.noise(p33, p34, p35) + 0.5);
end;
local u15 = math.cos(math.rad(90));
l__RunService__1.Heartbeat:Connect(function()
	debug.profilebegin("LightningBolt");
	for v22, v23 in pairs(u5) do
		if v23.Enabled == true then
			v23._PartsHidden = false;
			local l__MinRadius__24 = v23.MinRadius;
			local l__MaxRadius__25 = v23.MaxRadius;
			local l___Parts__26 = v23._Parts;
			local v27 = #l___Parts__26;
			local l___RanNum__28 = v23._RanNum;
			local l__AnimationSpeed__29 = v23.AnimationSpeed;
			local l__Frequency__30 = v23.Frequency;
			local l__MinThicknessMultiplier__31 = v23.MinThicknessMultiplier;
			local l__MaxThicknessMultiplier__32 = v23.MaxThicknessMultiplier;
			local v33 = l__os_clock__4() - v23._StartT;
			local l__SpaceCurveFunction__34 = v23.SpaceCurveFunction;
			local l__RadialProfileFunction__35 = v23.RadialProfileFunction;
			local l__Attachment0__36 = v23.Attachment0;
			local l__Attachment1__37 = v23.Attachment1;
			local l__WorldPosition__38 = l__Attachment0__36.WorldPosition;
			local v39 = l__Attachment0__36.WorldPosition + l__Attachment0__36.WorldAxis * v23.CurveSize0;
			local v40 = l__Attachment1__37.WorldPosition - l__Attachment1__37.WorldAxis * v23.CurveSize1;
			local l__WorldPosition__41 = l__Attachment1__37.WorldPosition;
			local v42 = l__SpaceCurveFunction__34(0, l__WorldPosition__38, v39, v40, l__WorldPosition__41);
			local v43 = v42;
			local v44 = v42;
			if v33 < (v23.PulseLength + 1) / v23.PulseSpeed then
				for v45 = 1, v27 do
					local v46 = l___Parts__26[v45];
					local v47 = v45 / v27;
					local v48 = l__AnimationSpeed__29 * -v33 + l__Frequency__30 * 10 * v47 - 0.2 + l___RanNum__28 * 4;
					local v49 = 5 * (l__AnimationSpeed__29 * 0.01 * -v33 / 10 + l__Frequency__30 * v47) + l___RanNum__28 * 4;
					local v50 = u14(5 * v48, 1.5, 1 * v49, 0, 0.2 * math.pi) + u14(0.5 * v48, 1.5, 0.1 * v49, 0, 1.8 * math.pi);
					local v51 = u14(3.4, v49, v48, l__MinRadius__24, l__MaxRadius__25) * l__RadialProfileFunction__35(v47);
					local v52 = l__SpaceCurveFunction__34(v47, l__WorldPosition__38, v39, v40, l__WorldPosition__41);
					if v45 ~= v27 then
						local v53 = (CFrame.new(v44, v52) * CFrame.Angles(0, 0, v50) * CFrame.Angles(math.acos(math.clamp(u14(v49, v48, 2.7, u15, 1), -1, 1)), 0, 0) * CFrame.new(0, 0, -v51)).Position or v52;
					else
						v53 = v52;
					end;
					v23:_UpdateGeometry(v46, v47, v33, u14(2.3, v49, v48, l__MinThicknessMultiplier__31, l__MaxThicknessMultiplier__32), v43, v53);
					v23:_UpdateColor(v46, v47, v33);
					v43 = v53;
					v44 = v52;
				end;
			else
				v23:Destroy();
			end;
		elseif v23._PartsHidden == false then
			v23._PartsHidden = true;
			v23:_Disable();
		end;
	end;
	debug.profileend();
end);
return v4;
