-- Decompiled with the Synapse X Luau decompiler.

local v1 = {
	queues = {}, 
	sortedMaps = {}
};
v1.__index = v1;
local u1 = require(script.MockMemoryStoreSortedMap);
function v1.GetSortedMap(p1, p2)
	local v2 = p1.sortedMaps[p2];
	if v2 == nil then
		v2 = u1.new(p2);
		p1.sortedMaps[p2] = v2;
	end;
	return v2;
end;
local u2 = require(script.MockMemoryStoreUtils);
local u3 = require(script.MockMemoryStoreQueue);
function v1.GetQueue(p3, p4, p5)
	u2.WarnOnce("MockMemoryStoreService queue is still in development, and may not work accurately just yet.");
	local v3 = p3.queues[p4];
	if v3 == nil then
		v3 = u3.new(p4, p5);
		p3.queues[p4] = v3;
	end;
	return v3;
end;
local u4 = require(script.MockMemoryStoreQuota);
game:GetService("RunService").Heartbeat:Connect(function(p6)
	u4:UpdateQuota();
	for v4, v5 in pairs(v1.sortedMaps) do
		for v6, v7 in pairs(v5.mapValues) do
			if v7.expiration <= tick() then
				v5:RemoveExpiringKey(v6);
			end;
		end;
	end;
	for v8, v9 in pairs(v1.queues) do
		v9:HandleTimeouts();
	end;
end);
return v1;
