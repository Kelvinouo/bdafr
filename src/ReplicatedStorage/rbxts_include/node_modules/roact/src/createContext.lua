-- Decompiled with the Synapse X Luau decompiler.

local u1 = require(script.Parent.createSignal);
local u2 = require(script.Parent.Component);
local u3 = require(script.Parent.createFragment);
local u4 = require(script.Parent.PropMarkers.Children);
local v1 = {};
v1.__index = v1;
local u5 = require(script.Parent.Symbol);
function v1.new(p1)
	return setmetatable({
		defaultValue = p1, 
		key = u5.named("ContextKey")
	}, v1);
end;
function v1.__tostring(p2)
	return "RoactContext";
end;
local function u6(p3)
	local v2 = u2:extend("Provider");
	function v2.init(p4, p5)
		p4.contextEntry = {
			value = p5.value, 
			onUpdate = u1()
		};
		p4:__addContext(p3.key, p4.contextEntry);
	end;
	function v2.willUpdate(p6, p7)
		if p7.value ~= p6.props.value then
			p6.contextEntry.value = p7.value;
		end;
	end;
	function v2.didUpdate(p8, p9)
		if p9.value ~= p8.props.value then
			p8.contextEntry.onUpdate:fire(p8.props.value);
		end;
	end;
	function v2.render(p10)
		return u3(p10.props[u4]);
	end;
	return v2;
end;
local function u7(p11)
	local v3 = u2:extend("Consumer");
	function v3.validateProps(p12)
		if type(p12.render) ~= "function" then
			return false, "Consumer expects a `render` function";
		end;
		return true;
	end;
	function v3.init(p13, p14)
		p13.contextEntry = p13:__getContext(p11.key);
	end;
	function v3.render(p15)
		if p15.contextEntry ~= nil then
			local v4 = p15.contextEntry.value;
		else
			v4 = p11.defaultValue;
		end;
		return p15.props.render(v4);
	end;
	function v3.didUpdate(p16)
		if p16.contextEntry ~= nil then
			p16.lastValue = p16.contextEntry.value;
		end;
	end;
	function v3.didMount(p17)
		if p17.contextEntry ~= nil then
			p17.disconnect = p17.contextEntry.onUpdate:subscribe(function(p18)
				if p18 ~= p17.lastValue then
					p17:setState({});
				end;
			end);
		end;
	end;
	function v3.willUnmount(p19)
		if p19.disconnect ~= nil then
			p19.disconnect();
		end;
	end;
	return v3;
end;
return function(p20)
	local v5 = v1.new(p20);
	return {
		Provider = u6(v5), 
		Consumer = u7(v5)
	};
end;
