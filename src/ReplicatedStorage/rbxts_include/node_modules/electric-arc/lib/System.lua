-- Decompiled with the Synapse X Luau decompiler.

local v1 = {};
local l__RunService__2 = game:GetService("RunService");
local v3 = require(script.Parent.Constants);
local v4 = require(script.Parent.Util);
local l__PlayerGui__5 = game:GetService("Players").LocalPlayer:WaitForChild("PlayerGui");
local v6 = l__PlayerGui__5:FindFirstChild(v3.ARCS_MAIN_FOLDER);
if not v6 then
	v6 = Instance.new("ScreenGui");
	v6.Name = v3.ARCS_MAIN_FOLDER;
	v6.Parent = l__PlayerGui__5;
end;
v6.ResetOnSpawn = false;
local v7 = workspace:FindFirstChild(v3.ARCS_MAIN_FOLDER);
if not v7 then
	v7 = Instance.new("Folder");
	v7.Name = v3.ARCS_MAIN_FOLDER;
	v7.Parent = workspace;
end;
local v8 = Vector3.new(0, 0, 0);
local v9 = Vector3.new(0, 0, 1);
local v10 = Vector3.new(1, 0, 0);
local v11 = tick();
local u1 = 12;
local l__math_min__2 = math.min;
local l__math_max__3 = math.max;
local l__math_floor__4 = math.floor;
local l__math_random__5 = math.random;
local u6 = math.pi * 2;
local l__CFrame_Angles__7 = CFrame.Angles;
local l__math_abs__8 = math.abs;
local l__Cross__9 = v8.Cross;
local l__Vector2_new__10 = Vector2.new;
local l__CFrame_new__11 = CFrame.new;
local l__math_rad__12 = math.rad;
local u13 = {};
local u14 = {};
local l__Vector3_new__15 = Vector3.new;
local l__Dot__16 = v8.Dot;
local l__math_acos__17 = math.acos;
local u18 = 60;
local function u19(p1)
	local v12 = nil;
	local l__step__13 = p1.step;
	local l__totalSteps__14 = p1.totalSteps;
	local l__brightness__15 = p1.brightness;
	local l__axisKeyPoints0__16 = p1.axisKeyPoints0;
	local l__axisKeyPoints1__17 = p1.axisKeyPoints1;
	local l__pathT0__18 = p1.pathT0;
	local l__pathT1__19 = p1.pathT1;
	for v20 = 1, p1.arcRenderAmount do
		local l__arc__21 = p1.arc;
		if l__step__13[l__arc__21] == 0 then
			local v22 = nil;
			local v23 = l__math_floor__4(l__math_max__3(2, u1 * l__math_min__2(1, v3.SEGMENT_THROTTLING_DISTANCE / p1.distance)));
			p1.amountSegments[l__arc__21] = v23;
			if l__math_random__5() < v3.RARE_CHANCE then
				local v24 = 1;
			else
				v24 = 0;
			end;
			l__totalSteps__14[l__arc__21] = (v3.TWEEN_STEPS_MIN + l__math_floor__4(l__math_random__5() * (v3.TWEEN_STEPS_MAX - v3.TWEEN_STEPS_MIN))) * (1 + v24 * (v3.RARE_CHANCE_DURATION_MULT - 1));
			if v24 > 0 then
				local v25 = 1;
			else
				v25 = l__math_random__5();
			end;
			l__brightness__15[l__arc__21] = v25;
			local v26 = 0.025 * (l__totalSteps__14[l__arc__21] / v3.TWEEN_STEPS_MAX) + 0.05 * (1 + l__math_random__5());
			v22 = l__math_random__5() * u6;
			l__axisKeyPoints0__16[1] = 0;
			l__axisKeyPoints1__17[1] = 0;
			for v27 = 2, v23 do
				l__axisKeyPoints0__16[v27] = l__axisKeyPoints0__16[v27 - 1] + 1 + l__math_random__5() * v3.SEGMENT_MINMAX_RATIO;
				l__axisKeyPoints1__17[v27] = l__axisKeyPoints1__17[v27 - 1] + 1 + l__math_random__5() * v3.SEGMENT_MINMAX_RATIO;
			end;
			for v28 = 2, v23 do
				l__axisKeyPoints0__16[v28] = l__axisKeyPoints0__16[v28] / l__axisKeyPoints0__16[v23];
				l__axisKeyPoints1__17[v28] = l__axisKeyPoints1__17[v28] / l__axisKeyPoints1__17[v23];
			end;
			for v29 = 1, v23 do
				l__pathT0__18[l__arc__21][v29] = l__axisKeyPoints0__16[v29] * v10 + l__math_min__2(v26 * 0.5, (0.5 - l__math_abs__8(0.5 - l__axisKeyPoints0__16[v29])) * 4 * v26 * (0.25 + 0.75 * l__math_random__5())) * (l__CFrame_Angles__7(v22, 0, 0) * v9);
				v22 = v22 + l__math_random__5(-1, 1) * v3.SEGMENT_ANGULAR_CHANGE_MAX;
			end;
			local v30 = 1 + 0.5 * (l__totalSteps__14[l__arc__21] - v3.TWEEN_STEPS_MIN) / (v3.TWEEN_STEPS_MAX * v3.RARE_CHANCE_DURATION_MULT - v3.TWEEN_STEPS_MIN);
			for v31 = 1, v23 do
				l__pathT1__19[l__arc__21][v31] = l__axisKeyPoints1__17[v31] * v10 + l__math_min__2(v26 * 0.5 * v30, (0.5 - l__math_abs__8(0.5 - l__axisKeyPoints1__17[v31])) * 4 * v26 * (0.25 + 0.75 * l__math_random__5())) * (l__CFrame_Angles__7(local v32, 0, 0) * v9);
				v32 = v32 + l__math_random__5(-1, 1) * v3.SEGMENT_ANGULAR_CHANGE_MAX;
				p1.segments[v31 + (l__arc__21 - 1) * v3.SEGMENT_PER_ARC_MAX].Parent = p1.segmentsFolder;
			end;
			for v33 = v23 + 1, v3.SEGMENT_PER_ARC_MAX do
				p1.segments[v33 + (l__arc__21 - 1) * v3.SEGMENT_PER_ARC_MAX].Parent = nil;
			end;
		else
			local v34 = p1.amountSegments[l__arc__21];
		end;
		local v35 = v8;
		local v36 = l__step__13[l__arc__21] / (l__totalSteps__14[l__arc__21] - 1);
		v12 = 0 + l__brightness__15[l__arc__21];
		local v37 = p1.color:lerp(p1.topColor, l__brightness__15[l__arc__21]);
		local v38 = math.clamp(p1.fatnessMultiplier * p1.length * v3.ARC_FATNESS_SIZE_MODIFIER * (v3.ARC_STRONG_BRIGHTNESS_THRESHOLD < l__brightness__15[l__arc__21] and v3.ARC_FATNESS_STRONG_MULTIPLIER or 1), v3.ARC_MIN_FATNESS, v3.ARC_MAX_FATNESS);
		local v39 = p1.cframe:inverse() * workspace.CurrentCamera.CFrame.p;
		for v40 = 1, v34 do
			local v41 = p1.length * (v36 * l__pathT1__19[l__arc__21][v40] + (1 - v36) * l__pathT0__18[l__arc__21][v40]);
			local v42 = p1.segments[v40 + (l__arc__21 - 1) * v3.SEGMENT_PER_ARC_MAX];
			local v43 = v41 - v35;
			local v44 = (v35 + v41) / 2;
			local l__unit__45 = v43.unit;
			local l__unit__46 = l__Cross__9(v39 - v44, l__unit__45).unit;
			local l__unit__47 = l__Cross__9(l__unit__46, l__unit__45).unit;
			v42.Size = l__Vector2_new__10(v38, v43.magnitude + v38 * v3.ARC_FATNESS_OVERLAP_RATIO);
			v42.Color3 = v37;
			v42.CFrame = l__CFrame_new__11(v44.x, v44.y, v44.z, l__unit__46.x, l__unit__45.x, l__unit__47.x, l__unit__46.y, l__unit__45.y, l__unit__47.y, l__unit__46.z, l__unit__45.z, l__unit__47.z);
			v35 = v41;
		end;
		l__step__13[l__arc__21] = (l__step__13[l__arc__21] + 1) % l__totalSteps__14[l__arc__21];
		p1.arc = l__arc__21 % p1.numArcs + 1;
	end;
	p1.part.Emitter.PointLight.Brightness = v12 / p1.numArcs;
	p1.arcRenderAmount = p1.arcRenderAmount % 1;
end;
local u20 = 0;
local u21 = v11;
local u22 = 0.5;
local u23 = v3.SEGMENT_PER_ARC_MAX - v3.SEGMENT_PER_ARC_MIN;
local u24 = v3.THROTTLE_DISTANCE_MODIFIER_MAX - v3.THROTTLE_DISTANCE_MODIFIER_MIN;
local u25 = 0;
local u26 = nil;
local function u27()
	local l__CurrentCamera__48 = workspace.CurrentCamera;
	local l__p__49 = l__CurrentCamera__48.CFrame.p;
	local l__lookVector__50 = l__CurrentCamera__48.CFrame.lookVector;
	local v51 = v3.FOV_FUDGE_FACTOR * l__math_rad__12(l__CurrentCamera__48.FieldOfView * l__CurrentCamera__48.ViewportSize.x / l__CurrentCamera__48.ViewportSize.y) / 2;
	for v52, v53 in pairs(u13) do
		local l__WorldPosition__54 = v52.source.WorldPosition;
		local v55 = v52.drain.WorldPosition - l__WorldPosition__54;
		if v55.magnitude < 0.001 then
			v55 = Vector3.new(0, 0, -0.001);
		end;
		v52.length = v55.magnitude;
		v52.cframe = v4.makeOrientation(l__WorldPosition__54, v55);
		v52.part.CFrame = v52.cframe;
		v52.part.Emitter.CFrame = CFrame.new(v52.length / 2, 0, 0);
		v52.part.Emitter.PointLight.Range = v52.length;
	end;
	for v56, v57 in pairs(u14) do
		local v58 = v56.cframe.p - l__p__49;
		local v59 = v56.cframe * l__Vector3_new__15(v56.length, 0, 0) - l__p__49;
		if v51 < l__math_acos__17(l__Dot__16(v58.unit, l__lookVector__50)) and v51 < l__math_acos__17(l__Dot__16(v59.unit, l__lookVector__50)) then
			if v56.visible then
				v56.visible = false;
				v56.segmentsFolder.Parent = nil;
			end;
		elseif not v56.visible then
			v56.visible = true;
			v56.segmentsFolder.Parent = v6;
		end;
		v56.distance = (v58.magnitude + v59.magnitude) / 2;
	end;
	for v60, v61 in pairs(u14) do
		if v60.visible then
			if v60.changed then
				v60.part.CFrame = v60.cframe;
				v60.part.Emitter.CFrame = CFrame.new(v60.length / 2, 0, 0);
				v60.part.Emitter.PointLight.Range = v60.length;
				v60.changed = false;
			end;
			if v60.distance < v3.MAX_DISTANCE then
				v60.arcRenderAmount = v60.arcRenderAmount + l__math_min__2(v60.numArcs / 3, v3.ARCS_PER_UPDATE * l__math_min__2(1, u18 / v60.distance));
				u19(v60);
			end;
		end;
	end;
	u20 = u20 + 1;
	local v62 = tick() - u21;
	if v3.AUTO_THROTTLE_FRAME_INTERVAL < v62 then
		u22 = l__math_max__3(0, l__math_min__2(1, u22 + v3.AUTO_THROTTLE_INCREMENT * (u20 / v62 - v3.AUTO_THROTTLE_TARGET)));
		u1 = l__math_floor__4(v3.SEGMENT_PER_ARC_MIN + u23 * u22 + 0.5);
		u18 = v3.THROTTLE_DISTANCE_MODIFIER_MIN + u24 * u22;
		u20 = 0;
		u21 = tick();
	end;
end;
local function u28()
	if u25 <= 0 then
		if not u26 then
			return;
		end;
	else
		if not u26 then
			u26 = l__RunService__2.Heartbeat:Connect(u27);
		end;
		return;
	end;
	u26:Disconnect();
	u26 = nil;
end;
function v1.add(p2)
	if not u14[p2] then
		u14[p2] = true;
		u25 = u25 + 1;
		p2.segmentsFolder.Parent = v6;
		p2.part.Parent = v7;
		if p2.dynamic then
			u13[p2] = true;
		end;
		u28();
	end;
end;
function v1.contains(p3)
	return u14[p3] ~= nil;
end;
function v1.remove(p4)
	if u14[p4] then
		u14[p4] = nil;
		u13[p4] = nil;
		u25 = u25 - 1;
		p4.segmentsFolder.Parent = nil;
		p4.part.Parent = nil;
		u28();
	end;
end;
return v1;
