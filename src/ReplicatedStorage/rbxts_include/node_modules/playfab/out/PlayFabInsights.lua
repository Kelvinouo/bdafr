-- Decompiled with the Synapse X Luau decompiler.

local v1 = {
	settings = require(script.Parent.PlayFabSettings).settings
};
local u1 = require(script.Parent.Promise);
local u2 = require(script.Parent.IPlayFabHttps);
function v1.GetDetails(p1, p2, p3)
	return u1.new(function(p4, p5)
		if not p2 then
			p5("Must provide an entityToken to call this method");
		end;
		u2.MakePlayFabApiCall("/Insights/GetDetails", p3 or {}, "X-EntityToken", p2, p4, p5);
	end);
end;
function v1.GetLimits(p6, p7, p8)
	return u1.new(function(p9, p10)
		if not p7 then
			p10("Must provide an entityToken to call this method");
		end;
		u2.MakePlayFabApiCall("/Insights/GetLimits", p8 or {}, "X-EntityToken", p7, p9, p10);
	end);
end;
function v1.GetOperationStatus(p11, p12, p13)
	return u1.new(function(p14, p15)
		if not p12 then
			p15("Must provide an entityToken to call this method");
		end;
		u2.MakePlayFabApiCall("/Insights/GetOperationStatus", p13 or {}, "X-EntityToken", p12, p14, p15);
	end);
end;
function v1.GetPendingOperations(p16, p17, p18)
	return u1.new(function(p19, p20)
		if not p17 then
			p20("Must provide an entityToken to call this method");
		end;
		u2.MakePlayFabApiCall("/Insights/GetPendingOperations", p18 or {}, "X-EntityToken", p17, p19, p20);
	end);
end;
function v1.SetPerformance(p21, p22, p23)
	return u1.new(function(p24, p25)
		if not p22 then
			p25("Must provide an entityToken to call this method");
		end;
		u2.MakePlayFabApiCall("/Insights/SetPerformance", p23 or {}, "X-EntityToken", p22, p24, p25);
	end);
end;
function v1.SetStorageRetention(p26, p27, p28)
	return u1.new(function(p29, p30)
		if not p27 then
			p30("Must provide an entityToken to call this method");
		end;
		u2.MakePlayFabApiCall("/Insights/SetStorageRetention", p28 or {}, "X-EntityToken", p27, p29, p30);
	end);
end;
return v1;
