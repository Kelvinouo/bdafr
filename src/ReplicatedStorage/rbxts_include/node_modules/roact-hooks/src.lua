-- Decompiled with the Synapse X Luau decompiler.

local v1 = {};
local u1 = require(script.createUseEffect);
local u2 = require(script.createUseState);
local u3 = require(script.createUseValue);
local u4 = require(script.createUseBinding);
local u5 = require(script.createUseContext);
local u6 = require(script.createUseMemo);
local u7 = require(script.createUseCallback);
local u8 = require(script.createUseReducer);
local function u9(p1, p2)
	local v2 = u1(p2);
	local v3 = u2(p2);
	local v4 = u3(p2);
	local v5 = u6(v4);
	local v6 = u7(v5);
	return {
		useBinding = u4(p1, v4), 
		useCallback = v6, 
		useContext = u5(p2, v2, v3), 
		useEffect = v2, 
		useMemo = v5, 
		useReducer = u8(v6, v3), 
		useState = v3, 
		useValue = v4
	};
end;
function v1.new(p3)
	return function(p4, p5)
		assert(typeof(p4) == "function", "Hooked components must be functions.");
		if p5 == nil then
			p5 = {};
		end;
		local l__componentType__7 = p5.componentType;
		local v8 = p5.name or debug.info(p4, "n");
		local v9 = nil;
		if l__componentType__7 == nil or l__componentType__7 == "Component" then
			v9 = p3.Component:extend(v8);
		elseif l__componentType__7 == "PureComponent" then
			v9 = p3.PureComponent:extend(v8);
		else
			error(string.format("'%s' is not a valid componentType. componentType must either be nil, 'Component', or 'PureComponent'", tostring(l__componentType__7)));
		end;
		v9.defaultProps = p5.defaultProps;
		v9.validateProps = p5.validateProps;
		function v9.init(p6)
			p6.defaultStateValues = {};
			p6.effectDependencies = {};
			p6.effects = {};
			p6.unmountEffects = {};
			p6.hooks = u9(p3, p6);
		end;
		function v9.runEffects(p7)
			for v10 = 1, p7.hookCounter do
				local v11 = p7.effects[v10];
				if v11 ~= nil then
					local v12 = nil;
					local v13 = nil;
					local v14 = nil;
					local v15 = nil;
					local v16 = nil;
					local v17 = nil;
					local v18 = nil;
					local v19 = nil;
					local v20 = nil;
					local v21 = nil;
					local v22 = nil;
					local v23 = nil;
					local v24 = nil;
					local v25 = nil;
					local v26 = nil;
					local v27 = nil;
					local v28 = nil;
					local v29, v30 = unpack(v11);
					if v30 ~= nil then
						local v31 = p7.effectDependencies[v10];
						if v31 ~= nil then
							local v32 = false;
							for v33, v34 in pairs(v30) do
								if v31[v33] ~= v34 then
									v32 = true;
									break;
								end;
							end;
							if v32 then
								p7.effectDependencies[v10] = v30;
								v12 = "unmountEffects";
								v13 = p7;
								v14 = v12;
								v15 = v13[v14];
								v16 = v15;
								v17 = v10;
								v18 = v16[v17];
								local v35 = nil;
								v19 = v18;
								v20 = v35;
								if v19 ~= v20 then
									v18();
								end;
								local v36 = "unmountEffects";
								v21 = p7;
								v22 = v36;
								local v37 = v21[v22];
								v23 = v29;
								v24 = v23;
								v25 = v24;
								local v38 = v25();
								v26 = v37;
								v27 = v10;
								v28 = v38;
								v26[v27] = v28;
							end;
						else
							p7.effectDependencies[v10] = v30;
							v12 = "unmountEffects";
							v13 = p7;
							v14 = v12;
							v15 = v13[v14];
							v16 = v15;
							v17 = v10;
							v18 = v16[v17];
							v35 = nil;
							v19 = v18;
							v20 = v35;
							if v19 ~= v20 then
								v18();
							end;
							v36 = "unmountEffects";
							v21 = p7;
							v22 = v36;
							v37 = v21[v22];
							v23 = v29;
							v24 = v23;
							v25 = v24;
							v38 = v25();
							v26 = v37;
							v27 = v10;
							v28 = v38;
							v26[v27] = v28;
						end;
					else
						v12 = "unmountEffects";
						v13 = p7;
						v14 = v12;
						v15 = v13[v14];
						v16 = v15;
						v17 = v10;
						v18 = v16[v17];
						v35 = nil;
						v19 = v18;
						v20 = v35;
						if v19 ~= v20 then
							v18();
						end;
						v36 = "unmountEffects";
						v21 = p7;
						v22 = v36;
						v37 = v21[v22];
						v23 = v29;
						v24 = v23;
						v25 = v24;
						v38 = v25();
						v26 = v37;
						v27 = v10;
						v28 = v38;
						v26[v27] = v28;
					end;
				end;
			end;
		end;
		function v9.didMount(p8)
			p8:runEffects();
		end;
		function v9.didUpdate(p9)
			p9:runEffects();
		end;
		function v9.willUnmount(p10)
			for v39 = 1, p10.hookCounter do
				local v40 = p10.unmountEffects[v39];
				if v40 ~= nil then
					v40();
				end;
			end;
		end;
		function v9.render(p11)
			p11.hookCounter = 0;
			return p4(p11.props, p11.hooks);
		end;
		return v9;
	end;
end;
return v1;
