-- Decompiled with the Synapse X Luau decompiler.

local u1 = {};
return function(p1)
	local u2 = {};
	return function(p2)
		p1.hookCounter = p1.hookCounter + 1;
		local l__hookCounter__1 = p1.hookCounter;
		local v2 = p1.state[l__hookCounter__1];
		if v2 == nil then
			local v3 = p1.defaultStateValues[l__hookCounter__1];
			if v3 == u1 then
				v2 = nil;
			elseif v3 ~= nil then
				v2 = v3;
			elseif type(p2) == "function" then
				v2 = p2();
				if v2 == nil then
					p1.defaultStateValues[l__hookCounter__1] = u1;
				else
					p1.defaultStateValues[l__hookCounter__1] = v2;
				end;
			else
				v2 = p2;
				p1.defaultStateValues[l__hookCounter__1] = v2;
			end;
		elseif v2 == u1 then
			v2 = nil;
		end;
		local v4 = u2[l__hookCounter__1];
		if v4 == nil then
			v4 = function(p3)
				local v5 = p1.state[l__hookCounter__1];
				if v5 == nil then
					v5 = p1.defaultStateValues[l__hookCounter__1];
				end;
				if v5 == u1 then
					v5 = nil;
				end;
				if type(p3) == "function" then
					p3 = p3(v5);
				else
					p3 = p3;
				end;
				if p3 == nil then
					p3 = u1;
				end;
				p1:setState({
					[l__hookCounter__1] = p3
				});
			end;
			u2[l__hookCounter__1] = v4;
		end;
		return v2, v4;
	end;
end;
