-- Decompiled with the Synapse X Luau decompiler.

local v1 = _G[script];
local v2 = setmetatable({}, {
	__tostring = function()
		return "ServerDefinitionBuilder";
	end
});
v2.__index = v2;
function v2.new(...)
	local v3 = setmetatable({}, v2);
	return v3:constructor(...) and v3;
end;
local u1 = setmetatable({}, {
	__mode = "k"
});
function v2.constructor(p1, p2, p3, p4)
	if p4 == nil then
		p4 = "";
	end;
	p1.globalMiddleware = p3;
	p1.namespace = p4;
	u1[p1] = p2;
end;
function v2.toString(p5)
	return "[ServerDefinitionBuilder]";
end;
function v2.OnEvent(p6, p7, p8)
	p6:Create(p7):Connect(p8);
end;
function v2.GetNamespace(p9, p10)
	local v4 = u1[p9][p10];
	assert(v4.Type == "Namespace");
	if p9.namespace ~= "" then
		local v5 = table.concat({ p9.namespace, p10 }, ":") or p10;
	else
		v5 = p10;
	end;
	return v4.Definitions:_buildServerDefinition(p9.globalMiddleware, v5);
end;
local u2 = {};
local l__default__3 = v1.import(script, script.Parent.Parent, "server", "ServerFunction").default;
local l__CollectionService__4 = game:GetService("CollectionService");
local u5 = {};
local l__default__6 = v1.import(script, script.Parent.Parent, "server", "ServerAsyncFunction").default;
local u7 = {};
local l__default__8 = v1.import(script, script.Parent.Parent, "server", "ServerEvent").default;
function v2.Create(p11, p12)
	local v6 = u1[p11][p12];
	if p11.namespace ~= "" then
		local v7 = table.concat({ p11.namespace, p12 }, ":") or p12;
	else
		v7 = p12;
	end;
	p12 = v7;
	assert(v6 and v6.Type, "'" .. p12 .. "' is not defined in this definition.");
	if v6.Type == "Function" then
		if u2[p12] ~= nil then
			return u2[p12];
		else
			if v6.ServerMiddleware then
				local v8 = l__default__3.new(p12, v6.ServerMiddleware);
			else
				v8 = l__default__3.new(p12);
			end;
			l__CollectionService__4:AddTag(v8:GetInstance(), "NetDefinitionManaged");
			u2[p12] = v8;
			local l__globalMiddleware__9 = p11.globalMiddleware;
			if l__globalMiddleware__9 ~= nil then
				local v10, v11, v12 = ipairs(l__globalMiddleware__9);
				while true do
					v10(v11, v12);
					if not v10 then
						break;
					end;
					v12 = v10;
					local v13 = v8:_use(v11);				
				end;
			end;
			return v8;
		end;
	end;
	if v6.Type == "AsyncFunction" then
		if u5[p12] ~= nil then
			return u5[p12];
		else
			if v6.ServerMiddleware then
				local v14 = l__default__6.new(p12, v6.ServerMiddleware);
			else
				v14 = l__default__6.new(p12);
			end;
			l__CollectionService__4:AddTag(v14:GetInstance(), "NetDefinitionManaged");
			u5[p12] = v14;
			local l__globalMiddleware__15 = p11.globalMiddleware;
			if l__globalMiddleware__15 ~= nil then
				local v16, v17, v18 = ipairs(l__globalMiddleware__15);
				while true do
					v16(v17, v18);
					if not v16 then
						break;
					end;
					v18 = v16;
					local v19 = v14:_use(v17);				
				end;
			end;
			return v14;
		end;
	end;
	if v6.Type ~= "Event" then
		error("Invalid Type");
		return;
	end;
	if u7[p12] ~= nil then
		return u7[p12];
	end;
	if v6.ServerMiddleware then
		local v20 = l__default__8.new(p12, v6.ServerMiddleware);
	else
		v20 = l__default__8.new(p12);
	end;
	l__CollectionService__4:AddTag(v20:GetInstance(), "NetDefinitionManaged");
	u7[p12] = v20;
	local l__globalMiddleware__21 = p11.globalMiddleware;
	if l__globalMiddleware__21 ~= nil then
		local v22, v23, v24 = ipairs(l__globalMiddleware__21);
		while true do
			v22(v23, v24);
			if not v22 then
				break;
			end;
			v24 = v22;
			local v25 = v20:_use(v23);		
		end;
	end;
	return v20;
end;
function v2.OnFunction(p13, p14, p15)
	p13:Create(p14):SetCallback(p15);
end;
function v2.__tostring(p16)
	return p16:toString();
end;
return {
	ServerDefinitionBuilder = v2
};
