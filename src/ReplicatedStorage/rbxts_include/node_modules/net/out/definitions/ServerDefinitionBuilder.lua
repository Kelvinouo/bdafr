-- Script Hash: 18400c0907a01823f64d34f496dae1bd05160e4959ef8cace0eb5a22f48b79b1ac14b273c6155cdda67e6af5b5ef2d17
-- Decompiled with the Synapse X Luau decompiler.

local v1 = _G[script];
local v2 = setmetatable({}, {
	__tostring = function()
		return "ServerDefinitionBuilder";
	end
});
v2.__index = v2;
function v2.new(...)
	local v3 = setmetatable({}, v2);
	return v3:constructor(...) and v3;
end;
local u1 = setmetatable({}, {
	__mode = "k"
});
function v2.constructor(p1, p2, p3, p4)
	if p4 == nil then
		p4 = "";
	end;
	p1.globalMiddleware = p3;
	p1.namespace = p4;
	u1[p1] = p2;
end;
function v2.toString(p5)
	return "[ServerDefinitionBuilder]";
end;
function v2.OnEvent(p6, p7, p8)
	p6:Create(p7):Connect(p8);
end;
function v2.GetNamespace(p9, p10)
	local v4 = u1[p9][p10];
	assert(v4.Type == "Namespace");
	if p9.namespace ~= "" then
		local v5 = table.concat({ p9.namespace, p10 }, ":") or p10;
	else
		v5 = p10;
	end;
	return v4.Definitions:_buildServerDefinition(p9.globalMiddleware, v5);
end;
local u2 = {};
local l__default__3 = v1.import(script, script.Parent.Parent, "server", "ServerFunction").default;
local l__CollectionService__4 = game:GetService("CollectionService");
local u5 = {};
local l__default__6 = v1.import(script, script.Parent.Parent, "server", "ServerAsyncFunction").default;
local u7 = {};
local l__default__8 = v1.import(script, script.Parent.Parent, "server", "ServerEvent").default;
function v2.Create(p11, p12)
	local v6 = u1[p11][p12];
	if p11.namespace ~= "" then
		local v7 = table.concat({ p11.namespace, p12 }, ":") or p12;
	else
		v7 = p12;
	end;
	p12 = v7;
	assert(v6 and v6.Type, "'" .. p12 .. "' is not defined in this definition.");
	if v6.Type == "Function" then
		if u2[p12] ~= nil then
			return u2[p12];
		else
			if v6.ServerMiddleware then
				local v8 = l__default__3.new(p12, v6.ServerMiddleware);
			else
				v8 = l__default__3.new(p12);
			end;
			l__CollectionService__4:AddTag(v8:GetInstance(), "NetDefinitionManaged");
			u2[p12] = v8;
			local l__globalMiddleware__9 = p11.globalMiddleware;
			if l__globalMiddleware__9 ~= nil then
				local function v10(p13)
					return v8:_use(p13);
				end;
				for v11, v12 in ipairs(l__globalMiddleware__9) do
					v10(v12, v11 - 1, l__globalMiddleware__9);
				end;
			end;
			return v8;
		end;
	end;
	if v6.Type == "AsyncFunction" then
		if u5[p12] ~= nil then
			return u5[p12];
		else
			if v6.ServerMiddleware then
				local v13 = l__default__6.new(p12, v6.ServerMiddleware);
			else
				v13 = l__default__6.new(p12);
			end;
			l__CollectionService__4:AddTag(v13:GetInstance(), "NetDefinitionManaged");
			u5[p12] = v13;
			local l__globalMiddleware__14 = p11.globalMiddleware;
			if l__globalMiddleware__14 ~= nil then
				local function v15(p14)
					return v13:_use(p14);
				end;
				for v16, v17 in ipairs(l__globalMiddleware__14) do
					v15(v17, v16 - 1, l__globalMiddleware__14);
				end;
			end;
			return v13;
		end;
	end;
	if v6.Type ~= "Event" then
		error("Invalid Type");
		return;
	end;
	if u7[p12] ~= nil then
		return u7[p12];
	end;
	if v6.ServerMiddleware then
		local v18 = l__default__8.new(p12, v6.ServerMiddleware);
	else
		v18 = l__default__8.new(p12);
	end;
	l__CollectionService__4:AddTag(v18:GetInstance(), "NetDefinitionManaged");
	u7[p12] = v18;
	local l__globalMiddleware__19 = p11.globalMiddleware;
	if l__globalMiddleware__19 ~= nil then
		local function v20(p15)
			return v18:_use(p15);
		end;
		for v21, v22 in ipairs(l__globalMiddleware__19) do
			v20(v22, v21 - 1, l__globalMiddleware__19);
		end;
	end;
	return v18;
end;
function v2.OnFunction(p16, p17, p18)
	p16:Create(p17):SetCallback(p18);
end;
function v2.__tostring(p19)
	return p19:toString();
end;
return {
	ServerDefinitionBuilder = v2
};
