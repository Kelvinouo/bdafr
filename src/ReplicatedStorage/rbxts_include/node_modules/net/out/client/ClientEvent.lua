-- Decompiled with the Synapse X Luau decompiler.

local v1 = _G[script];
local v2 = v1.import(script, script.Parent.Parent, "internal");
local v3 = setmetatable({}, {
	__tostring = function()
		return "ClientEvent";
	end
});
v3.__index = v3;
function v3.new(...)
	local v4 = setmetatable({}, v3);
	return v4:constructor(...) and v4;
end;
local l__getRemoteOrThrow__1 = v2.getRemoteOrThrow;
local l__IS_SERVER__2 = v2.IS_SERVER;
function v3.constructor(p1, p2)
	p1.instance = l__getRemoteOrThrow__1("RemoteEvent", p2);
	assert(not l__IS_SERVER__2, "Cannot fetch NetClientEvent on the server!");
end;
function v3.GetInstance(p3)
	return p3.instance;
end;
local l__waitForRemote__3 = v2.waitForRemote;
function v3.Wait(p4, p5)
	return v1.Promise.defer(v1.async(function(p6)
		v1.await(l__waitForRemote__3("RemoteEvent", p5, 60));
		p6(v3.new(p5));
	end));
end;
function v3.SendToServer(p7, ...)
	p7.instance:FireServer(unpack({ ... }));
end;
function v3.Connect(p8, p9)
	return p8.instance.OnClientEvent:Connect(p9);
end;
return {
	default = v3
};
