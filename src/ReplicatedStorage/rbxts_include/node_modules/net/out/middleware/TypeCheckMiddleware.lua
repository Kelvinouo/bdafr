-- Decompiled with the Synapse X Luau decompiler.

local u1 = game:GetService("RunService"):IsStudio();
local l__HttpService__2 = game:GetService("HttpService");
local v1 = {};
v1.__index = v1;
function v1.defaultErrorHandler(p1, p2, p3)
	local l__Name__2 = p1:GetInstance().Name;
	if u1 then
		warn("[TypeCheckMiddleware] Call to " .. l__Name__2 .. " failed");
		warn("\tRecieved: " .. l__HttpService__2:JSONEncode(p2));
		warn("\tInvalid argument at index " .. tostring(p3));
	end;
end;
local function u3(...)
	local v3 = {};
	v3.__index = v3;
	local u4 = { ... };
	function v3.next(p4, p5, p6)
		local u5 = p4.errorHandler or v1.defaultErrorHandler;
		return function(p7, ...)
			local v4 = { ... };
			for v5, v6 in ipairs(u4) do
				if not v6(v4[v5]) then
					pcall(u5, p6, v4, v5);
					return false;
				end;
			end;
			return p5(p7, ...);
		end;
	end;
	function v3.__tostring()
		return "TypeCheckMiddleware";
	end;
	function v3.WithErrorHandler(p8, p9)
		p8.errorHandler = p9;
		return p8;
	end;
	function v3.__call(p10, ...)
		return p10:next(...);
	end;
	return setmetatable({}, v3);
end;
function v1.__call(p11, ...)
	return u3(...);
end;
function v1.SetDefaultErrorHandler(p12, p13)
	v1.defaultErrorHandler = p13;
end;
return setmetatable({}, v1);
