-- Decompiled with the Synapse X Luau decompiler.

local v1 = {
	constructor = function(p1, p2)
		if p2 == nil then
			p2 = {};
		end;
		p1.middlewares = p2;
	end, 
	_use = function(p3, p4)
		local l__middlewares__2 = p3.middlewares;
		l__middlewares__2[#l__middlewares__2 + 1] = p4;
	end
};
local u1 = _G[script];
function v1._processMiddleware(p5, p6)
	local l__middlewares__2 = p5.middlewares;
	local v3, v4 = u1.try(function()
		assert(type(l__middlewares__2) == "table", "The middleware argument should be an array of middlewares not a " .. typeof(l__middlewares__2));
		if not (#l__middlewares__2 > 0) then
			return u1.TRY_RETURN, { p6 };
		end;
		local v5 = p6;
		local v6, v7, v8 = ipairs(l__middlewares__2);
		while true do
			v6(v7, v8);
			if not v6 then
				break;
			end;
			v8 = v6;
			v5 = v7(v5, p5);		
		end;
		return u1.TRY_RETURN, { v5 };
	end, function(p7)
		warn("[rbx-net] " .. tostring(p7));
	end);
	if not v3 then
		return;
	end;
	return unpack(v4);
end;
return {
	default = v1
};
