-- Decompiled with the Synapse X Luau decompiler.

local v1 = _G[script];
local v2 = v1.import(script, script.Parent.Parent, "internal");
local l__default__3 = v1.import(script, script.Parent, "MiddlewareEvent").default;
local v4 = setmetatable({}, {
	__tostring = function()
		return "ServerEvent";
	end, 
	__index = l__default__3
});
v4.__index = v4;
function v4.new(...)
	local v5 = setmetatable({}, v4);
	return v5:constructor(...) and v5;
end;
local u1 = l__default__3;
local l__findOrCreateRemote__2 = v2.findOrCreateRemote;
local l__IS_CLIENT__3 = v2.IS_CLIENT;
function v4.constructor(p1, p2, p3)
	if p3 == nil then
		p3 = {};
	end;
	u1.constructor(p1, p3);
	p1.instance = l__findOrCreateRemote__2("RemoteEvent", p2, function(p4)
		p1.defaultHook = p4.OnServerEvent:Connect(v4.DefaultEventHook);
	end);
	assert(not l__IS_CLIENT__3, "Cannot create a NetServerEvent on the client!");
end;
function v4.GetInstance(p5)
	return p5.instance;
end;
function v4.Connect(p6, p7)
	local l__defaultHook__6 = p6.defaultHook;
	if l__defaultHook__6 ~= nil then
		l__defaultHook__6:Disconnect();
	end;
	return p6.instance.OnServerEvent:Connect(function(p8, ...)
		local v7 = p6:_processMiddleware(p7);
		if v7 ~= nil then
			v7(p8, unpack({ ... }));
		end;
	end);
end;
local l__IS_RUNNING__4 = v2.IS_RUNNING;
function v4.SendToAllPlayers(p9, ...)
	if not l__IS_RUNNING__4 then
		return nil;
	end;
	p9.instance:FireAllClients(unpack({ ... }));
end;
function v4.SendToAllPlayersExcept(p10, p11, ...)
	local v8 = nil;
	local v9 = { ... };
	if not l__IS_RUNNING__4 then
		return nil;
	end;
	v8 = game:GetService("Players");
	if typeof(p11) ~= "Instance" then
		if type(p11) == "table" then
			local v10, v11, v12 = ipairs(v8:GetPlayers());
			while true do
				local v13, v14 = v10(v11, v12);
				if not v13 then
					break;
				end;
				if (table.find(p11, v14) and 0) - 1 == -1 then
					p10.instance:FireClient(v14, unpack(v9));
				end;			
			end;
		end;
		return;
	end;
	local v15 = v8:GetPlayers();
	local function v16(p12)
		return p12 ~= p11;
	end;
	local v17 = {};
	local v18 = 0;
	for v19, v20 in ipairs(v15) do
		if v16(v20, v19 - 1, v15) == true then
			v18 = v18 + 1;
			v17[v18] = v20;
		end;
	end;
	for v21, v22 in ipairs(v17) do
		p10.instance:FireClient(v22, unpack(v9));
	end;
end;
function v4.SendToPlayer(p13, p14, ...)
	if not l__IS_RUNNING__4 then
		return nil;
	end;
	p13.instance:FireClient(p14, unpack({ ... }));
end;
function v4.SendToPlayers(p15, p16, ...)
	local v23 = { ... };
	if not l__IS_RUNNING__4 then
		return nil;
	end;
	for v24, v25 in ipairs(p16) do
		p15:SendToPlayer(v25, unpack(v23));
	end;
end;
function v4.DefaultEventHook(p17, ...)
	({})[1] = ...;
end;
u1 = {
	default = v4
};
return l__default__3;
