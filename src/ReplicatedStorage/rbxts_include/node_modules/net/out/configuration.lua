-- Script Hash: 7dea94e2baaab97cd70024ec135339245667e02d208760981abb7a2c800d4a580e043d3d9fe092abe4755ce46d75cb7f
-- Decompiled with the Synapse X Luau decompiler.

local v1 = {
	DebugEnabled = false
};
local l__IS_CLIENT__1 = _G[script].import(script, script.Parent, "internal").IS_CLIENT;
local u2 = {
	ServerThrottleResetTimer = 60, 
	EnableDebugMessages = false, 
	ServerThrottleMessage = "Request limit exceeded ({limit}) by {player} via {remote}"
};
function v1.SetClient(p1)
	assert(l__IS_CLIENT__1, "Use SetClient on the client!");
	local v2 = {};
	for v3, v4 in pairs(u2) do
		v2[v3] = v4;
	end;
	for v5, v6 in pairs(p1) do
		v2[v5] = v6;
	end;
	u2 = v2;
end;
local u3 = game:GetService("RunService"):IsServer();
function v1.Set(p2)
	assert(u3, "Use Set on the server!");
	local v7 = {};
	for v8, v9 in pairs(u2) do
		v7[v8] = v9;
	end;
	for v10, v11 in pairs(p2) do
		v7[v10] = v11;
	end;
	u2 = v7;
end;
function v1.Get()
	return u2;
end;
function v1.SetClientConfiguration(p3, p4)
	assert(l__IS_CLIENT__1, "Use SetConfiguration on the server!");
	if p3 == "EnableDebugMessages" then
		u2.EnableDebugMessages = p4;
	end;
end;
function v1.SetConfiguration(p5, p6)
	assert(u3, "Cannot set configuration on client!");
	u2[p5] = p6;
end;
function v1.GetConfiguration(p7)
	return u2[p7];
end;
function v1.DebugWarn(...)
	({})[1] = ...;
end;
function v1.DebugLog(...)
	({})[1] = ...;
end;
return v1;
