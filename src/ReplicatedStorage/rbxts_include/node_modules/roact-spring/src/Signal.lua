-- Decompiled with the Synapse X Luau decompiler.

local v1 = {};
v1.__index = v1;
function v1.new(p1, p2)
	return setmetatable({
		Connected = true, 
		_signal = p1, 
		_fn = p2, 
		_next = false
	}, v1);
end;
function v1.Disconnect(p3)
	if not p3.Connected then
		return;
	end;
	p3.Connected = false;
	if p3._signal._handlerListHead == p3 then
		p3._signal._handlerListHead = p3._next;
		return;
	end;
	local v2 = p3._signal._handlerListHead;
	while v2 and v2._next ~= p3 do
		v2 = v2._next;	
	end;
	if v2 then
		v2._next = p3._next;
	end;
end;
v1.Destroy = v1.Disconnect;
setmetatable(v1, {
	__index = function(p4, p5)
		error(("Attempt to get Connection::%s (not a valid member)"):format(tostring(p5)), 2);
	end, 
	__newindex = function(p6, p7, p8)
		error(("Attempt to set Connection::%s (not a valid member)"):format(tostring(p7)), 2);
	end
});
local v3 = {};
v3.__index = v3;
function v3.new()
	return setmetatable({
		_handlerListHead = false, 
		_proxyHandler = nil
	}, v3);
end;
function v3.Is(p9)
	local v4 = false;
	if type(p9) == "table" then
		v4 = getmetatable(p9) == v3;
	end;
	return v4;
end;
function v3.Connect(p10, p11)
	local v5 = nil;
	v5 = v1.new(p10, p11);
	if not p10._handlerListHead then
		p10._handlerListHead = v5;
		return v5;
	end;
	v5._next = p10._handlerListHead;
	p10._handlerListHead = v5;
	return v5;
end;
function v3.DisconnectAll(p12)
	local v6 = p12._handlerListHead;
	while v6 do
		v6.Connected = false;
		v6 = v6._next;	
	end;
	p12._handlerListHead = false;
end;
function v3.Fire(p13, ...)
	local v7 = p13._handlerListHead;
	while v7 do
		task.defer(v7._fn, ...);
		v7 = v7._next;	
	end;
end;
function v3.Wait(p14)
	local u1 = nil;
	local u2 = coroutine.running();
	u1 = p14:Connect(function(...)
		u1:Disconnect();
		task.spawn(u2, ...);
	end);
	return coroutine.yield();
end;
setmetatable(v3, {
	__index = function(p15, p16)
		error(("Attempt to get Signal::%s (not a valid member)"):format(tostring(p16)), 2);
	end, 
	__newindex = function(p17, p18, p19)
		error(("Attempt to set Signal::%s (not a valid member)"):format(tostring(p18)), 2);
	end
});
return v3;
