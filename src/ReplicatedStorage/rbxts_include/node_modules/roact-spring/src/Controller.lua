-- Decompiled with the Synapse X Luau decompiler.

local l__rbxts_include__1 = game:GetService("ReplicatedStorage"):FindFirstChild("rbxts_include");
local v2 = l__rbxts_include__1 and require(l__rbxts_include__1.RuntimeLib);
if v2 then
	local v3 = v2.import(script, v2.getModule(script, "@rbxts", "roact").src);
else
	v3 = require(script.Parent.Parent.Roact);
end;
if v2 then
	local v4 = v2.Promise;
else
	v4 = require(script.Parent.Parent.Promise);
end;
local v5 = require(script.Parent.AnimationConfig);
local v6 = {};
v6.__index = v6;
local u1 = require(script.Parent.util);
function v6.new(p1)
	assert(v3, "Roact not found. It must be placed in the same folder as roact-spring.");
	assert(typeof(p1) == "table", "Props are required.");
	local v7 = setmetatable({
		bindings = {}, 
		controls = {}, 
		queue = {}
	}, v6);
	v7:start(u1.merge({
		default = true
	}, p1));
	return v7.bindings, v7;
end;
local u2 = require(script.Parent.SpringValue);
local u3 = require(script.Parent.helpers);
local function u4(p2, p3)
	if p3.keys then
		for v8, v9 in ipairs(p3.keys) do
			local v10 = p2.controls[v9];
			if not v10 then
				local v11 = u2.new(p3, v9);
				local v12, v13 = v3.createBinding();
				v11.key = v9;
				function v11.onChange(p4)
					v13(p4);
				end;
				p2.controls[v9] = v11;
				p2.bindings[v9] = v12;
				v10 = p2.controls[v9];
			end;
			v10:_prepareNode(p3);
		end;
	end;
end;
local function u5(p5, p6, p7)
	p6.loop = false;
	local v14 = {};
	for v15, v16 in pairs(p6.keys or {}) do
		table.insert(v14, p5.controls[v16]:start(p6));
	end;
	local l__loop__6 = p6.loop;
	return v4.all(v14):andThen(function()
		local v17 = nil;
		if l__loop__6 then
			v17 = u3.createLoopUpdate(p6, l__loop__6);
			if not v17 then
				return;
			end;
		else
			return;
		end;
		u4(p5, v17);
		return u5(p5, v17, true);
	end);
end;
function v6.start(p8, p9)
	if not p9 then
		return v4.new(function(p10)
			p10();
		end);
	end;
	local v18 = u3.createUpdate(p9);
	u4(p8, v18);
	return u5(p8, v18);
end;
function v6.stop(p11, p12)
	if not p12 then
		for v19, v20 in pairs(p11.controls) do
			v20:stop();
		end;
		return;
	end;
	for v21, v22 in pairs(p12) do
		if p11.controls[v22] then
			p11.controls[v22]:stop();
		else
			warn("Tried to stop animation at key `" .. v22 .. "`, but it doesn't exist.");
		end;
	end;
end;
function v6.pause(p13, p14)
	if not p14 then
		for v23, v24 in pairs(p13.controls) do
			v24:pause();
		end;
		return;
	end;
	for v25, v26 in pairs(p14) do
		if p13.controls[v26] then
			p13.controls[v26]:pause();
		else
			warn("Tried to pause animation at key `" .. v26 .. "`, but it doesn't exist.");
		end;
	end;
end;
return v6;
