-- Decompiled with the Synapse X Luau decompiler.

local l__rbxts_include__1 = game:GetService("ReplicatedStorage"):FindFirstChild("rbxts_include");
local v2 = l__rbxts_include__1 and require(l__rbxts_include__1.RuntimeLib);
if v2 then
	local v3 = v2.Promise;
else
	v3 = require(script.Parent.Parent.Parent.Promise);
end;
local u1 = require(script.Parent.Parent.util);
local u2 = require(script.Parent.Parent.Controller);
return function(p1, p2, p3, p4)
	local v4 = p1.useValue(nil);
	local v5 = p1.useValue({});
	local v6 = p1.useValue({});
	if typeof(p3) == "table" then
		local v7 = true;
		if v4.value ~= nil then
			v7 = v4.value == false;
		end;
		assert(v7, "useSprings detected a change from imperative to declarative. This is not supported.");
		v4.value = false;
	elseif typeof(p3) == "function" then
		local v8 = true;
		if v4.value ~= nil then
			v8 = v4.value == true;
		end;
		assert(v8, "useSprings detected a change from declarative to imperative. This is not supported.");
		v4.value = true;
	else
		error("Expected table or function for useSprings, got " .. typeof(p3));
	end;
	local u3 = p1.useValue({});
	p1.useEffect(function()
		if v4.value == false then
			local v9, v10, v11 = ipairs(u3.value);
			while true do
				v9(v10, v11);
				if not v9 then
					break;
				end;
				v11 = v9;
				local v12 = {};
				if p3[v9].reset then
					local v13 = p3[v9].reset;
				else
					v13 = false;
				end;
				v12.reset = v13;
				v10:start(u1.merge({
					default = true
				}, (u1.merge(p3[v9], v12))));			
			end;
		end;
	end, p4);
	p1.useMemo(function()
		if not (#u3.value < p2) then
			for v14 = p2 + 1, #u3.value do
				u3.value[v14]:stop();
				u3.value[v14] = nil;
				v5.value[v14] = nil;
				v6.value[v14] = nil;
			end;
			return;
		end;
		for v15 = #u3.value + 1, p2 do
			if typeof(p3) == "table" then
				local v16 = p3[v15];
			else
				v16 = p3(v15);
			end;
			local v17, v18 = u2.new(v16);
			u3.value[v15] = v18;
			v5.value[v15] = v17;
		end;
	end, { p2 });
	p1.useMemo(function()
		if v4.value and #u3.value > 0 then
			for v19, v20 in pairs(getmetatable(u3.value[1])) do
				if typeof(v20) == "function" and v19 ~= "new" then
					v6.value[v19] = function(p5)
						local v21 = {};
						local v22, v23, v24 = ipairs(u3.value);
						while true do
							v22(v23, v24);
							if not v22 then
								break;
							end;
							v24 = v22;
							table.insert(v21, v3.new(function(p6)
								if typeof(p5) == "function" then
									local v25 = p5(v22);
								else
									v25 = p5;
								end;
								local v26 = v23[v19](v23, v25);
								if v26 and v26.await then
									v26:await();
								end;
								p6();
							end));						
						end;
						return v3.all(v21);
					end;
				end;
			end;
		end;
	end, p4 or { {} });
	p1.useEffect(function()
		return function()
			local v27, v28, v29 = ipairs(u3.value);
			while true do
				v27(v28, v29);
				if not v27 then
					break;
				end;
				v29 = v27;
				v28:stop();			
			end;
		end;
	end, {});
	if not v4.value then
		return v5.value;
	end;
	return v5.value, v6.value;
end;
