-- Decompiled with the Synapse X Luau decompiler.

local u1 = require(script.Parent.Parent.util);
local u2 = require(script.Parent.useSprings);
return function(p1, p2, p3, p4)
	local u3 = type(p3) == "function";
	local v1, v2 = u2(p1, p2, p1.useMemo(function()
		if u3 then
			return p3;
		end;
		local v3 = table.create(p2);
		local v4 = 0;
		for v5, v6 in ipairs(p3) do
			local v7 = u1.merge({
				delay = 0.1
			}, v6);
			v7.delay = v4;
			v4 = v4 + v7.delay;
			v3[v5] = v7;
		end;
		return v3;
	end, p4 or { {} }), p4);
	local v8 = p1.useValue({});
	if not u3 then
		return v1;
	end;
	table.clear(v8.value);
	for v9, v10 in pairs(v2) do
		v8.value[v9] = v10;
	end;
	v8.value.start = function(p5)
		local u4 = 0;
		v2.start(function(p6)
			local v11 = u1.merge({
				delay = 0.1
			}, p5(p6));
			v11.delay = u4;
			u4 = u4 + v11.delay;
			return v11;
		end);
	end;
	return v1, v8.value;
end;
