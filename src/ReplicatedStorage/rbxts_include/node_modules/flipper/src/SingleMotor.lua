-- Script Hash: e6252977f996c176d5ec559851adc03315aaf5b5197b4f90f73eaa5495ec1092ce373f4dea7fb16bb2e91ece3520b4a0
-- Decompiled with the Synapse X Luau decompiler.

local v1 = require(script.Parent.BaseMotor);
local v2 = setmetatable({}, v1);
v2.__index = v2;
function v2.new(p1, p2)
	assert(p1, "Missing argument #1: initialValue");
	assert(typeof(p1) == "number", "initialValue must be a number!");
	local v3 = setmetatable(v1.new(), v2);
	if p2 ~= nil then
		v3._useImplicitConnections = p2;
	else
		v3._useImplicitConnections = true;
	end;
	v3._goal = nil;
	v3._state = {
		complete = true, 
		value = p1
	};
	return v3;
end;
function v2.step(p3, p4)
	if p3._state.complete then
		return true;
	end;
	local v4 = p3._goal:step(p3._state, p4);
	p3._state = v4;
	p3._onStep:fire(v4.value);
	if v4.complete then
		if p3._useImplicitConnections then
			p3:stop();
		end;
		p3._onComplete:fire();
	end;
	return v4.complete;
end;
function v2.getValue(p5)
	return p5._state.value;
end;
function v2.setGoal(p6, p7)
	p6._state.complete = false;
	p6._goal = p7;
	p6._onStart:fire();
	if p6._useImplicitConnections then
		p6:start();
	end;
end;
function v2.__tostring(p8)
	return "Motor(Single)";
end;
return v2;
