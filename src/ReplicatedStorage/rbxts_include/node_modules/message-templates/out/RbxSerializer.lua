-- Decompiled with the Synapse X Luau decompiler.

local v1 = {};
local function v2(p1)
	return {
		X = p1.X, 
		Y = p1.Y, 
		Z = p1.Z
	};
end;
v1.SerializeVector3 = v2;
local function v3(p2)
	return {
		X = p2.X, 
		Y = p2.Y
	};
end;
v1.SerializeVector2 = v3;
local function v4(p3)
	return {
		Min = p3.Min, 
		Max = p3.Max
	};
end;
v1.SerializeNumberRange = v4;
local function v5(p4)
	return p4:ToIsoDate();
end;
v1.SerializeDateTime = v5;
local function v6(p5)
	return tostring(p5);
end;
v1.SerializeEnumItem = v6;
local function v7(p6)
	return {
		Offset = p6.Offset, 
		Scale = p6.Scale
	};
end;
v1.SerializeUDim = v7;
local function v8(p7)
	return {
		X = v7(p7.X), 
		Y = v7(p7.Y)
	};
end;
v1.SerializeUDim2 = v8;
local function v9(p8)
	return {
		R = p8.R, 
		G = p8.G, 
		B = p8.B
	};
end;
v1.SerializeColor3 = v9;
local function v10(p9)
	return v9(p9.Color);
end;
v1.SerializeBrickColor = v10;
local function v11(p10)
	return {
		RectMin = v3(p10.Min), 
		RectMax = v3(p10.Max), 
		RectHeight = p10.Height, 
		RectWidth = p10.Width
	};
end;
v1.SerializeRect = v11;
local function v12(p11)
	return {
		WaypointAction = v6(p11.Action), 
		WaypointPosition = v2(p11.Position)
	};
end;
v1.SerializePathWaypoint = v12;
local function v13(p12)
	return {
		ColorTime = p12.Time, 
		ColorValue = v9(p12.Value)
	};
end;
v1.SerializeColorSequenceKeypoint = v13;
local function v14(p13)
	local v15 = {};
	local l__Keypoints__16 = p13.Keypoints;
	local function v17(p14)
		return v13(p14);
	end;
	local v18 = table.create(#l__Keypoints__16);
	for v19, v20 in ipairs(l__Keypoints__16) do
		v18[v19] = v17(v20, v19 - 1, l__Keypoints__16);
	end;
	v15.ColorKeypoints = v18;
	return v15;
end;
v1.SerializeColorSequence = v14;
local function v21(p15)
	return {
		NumberTime = p15.Time, 
		NumberValue = p15.Value
	};
end;
v1.SerializeNumberSequenceKeypoint = v21;
local function v22(p16)
	local v23 = {};
	local l__Keypoints__24 = p16.Keypoints;
	local function v25(p17)
		return v21(p17);
	end;
	local v26 = table.create(#l__Keypoints__24);
	for v27, v28 in ipairs(l__Keypoints__24) do
		v26[v27] = v25(v28, v27 - 1, l__Keypoints__24);
	end;
	v23.NumberKeypoints = v26;
	return v23;
end;
v1.SerializeNumberSequence = v22;
local l__DestructureMode__1 = _G[script].import(script, script.Parent, "MessageTemplateToken").DestructureMode;
local l__HttpService__2 = game:GetService("HttpService");
function v1.Serialize(p18, p19)
	if p19 == nil then
		p19 = l__DestructureMode__1.Default;
	end;
	if p19 == l__DestructureMode__1.ToString then
		return tostring(p18);
	end;
	if typeof(p18) == "Instance" then
		return p18:GetFullName();
	end;
	if type(p18) == "vector" or typeof(p18) == "Vector3int16" then
		return v2(p18);
	end;
	if typeof(p18) == "Vector2" or typeof(p18) == "Vector2int16" then
		return v3(p18);
	end;
	if typeof(p18) == "DateTime" then
		return v5(p18);
	end;
	if typeof(p18) == "EnumItem" then
		return v6(p18);
	end;
	if typeof(p18) == "NumberRange" then
		return v4(p18);
	end;
	if typeof(p18) == "UDim" then
		return v7(p18);
	end;
	if typeof(p18) == "UDim2" then
		return v8(p18);
	end;
	if typeof(p18) == "Color3" then
		return v9(p18);
	end;
	if typeof(p18) == "BrickColor" then
		return v10(p18);
	end;
	if typeof(p18) == "Rect" then
		return v11(p18);
	end;
	if typeof(p18) == "PathWaypoint" then
		return v12(p18);
	end;
	if typeof(p18) == "ColorSequenceKeypoint" then
		return v13(p18);
	end;
	if typeof(p18) == "ColorSequence" then
		return v14(p18);
	end;
	if typeof(p18) == "NumberSequenceKeypoint" then
		return v21(p18);
	end;
	if typeof(p18) == "NumberSequence" then
		return v22(p18);
	end;
	if type(p18) == "number" or type(p18) == "string" or type(p18) == "boolean" then
		return p18;
	end;
	if type(p18) == "table" then
		return l__HttpService__2:JSONEncode(p18);
	end;
	if type(p18) == "nil" then
		return nil;
	end;
	error("Destructuring of '" .. typeof(p18) .. "' not supported by Serializer");
end;
return {
	RbxSerializer = v1
};
