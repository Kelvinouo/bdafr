-- Script Hash: 0d28728df2c5e41e5a7e5a5a150675d2bc0837806e62ec62ba86180ab0aa95740b35915ed9ddb52b4fdea2603c024bf9
-- Decompiled with the Synapse X Luau decompiler.

local v1 = _G[script];
local v2 = v1.import(script, script.Parent, "MessageTemplateToken");
local v3 = {};
local u1 = nil;
function v3.GetTokens(p1)
	local v4 = {};
	for v5 in u1(p1).next, nil do
		if v5.done then
			break;
		end;
		v4[#v4 + 1] = v5.value;
	end;
	return v4;
end;
local l__TemplateTokenKind__2 = v2.TemplateTokenKind;
local u3 = nil;
local u4 = nil;
u1 = function(p2)
	return v1.generator(function()
		if #p2 == 0 then
			coroutine.yield({
				kind = l__TemplateTokenKind__2.Text, 
				text = ""
			});
			return nil;
		end;
		local v6 = 0;
		while true do
			local v7 = u3(v6, p2);
			local v8 = v7[1];
			if v6 < v8 then
				coroutine.yield(v7[2]);
			end;
			if #p2 <= v8 then
				break;
			end;
			local v9 = u4(v8, p2);
			v6 = v9[1];
			if v8 < v6 then
				coroutine.yield(v9[2]);
			end;
			if #p2 < v6 then
				break;
			end;		
		end;
	end);
end;
u3 = function(p3, p4)
	local v10 = {};
	while true do
		local v11 = string.sub(p4, p3, p3);
		if v11 == "{" then
			if string.sub(p4, p3 + 1, p3 + 1) ~= "{" then
				break;
			end;
			v10[#v10 + 1] = v11;
			p3 = p3 + 1;
		else
			v10[#v10 + 1] = v11;
			if v11 == "}" and string.sub(p4, p3 + 1, p3 + 1) == "}" then
				p3 = p3 + 1;
			end;
		end;
		p3 = p3 + 1;
		if not (p3 <= #p4) then
			break;
		end;	
	end;
	local v12 = {
		kind = l__TemplateTokenKind__2.Text
	};
	local v13 = "";
	if v13 == nil then
		v13 = ", ";
	end;
	v12.text = table.concat(v10, v13);
	return { p3, v12 };
end;
local function u5(p5, p6, p7)
	local v14 = "";
	while p5 < #p6 and p7(string.sub(p6, p5, p5)) do
		v14 = v14 .. string.sub(p6, p5, p5);
		p5 = p5 + 1;	
	end;
	return { p5, v14 };
end;
local function u6(p8)
	return string.match(p8, "[@$]") ~= nil;
end;
local function u7(p9)
	return string.match(p9, "[%w_]") ~= nil;
end;
local l__DestructureMode__8 = v2.DestructureMode;
u4 = function(p10, p11)
	p10 = p10 + 1;
	local v15 = u5(p10, p11, function(p12)
		return u6(p12) or u7(p12) and p12 ~= "}";
	end);
	p10 = v15[1];
	local v16 = v15[2];
	if #p11 < p10 then
		return { p10, {
				kind = l__TemplateTokenKind__2.Text, 
				text = v16
			} };
	end;
	local v17 = l__DestructureMode__8.Default;
	local v18 = string.sub(v16, 1, 1);
	if u6(v18) then
		if v18 == "@" then
			v17 = l__DestructureMode__8.Destructure;
		elseif v18 == "$" then
			v17 = l__DestructureMode__8.ToString;
		else
			v17 = l__DestructureMode__8.Default;
		end;
		v16 = string.sub(v16, 2);
	end;
	return { p10 + 1, {
			kind = l__TemplateTokenKind__2.Property, 
			propertyName = v16, 
			destructureMode = v17
		} };
end;
return {
	MessageTemplateParser = v3
};
