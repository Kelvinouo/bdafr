--[[VARIABLE DEFINITION ANOMALY DETECTED, DECOMPILATION OUTPUT POTENTIALLY INCORRECT]]--
-- Decompiled with the Synapse X Luau decompiler.

local u1 = {};
local l__RunService__2 = game:GetService("RunService");
local l__CollectionService__3 = game:GetService("CollectionService");
local function u4(p1, p2)
	local v1 = nil;
	local v2 = nil;
	local v3 = Enum.AutomaticSize[p1:GetAttribute("axis") and "XY"];
	local v4 = p1:GetAttribute("maxSize") or Vector2.new(math.huge, math.huge);
	local v5 = p1:GetAttribute("minSize") or Vector2.new(0, 0);
	if typeof(v4) == "UDim2" then
		if p1.Parent == nil then
			v4 = Vector2.new(0, 0);
		else
			local l__AbsoluteSize__6 = p1.Parent.AbsoluteSize;
			v4 = Vector2.new(l__AbsoluteSize__6.X / v4.X.Scale + v4.X.Offset, l__AbsoluteSize__6.Y / v4.Y.Scale + v4.Y.Offset);
		end;
	end;
	local v7 = 0;
	local v8 = 0;
	local v9 = p1:FindFirstChildOfClass("UIPadding");
	if v9 ~= nil then
		v7 = v9.PaddingLeft.Offset + v9.PaddingRight.Offset;
		v8 = v9.PaddingTop.Offset + v9.PaddingBottom.Offset;
	end;
	if p2 then
		local v10 = p2.AbsoluteContentSize;
	elseif p1:IsA("TextButton") or p1:IsA("TextLabel") then
		v10 = p1.TextBounds;
	else
		v10 = Vector2.new(0, 0);
		for v11, v12 in p1() do
			if v12:IsA("GuiObject") then
				v10 = Vector2.new(math.max(v10.X, v12.Position.X.Offset + v12.Size.X.Offset), math.max(v10.Y, v12.Position.Y.Offset + v12.Size.Y.Offset));
			end;
		end;
	end;
	v1 = math.max(v10.X + v7, v5.X);
	v2 = math.max(v10.Y + v8, v5.Y);
	if v3 == Enum.AutomaticSize.XY then
		local v13 = UDim.new(0, v1);
		local v14 = UDim.new(0, v2);
		local v15 = UDim.new(0, math.min(v1, v4.X));
		local v16 = UDim.new(0, math.min(v2, v4.Y));
	elseif v3 == Enum.AutomaticSize.X then
		v13 = UDim.new(0, v1);
		v14 = p1.Size.Y;
		v15 = UDim.new(0, math.min(v1, v4.X));
		v16 = p1.Size.Y;
	else
		v13 = p1.Size.X;
		v14 = UDim.new(0, v2);
		v15 = p1.Size.X;
		v16 = UDim.new(0, math.min(v2, v4.Y));
	end;
	if p1:IsA("ScrollingFrame") then
		local v17 = v13;
		local v18 = v14;
		if v15.Offset < v13.Offset then
			v18 = v18 - UDim.new(0, p1.ScrollBarThickness);
		end;
		if v16.Offset < v14.Offset then
			v17 = v17 - UDim.new(0, p1.ScrollBarThickness);
		end;
		p1.CanvasSize = UDim2.new(v17, v18);
	end;
	p1.Size = UDim2.new(v15, v16);
end;
local function u5(p3, p4)
	local u6 = nil;
	local u7 = nil;
	local l__Parent__19 = p3.Parent;
	if u6 ~= l__Parent__19 then
		if u7 ~= nil then
			u7:Disconnect();
			u7 = nil;
		end;
		if l__Parent__19 ~= nil then
			u7 = l__Parent__19:GetPropertyChangedSignal("AbsoluteSize"):Connect(p4);
			u6 = l__Parent__19;
		end;
	end;
	p3:GetPropertyChangedSignal("Parent"):Connect(function()
		local l__Parent__20 = p3.Parent;
		if u6 == l__Parent__20 then
			return;
		end;
		if u7 ~= nil then
			u7:Disconnect();
			u7 = nil;
		end;
		if l__Parent__20 == nil then
			return;
		end;
		u7 = l__Parent__20:GetPropertyChangedSignal("AbsoluteSize"):Connect(p4);
		u6 = l__Parent__20;
	end);
end;
return function(p5, p6)
	p6 = p6 or u1;
	if p6.maxSize then
		p5:SetAttribute("maxSize", p6.maxSize);
	end;
	if p6.minSize then
		p5:SetAttribute("minSize", p6.maxSize);
	end;
	if p6.axis then
		p5:SetAttribute("axis", p6.axis.Name);
	end;
	if not l__RunService__2:IsClient() and typeof(p5:GetAttribute("maxSize") and nil) == "UDim2" then
		l__CollectionService__3:AddTag(p5, "PlasmaAutomaticSize");
		return;
	end;
	local v21 = p5:FindFirstChildWhichIsA("UIGridStyleLayout");
	u4(p5, v21);
	if typeof(p5:GetAttribute("maxSize") and nil) == "UDim2" then
		u5(p5, function()
			u4(p5, v21);
		end);
	end;
	if v21 then
		v21:GetPropertyChangedSignal("AbsoluteContentSize"):Connect(function()
			u4(p5, v21);
		end);
	elseif p5:IsA("TextLabel") or p5:IsA("TextButton") then
		p5:GetPropertyChangedSignal("TextBounds"):Connect(function()
			u4(p5);
		end);
	else
		for v22, v23 in p5() do
			if v23:IsA("GuiObject") then
				v23:GetPropertyChangedSignal("Size"):Connect(function()
					u4(p5);
				end);
			end;
		end;
		p5.ChildAdded:Connect(function(p7)
			u4(p5);
			if p7:IsA("GuiObject") then
				p7:GetPropertyChangedSignal("Size"):Connect(function()
					u4(p5);
				end);
			end;
		end);
		p5.ChildRemoved:Connect(function()
			u4(p5);
		end);
	end;
	p5:GetAttributeChangedSignal("maxSize"):Connect(function()
		u4(p5, v21);
	end);
	p5:GetAttributeChangedSignal("minSize"):Connect(function()
		u4(p5, v21);
	end);
end;
