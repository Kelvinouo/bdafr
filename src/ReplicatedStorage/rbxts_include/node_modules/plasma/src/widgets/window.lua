-- Decompiled with the Synapse X Luau decompiler.

local v1 = require(script.Parent.Parent.Runtime);
local u1 = require(script.Parent.Parent.Style);
local u2 = require(script.Parent.Parent.createConnect);
local u3 = require(script.Parent.Parent.create);
local l__GuiService__4 = game:GetService("GuiService");
local l__UserInputService__5 = game:GetService("UserInputService");
local u6 = Vector2.new(50, 50);
local u7 = require(script.Parent.Parent.automaticSize);
local u8 = Vector2.new(1500, 500);
return v1.widget(function(p1, p2)
	local v2, v3 = v1.useState(false);
	local v4 = v1.useInstance(function(p3)
		local v5 = u1.get();
		local v6 = {
			[p3] = "frame", 
			BackgroundColor3 = v5.bg2, 
			Position = UDim2.new(0, 0, 0, 0), 
			Size = UDim2.new(0, 50, 0, 40)
		};
		local v7 = {
			[p3] = "titleBar", 
			Size = UDim2.new(1, 0, 0, 40), 
			BackgroundTransparency = 1, 
			Text = ""
		};
		local u9 = nil;
		local u10 = u2();
		function v7.InputBegan(p4)
			if not p3.titleBar.Active then
				return;
			end;
			if p4.UserInputType ~= Enum.UserInputType.MouseButton1 then
				return;
			end;
			if p3.frame.Parent:FindFirstChildWhichIsA("UIGridStyleLayout") and not p3.frame.Parent:IsA("ScreenGui") then
				local v8 = p3.frame.AbsolutePosition;
				local v9 = p3.frame:FindFirstAncestorOfClass("ScreenGui");
				if v9.IgnoreGuiInset then
					v8 = v8 + l__GuiService__4:GetGuiInset();
				end;
				p3.frame.Parent = v9;
				p3.frame.Position = UDim2.new(0, v8.X, 0, v8.Y);
			end;
			local u11 = p4.Position;
			u9 = u10(l__UserInputService__5, "InputChanged", function(p5)
				local v10 = u11 - p5.Position;
				u11 = p5.Position;
				p3.frame.Position = p3.frame.Position - UDim2.new(0, v10.X, 0, v10.Y);
			end);
		end;
		function v7.InputEnded(p6)
			if u9 and p6.UserInputType == Enum.UserInputType.MouseButton1 then
				u9:Disconnect();
				u9 = nil;
			end;
		end;
		v7[1] = u3("Frame", {
			[p3] = "handle", 
			Position = UDim2.new(0, -5, 0, 0),
			u3("TextLabel", {
				Text = "..", 
				Position = UDim2.new(0, 0, 0, 0), 
				BackgroundTransparency = 1, 
				TextSize = 20, 
				TextColor3 = v5.mutedTextColor
			}), u3("TextLabel", {
				Text = "..", 
				Position = UDim2.new(0, 0, 0, 7), 
				BackgroundTransparency = 1, 
				TextSize = 20, 
				TextColor3 = v5.mutedTextColor
			}), u3("TextLabel", {
				Text = "..", 
				Position = UDim2.new(0, 0, 0, -7), 
				BackgroundTransparency = 1, 
				TextSize = 20, 
				TextColor3 = v5.mutedTextColor
			})
		});
		v7[2] = u3("TextLabel", {
			[p3] = "title", 
			BackgroundTransparency = 1, 
			Font = Enum.Font.GothamBold, 
			Size = UDim2.new(1, 0, 1, 0), 
			TextColor3 = v5.mutedTextColor, 
			TextSize = 20, 
			TextXAlignment = Enum.TextXAlignment.Left, 
			TextYAlignment = Enum.TextYAlignment.Top, 
			TextTruncate = Enum.TextTruncate.AtEnd
		});
		v7[3] = u3("TextButton", {
			[p3] = "close", 
			BackgroundColor3 = Color3.fromHex("e74c3c"), 
			Size = UDim2.new(0, 20, 0, 20), 
			Text = "", 
			AnchorPoint = Vector2.new(0.5, 0), 
			Position = UDim2.new(1, -10, 0, 0), 
			TextColor3 = Color3.fromHex("#71190f"), 
			TextSize = 20, 
			Font = Enum.Font.Gotham, 
			MouseEnter = function()
				p3.close.Text = "x";
			end, 
			MouseLeave = function()
				p3.close.Text = "";
			end, 
			Activated = function()
				v3(true);
			end,
			u3("UICorner", {
				CornerRadius = UDim.new(1, 0)
			})
		});
		v6[1] = u3("UICorner", {});
		v6[2] = u3("UIPadding", {
			PaddingBottom = UDim.new(0, 20), 
			PaddingLeft = UDim.new(0, 20), 
			PaddingRight = UDim.new(0, 20), 
			PaddingTop = UDim.new(0, 20)
		});
		v6[3] = u3("UIStroke", {});
		v6[4] = u3("TextButton", v7);
		v6[5] = u3("ScrollingFrame", {
			[p3] = "container", 
			BackgroundTransparency = 1, 
			VerticalScrollBarInset = Enum.ScrollBarInset.ScrollBar, 
			HorizontalScrollBarInset = Enum.ScrollBarInset.ScrollBar, 
			BorderSizePixel = 0, 
			ScrollBarThickness = 6, 
			Position = UDim2.new(0, 0, 0, 40),
			u3("UIListLayout", {
				SortOrder = Enum.SortOrder.LayoutOrder, 
				Padding = UDim.new(0, 10)
			})
		});
		v6[6] = u3("TextButton", {
			[p3] = "resizeHandle", 
			Size = UDim2.new(0, 20, 0, 20), 
			Text = "\226\137\161", 
			Font = Enum.Font.SourceSans, 
			TextSize = 20, 
			Rotation = -45, 
			BackgroundTransparency = 1, 
			TextColor3 = v5.mutedTextColor, 
			Position = UDim2.new(1, 0, 1, 0), 
			InputBegan = function(p7)
				if p7.UserInputType ~= Enum.UserInputType.MouseButton1 then
					return;
				end;
				local l__Position__12 = p7.Position;
				local l__AbsoluteSize__13 = p3.container.AbsoluteSize;
				u9 = u10(l__UserInputService__5, "InputChanged", function(p8)
					if p8.UserInputType ~= Enum.UserInputType.MouseMovement then
						return;
					end;
					local v11 = l__AbsoluteSize__13 + Vector2.new(p8.Position.X - l__Position__12.X, p8.Position.Y - l__Position__12.Y);
					p3.container:SetAttribute("maxSize", Vector2.new(math.max(u6.X, v11.X), math.max(u6.Y, v11.Y)));
				end);
			end, 
			InputEnded = function(p9)
				if u9 and p9.UserInputType == Enum.UserInputType.MouseButton1 then
					u9:Disconnect();
					u9 = nil;
				end;
			end
		});
		u3("Frame", v6);
		u7(p3.container);
		u7(p3.frame);
		return p3.frame, p3.container;
	end);
	if type(p1) == "string" then
		p1 = {
			title = p1
		};
	end;
	if p1.movable ~= nil then
		local v12 = p1.movable;
	else
		v12 = true;
	end;
	if p1.resizable ~= nil then
		local v13 = p1.movable;
	else
		v13 = true;
	end;
	v4.close.Visible = p1.closable and false;
	v4.handle.Visible = v12;
	v4.titleBar.Active = v12;
	v4.resizeHandle.Visible = v13;
	if p1.closable then
		local v14 = -30;
	else
		v14 = 0;
	end;
	v4.title.Size = UDim2.new(1, v14, 1, 0);
	if v12 then
		local v15 = "  ";
	else
		v15 = "";
	end;
	v4.title.Text = p1.title and v15 .. string.upper(p1.title) or "";
	v1.useEffect(function()
		v4.container:SetAttribute("maxSize", p1.maxSize or u8);
	end, p1.maxSize);
	v1.useEffect(function()
		v4.container:SetAttribute("minSize", p1.minSize);
	end, p1.minSize);
	v1.scope(p2);
	local v16 = {};
	function v16.closed()
		if not v2 then
			return false;
		end;
		v3(false);
		return true;
	end;
	return v16;
end);
