
-- Decompiled with the Synapse X Luau decompiler.

local v1 = require(script.Parent.Maid);
local v2 = require(script.Parent.RotatedRegion3);
local l__enums__3 = require(script.Parent.Enum).enums;
local l__Players__4 = game:GetService("Players");
local l__RunService__5 = game:GetService("RunService");
local v6 = {};
local u1 = {};
local u2 = {};
local u3 = 0;
function v6.player(p1)
	return u1._getZonesAndPlayers(u2, u3, true, p1);
end;
local u4 = l__RunService__5:IsClient() and l__Players__4.LocalPlayer;
local function u5(p2, p3, p4)
	local v7 = p2[p3];
	if not v7 then
		v7 = {};
		p2[p3] = v7;
	end;
	v7[p4] = p4.Character and true;
end;
function v6.localPlayer(p5)
	local v8 = {};
	for v9, v10 in pairs((u1.getTouchingZones(u4, true, p5))) do
		if v10.activeTriggers.localPlayer then
			u5(v8, v10, u4);
		end;
	end;
	return v8;
end;
local l__Heartbeat__6 = l__RunService__5.Heartbeat;
local u7 = 0;
local u8 = {};
local u9 = nil;
u9 = (function(p6)
	local u10 = 0;
	local u11 = false;
	return function(...)
		u10 = u10 + 1;
		if u11 then
			return;
		end;
		local u12 = table.pack(...);
		coroutine.wrap(function()
			l__Heartbeat__6:Wait();
			u11 = false;
			if not (u10 > 1) then
				u10 = 0;
				return;
			end;
			u10 = 1;
			return p6(unpack(u12));
		end)();
		u11 = true;
		return p6(...);
	end;
end)(function()
	u7 = 0;
	u8 = {};
	local v11 = {
		UpperTorso = true, 
		LowerTorso = true, 
		Torso = true, 
		LeftHand = true, 
		RightHand = true, 
		LeftFoot = true, 
		RightFoot = true
	};
	for v12, v13 in pairs(l__Players__4:GetPlayers()) do
		local v14 = u1.getCharacterRegion(v13);
		if v14 then
			local l__Size__15 = v14.Size;
			u7 = u7 + l__Size__15.X * l__Size__15.Y * l__Size__15.Z;
			for v16, v17 in pairs(v13.Character:GetChildren()) do
				if v17:IsA("BasePart") and not v11[v17.Name] then
					table.insert(u8, v17);
					local u13 = nil;
					u13 = v17:GetPropertyChangedSignal("Parent"):Connect(function()
						if v17.Parent == nil then
							u13:Disconnect();
							u9();
						end;
					end);
				end;
			end;
		end;
	end;
end);
local function v18(p7)
	p7.CharacterAdded:Connect(function(p8)
		local l__Humanoid__19 = p8:WaitForChild("Humanoid", 3);
		if l__Humanoid__19 then
			u9();
			for v20, v21 in pairs(l__Humanoid__19:GetChildren()) do
				if v21:IsA("NumberValue") then
					v21.Changed:Connect(function()
						u9();
					end);
				end;
			end;
		end;
	end);
end;
l__Players__4.PlayerAdded:Connect(v18);
for v22, v23 in pairs(l__Players__4:GetPlayers()) do
	v18(v23);
end;
local u14 = {};
l__Players__4.PlayerRemoving:Connect(function(p9)
	u9();
	u14[p9] = nil;
end);
local u15 = {};
function u1._registerZone(p10)
	u15[p10] = true;
	local v24 = p10._maid:give(v1.new());
	p10._registeredMaid = v24;
	v24:give(p10.updated:Connect(function()
		u1._updateZoneDetails();
	end));
	u1._updateZoneDetails();
end;
function u1._deregisterZone(p11)
	u15[p11] = nil;
	p11._registeredMaid:clean();
	p11._registeredMaid = nil;
	u1._updateZoneDetails();
end;
local function u16(p12)
	local v25 = 0;
	for v26, v27 in pairs(p12) do
		v25 = v25 + 1;
	end;
	return v25;
end;
local u17 = 0;
local u18 = {};
function u1._registerConnection(p13, p14)
	local v28 = u16(p13.activeTriggers);
	u17 = u17 + 1;
	if v28 == 0 then
		u2[p13] = true;
		u1._updateZoneDetails();
	end;
	local v29 = u18[p14];
	u18[p14] = v29 and v29 + 1 or 1;
	p13.activeTriggers[p14] = true;
	if p13.touchedConnectionActions[p14] then
		p13:_formTouchedConnection(p14);
	end;
	if v6[p14] then
		u1._formHeartbeat(p14);
	end;
end;
function u1.updateDetection(p15)
	for v30, v31 in pairs({
		enterDetection = "_currentEnterDetection", 
		exitDetection = "_currentExitDetection"
	}) do
		local v32 = p15[v30];
		if v32 == l__enums__3.Detection.Automatic then
			if u7 > 729000 then
				v32 = l__enums__3.Detection.Centre;
			else
				v32 = l__enums__3.Detection.WholeBody;
			end;
		end;
		p15[v31] = v32;
	end;
end;
local u19 = {};
function u1._formHeartbeat(p16)
	if u19[p16] then
		return;
	end;
	local u20 = 0;
	u19[p16] = l__Heartbeat__6:Connect(function()
		local v33 = os.clock();
		if u20 <= v33 then
			local v34 = nil;
			local v35 = nil;
			for v36, v37 in pairs(u2) do
				if v36.activeTriggers[p16] then
					local l__accuracy__38 = v36.accuracy;
					if v34 == nil or l__accuracy__38 < v34 then
						v34 = l__accuracy__38;
					end;
					u1.updateDetection(v36);
					local l___currentEnterDetection__39 = v36._currentEnterDetection;
					if v35 == nil or l___currentEnterDetection__39 < v35 then
						v35 = l___currentEnterDetection__39;
					end;
				end;
			end;
			local v40 = v34;
			local v41 = v6[p16](v35);
			for v42, v43 in pairs(u2) do
				if v42.activeTriggers[p16] then
					local l__accuracy__44 = v42.accuracy;
					local v45 = v41[v42] or {};
					local v46 = false;
					local v47, v48, v49 = pairs(v45);
					local v50, v51 = v47(v48, v49);
					if v50 then
						v46 = true;
					end;
					if v46 and v40 < l__accuracy__44 then
						v40 = l__accuracy__44;
					end;
					v42:_updateOccupants(p16, v45);
				end;
			end;
			u20 = v33 + l__enums__3.Accuracy.getProperty(v40);
		end;
	end);
end;
function u1._deregisterConnection(p17, p18)
	u17 = u17 - 1;
	if u18[p18] == 1 then
		u18[p18] = nil;
		local v52 = u19[p18];
		if v52 then
			u19[p18] = nil;
			v52:Disconnect();
		end;
	else
		u18[p18] = u18[p18] - 1;
	end;
	p17.activeTriggers[p18] = nil;
	if u16(p17.activeTriggers) == 0 then
		u2[p17] = nil;
		u1._updateZoneDetails();
	end;
	if p17.touchedConnectionActions[p18] then
		p17:_disconnectTouchedConnection(p18);
	end;
end;
local u21 = {};
local u22 = {};
local u23 = {};
local u24 = {};
function u1._updateZoneDetails()
	u21 = {};
	u22 = {};
	u23 = {};
	u24 = {};
	u3 = 0;
	local v53, v54, v55 = pairs(u15);
	while true do
		local v56, v57 = v53(v54, v55);
		if not v56 then
			break;
		end;
		local v58 = u2[v56];
		if v58 then
			u3 = u3 + v56.volume;
		end;
		for v59, v60 in pairs(v56.groupParts) do
			if v58 then
				table.insert(u21, v60);
				u22[v60] = v56;
			end;
			table.insert(u23, v60);
			u24[v60] = v56;
		end;	
	end;
end;
function u1._getZonesAndPlayers(p19, p20, p21, p22)
	local v61 = p20;
	if not v61 then
		for v62, v63 in pairs(p19) do
			v61 = v61 + v62.volume;
		end;
	end;
	local v64 = {};
	if u7 < v61 then
		for v65, v66 in pairs(l__Players__4:GetPlayers()) do
			for v67, v68 in pairs((u1.getTouchingZones(v66, p21, p22))) do
				if not p21 or v68.activeTriggers.player then
					u5(v64, v68, v66);
				end;
			end;
		end;
		return v64;
	end;
	for v69, v70 in pairs(p19) do
		if not p21 or v69.activeTriggers.player then
			local v71 = {};
			for v72, v73 in pairs((workspace:FindPartsInRegion3WithWhiteList(v69.region, u8, #u8))) do
				local l__Name__74 = v73.Parent.Name;
				if not v71[l__Name__74] then
					v71[l__Name__74] = l__Players__4:GetPlayerFromCharacter(v73.Parent);
				end;
			end;
			for v75, v76 in pairs(v71) do
				if v76 and v69:findPlayer(v76) then
					u5(v64, v69, v76);
				end;
			end;
		end;
	end;
	return v64;
end;
function u1.getZones()
	local v77 = {};
	for v78, v79 in pairs(u15) do
		table.insert(v77, v78);
	end;
	return v77;
end;
function u1.getCharacterRegion(p23)
	local l__Character__80 = p23.Character;
	local v81 = l__Character__80 and l__Character__80:FindFirstChild("Head");
	local v82 = l__Character__80 and l__Character__80:FindFirstChild("HumanoidRootPart");
	if not v82 or not v81 then
		return nil;
	end;
	local l__Y__83 = v81.Size.Y;
	local l__Size__84 = v82.Size;
	local v85 = l__Size__84 * Vector3.new(2, 2, 1) + Vector3.new(0, l__Y__83, 0);
	local v86 = v82.CFrame * CFrame.new(0, l__Y__83 / 2 - l__Size__84.Y / 2, 0);
	return v2.new(v86, v85), v86, v85;
end;
function u1.getTouchingZones(p24, p25, p26)
	u14[p24] = nil;
	local v87 = u14[p24] and p26;
	if v87 == l__enums__3.Detection.WholeBody then
		local v88 = u1.getCharacterRegion(p24);
	else
		local l__Character__89 = p24.Character;
		local v90 = l__Character__89 and l__Character__89:FindFirstChild("HumanoidRootPart");
		local v91 = v90 and v90.CFrame;
		v88 = v91 and v2.new(v91, Vector3.new(0.1, 0.1, 0.1));
	end;
	if not v88 then
		return {};
	end;
	local v92 = p25 and u21 or u23;
	local v93 = p25 and u22 or u24;
	local v94 = v88:FindPartsInRegion3WithWhiteList(v92, #v92);
	if #v94 > 0 then
		local l__HumanoidRootPart__95 = p24.Character.HumanoidRootPart;
		local l__CFrame__96 = l__HumanoidRootPart__95.CFrame;
		local l__X__97 = l__HumanoidRootPart__95.Size.X;
		if v87 == l__enums__3.Detection.WholeBody then
			local v98 = { (l__CFrame__96 * CFrame.new(-l__X__97, 0, 0)).Position, (l__CFrame__96 * CFrame.new(l__X__97, 0, 0)).Position };
		else
			v98 = { l__HumanoidRootPart__95.Position };
		end;
		if not u1.verifyTouchingParts(v98, v94) then
			return {};
		end;
	end;
	local v99 = {};
	local v100 = {};
	for v101, v102 in pairs(v94) do
		local v103 = v93[v102];
		if v103 then
			v99[v103] = true;
			v100[v102] = v103;
		end;
	end;
	local v104 = {};
	local v105 = nil;
	for v106, v107 in pairs(v99) do
		if v105 == nil or v106._currentExitDetection < v105 then
			v105 = v106._currentExitDetection;
		end;
		table.insert(v104, v106);
	end;
	if v105 then
		u14[p24] = v105;
	end;
	return v104, v100;
end;
function u1.getHeightOfParts(p27)
	local v108 = nil;
	local v109 = nil;
	local v110, v111, v112 = pairs(p27);
	while true do
		local v113, v114 = v110(v111, v112);
		if not v113 then
			break;
		end;
		local v115 = (v114.Size.Y + 10) / 2;
		local v116 = v114.Position.Y + v115;
		local v117 = v114.Position.Y - v115;
		if v108 == nil or v108 < v116 then
			v108 = v116;
		end;
		if v109 == nil or v117 < v109 then
			v109 = v117;
		end;	
	end;
	return v108 - v109, v109, v108;
end;
function u1.vectorIsBetweenYBounds(p28, p29)
	local v118, v119, v120 = u1.getHeightOfParts(p29);
	local v121 = RaycastParams.new();
	v121.FilterDescendantsInstances = p29;
	v121.FilterType = Enum.RaycastFilterType.Whitelist;
	local v122 = 1 - 1;
	while true do
		local v123 = workspace:Raycast(Vector3.new(p28.X, v122 == 1 and v120 or v119, p28.Z), Vector3.new(0, v122 == 1 and -v118 or v118, 0), v121);
		local l__Y__124 = p28.Y;
		local v125 = v123 and v123.Position.Y;
		if not v125 then
			break;
		end;
		if v122 == 1 and v125 < l__Y__124 then
			break;
		end;
		if v122 == 2 and l__Y__124 < v125 then
			break;
		end;
		if 0 <= 1 then
			if not (v122 < 2) then
				return true;
			end;
		elseif not (v122 > 2) then
			return true;
		end;
		v122 = v122 + 1;	
	end;
	return false;
end;
function u1.verifyTouchingParts(p30, p31)
	local v126 = {
		MeshPart = true, 
		UnionOperation = true
	};
	local v127 = true;
	for v128, v129 in pairs(p31) do
		if not v126[v129.ClassName] then
			v127 = false;
		end;
	end;
	if not v127 then
		return true;
	end;
	for v130, v131 in pairs(p30) do
		if u1.vectorIsBetweenYBounds(v131, p31) then
			return true;
		end;
	end;
	return false;
end;
return u1;

