-- Script Hash: 78e1c5c9c519117e283e6bd357d748b44be6971a6cc3fbffea09e2469b9e9ede08dfe366101b3d39a9410692c63d7d94
-- Decompiled with the Synapse X Luau decompiler.

local v1 = (1 + math.sqrt(5)) / 2;
local v2 = Vector3.new(1, 0, 0);
local v3 = Vector3.new(0, 1, 0);
local v4 = Vector3.new(0, 0, 1);
local v5 = Vector3.new(-1, 0, 0);
local v6 = Vector3.new(0, -1, 0);
local v7 = Vector3.new(0, 0, -1);
local u1 = { Vector3.new(1, 1, 1), Vector3.new(-1, 1, 1), Vector3.new(-1, 1, -1), Vector3.new(1, 1, -1), Vector3.new(1, -1, 1), Vector3.new(-1, -1, 1), Vector3.new(-1, -1, -1), Vector3.new(1, -1, -1) };
local function v8(p1)
	local v9 = {};
	for v10 = 1, #p1 do
		v9[v10] = u1[p1[v10]];
	end;
	return v9;
end;
local u2 = math.pi * 2;
local v11 = {};
local function u3(p2, p3, p4)
	local v12 = {};
	for v13 = 1, #p4 do
		v12[v13] = p2:PointToWorldSpace(p4[v13] * p3);
	end;
	return v12;
end;
local u4 = v8({ 1, 2, 3, 4, 5, 6, 7, 8 });
function v11.Block(p5, p6)
	return u3(p5, p6, u4);
end;
local u5 = v8({ 1, 2, 5, 6, 7, 8 });
function v11.Wedge(p7, p8)
	return u3(p7, p8, u5);
end;
local u6 = v8({ 4, 5, 6, 7, 8 });
function v11.CornerWedge(p9, p10)
	return u3(p9, p10, u6);
end;
local u7 = (function(p11)
	local v14 = {};
	local v15 = u2 / p11;
	for v16 = 1, p11 do
		local v17 = CFrame.fromAxisAngle(v2, v16 * v15) * v3;
		v14[v16] = v2 + v17;
		v14[p11 + v16] = v5 + v17;
	end;
	return v14;
end)(20);
function v11.Cylinder(p12, p13)
	return u3(p12, p13, u7);
end;
local u8 = (function(p14)
	local v18 = { 1, 12, 6, 1, 6, 2, 1, 2, 8, 1, 8, 11, 1, 11, 12, 2, 6, 10, 6, 12, 5, 12, 11, 3, 11, 8, 7, 8, 2, 9, 4, 10, 5, 4, 5, 3, 4, 3, 7, 4, 7, 9, 4, 9, 10, 5, 10, 6, 3, 5, 12, 7, 3, 11, 9, 7, 8, 10, 9, 2 };
	local u9 = {};
	local u10 = { Vector3.new(-1, v1, 0), Vector3.new(1, v1, 0), Vector3.new(-1, -v1, 0), Vector3.new(1, -v1, 0), Vector3.new(0, -1, v1), Vector3.new(0, 1, v1), Vector3.new(0, -1, -v1), Vector3.new(0, 1, -v1), Vector3.new(v1, 0, -1), Vector3.new(v1, 0, 1), Vector3.new(-v1, 0, -1), Vector3.new(-v1, 0, 1) };
	local function v19(p15, p16)
		local v20 = p15 < p16 and p15 .. "," .. p16 or p16 .. "," .. p15;
		if not u9[v20] then
			u10[#u10 + 1] = (u10[p15] + u10[p16]) / 2;
			u9[v20] = #u10;
		end;
		return u9[v20];
	end;
	for v21 = 1, p14 do
		for v22 = #v18, 1, -3 do
			local v23 = v18[v22 - 2];
			local v24 = v18[v22 - 1];
			local v25 = v18[v22];
			local v26 = v19(v23, v24);
			local v27 = v19(v24, v25);
			local v28 = v19(v25, v23);
			v18[#v18 + 1] = v23;
			v18[#v18 + 1] = v26;
			v18[#v18 + 1] = v28;
			v18[#v18 + 1] = v24;
			v18[#v18 + 1] = v27;
			v18[#v18 + 1] = v26;
			v18[#v18 + 1] = v25;
			v18[#v18 + 1] = v28;
			v18[#v18 + 1] = v27;
			v18[#v18 + 1] = v26;
			v18[#v18 + 1] = v27;
			v18[#v18 + 1] = v28;
			table.remove(v18, v22);
			table.remove(v18, v22 - 1);
			table.remove(v18, v22 - 2);
		end;
	end;
	for v29 = 1, #u10 do
		u10[v29] = u10[v29].Unit;
	end;
	return u10;
end)(2);
function v11.Ball(p17, p18)
	return u3(p17, p18, u8);
end;
function v11.GetCentroid(p19)
	local v30 = nil;
	v30 = p19[1];
	for v31 = 2, #p19 do
		v30 = v30 + p19[2];
	end;
	return local v32 / #p19;
end;
function v11.Classify(p20)
	if p20.ClassName == "Part" then
		if p20.Shape == Enum.PartType.Block then
			return "Block";
		elseif p20.Shape == Enum.PartType.Cylinder then
			return "Cylinder";
		elseif p20.Shape == Enum.PartType.Ball then
			return "Ball";
		else
			return;
		end;
	else
		if p20.ClassName == "WedgePart" then
			return "Wedge";
		end;
		if p20.ClassName == "CornerWedgePart" then
			return "CornerWedge";
		end;
		if not p20:IsA("BasePart") then
			return;
		end;
	end;
	return "Block";
end;
return v11;
