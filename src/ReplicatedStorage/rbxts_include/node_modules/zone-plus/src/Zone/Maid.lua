
-- Decompiled with the Synapse X Luau decompiler.

local u1 = {
	ClassName = "Maid", 
	new = function()
		return setmetatable({
			_tasks = {}
		}, u1);
	end, 
	isMaid = function(p1)
		local v1 = false;
		if type(p1) == "table" then
			v1 = p1.ClassName == "Maid";
		end;
		return v1;
	end, 
	__index = function(p2, p3)
		if u1[p3] then
			return u1[p3];
		end;
		return p2._tasks[p3];
	end, 
	__newindex = function(p4, p5, p6)
		if u1[p5] ~= nil then
			error(("'%s' is reserved"):format(tostring(p5)), 2);
		end;
		local l___tasks__2 = p4._tasks;
		local v3 = l___tasks__2[p5];
		if v3 == p6 then
			return;
		end;
		l___tasks__2[p5] = p6;
		if v3 then
			if type(v3) == "function" then
				v3();
				return;
			end;
			if typeof(v3) == "RBXScriptConnection" then
				v3:Disconnect();
				return;
			end;
			if not v3.Destroy then
				if v3.destroy then
					v3:destroy();
				end;
				return;
			end;
		else
			return;
		end;
		v3:Destroy();
	end, 
	giveTask = function(p7, p8)
		if not p8 then
			error("Task cannot be false or nil", 2);
		end;
		local v4 = #p7._tasks + 1;
		p7[v4] = p8;
		if type(p8) == "table" and not p8.Destroy and not p8.destroy then
			warn("[Maid.GiveTask] - Gave table task without .Destroy\n\n" .. debug.traceback());
		end;
		return v4;
	end, 
	give = function(p9, p10)
		if type(p10) == "table" and p10.isAPromise then
			local v5, v6 = p9:givePromise(p10);
			_ = v5;
			local v7 = v6;
		else
			v7 = p9:giveTask(p10);
		end;
		return p10, v7;
	end, 
	doCleaning = function(p11)
		local l___tasks__8 = p11._tasks;
		for v9, v10 in pairs(l___tasks__8) do
			if typeof(v10) == "RBXScriptConnection" then
				l___tasks__8[v9] = nil;
				v10:Disconnect();
			end;
		end;
		local v11, v12 = next(l___tasks__8);
		while v12 ~= nil do
			l___tasks__8[v11] = nil;
			if type(v12) == "function" then
				v12();
			elseif typeof(v12) == "RBXScriptConnection" then
				v12:Disconnect();
			elseif v12.Destroy then
				v12:Destroy();
			elseif v12.destroy then
				v12:destroy();
			end;
			local v13, v14 = next(l___tasks__8);
			v11 = v13;
			v12 = v14;		
		end;
	end
};
u1.destroy = u1.doCleaning;
u1.clean = u1.doCleaning;
return u1;

