-- Decompiled with the Synapse X Luau decompiler.

local v1 = {
	PointCloud = function(p1, p2)
		local v2 = p1[1];
		local v3 = p1[1]:Dot(p2);
		for v4 = 2, #p1 do
			local v5 = p1[v4]:Dot(p2);
			if v3 < v5 then
				v2 = p1[v4];
				v3 = v5;
			end;
		end;
		return v2;
	end
};
local u1 = Vector3.new(1, 0, 0);
local u2 = Vector3.new(0, 0, 0);
function v1.Cylinder(p3, p4)
	local v6, v7 = unpack(p3);
	p4 = v6:VectorToObjectSpace(p4);
	local v8 = math.min(v7.y, v7.z);
	local v9 = p4:Dot(u1);
	local v10 = Vector3.new(v7.x, 0, 0);
	if v9 == 0 then
		local v11 = p4.Unit * v8;
	else
		local v12 = v9 > 0 and v10 or -v10;
		v11 = v12 + (u2 + -(u2 - v12):Dot(u1) / p4:Dot(u1) * p4 - v12).Unit * v8;
	end;
	return v6:PointToWorldSpace(v11);
end;
function v1.Ellipsoid(p5, p6)
	local v13, v14 = unpack(p5);
	return v13:PointToWorldSpace(v14 * (v14 * v13:VectorToObjectSpace(p6)).Unit);
end;
return v1;
