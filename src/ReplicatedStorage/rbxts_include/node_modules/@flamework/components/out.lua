
-- Decompiled with the Synapse X Luau decompiler.

local v1 = _G[script];
local v2 = v1.import(script, v1.getModule(script, "@rbxts", "services"));
local v3 = v1.import(script, v1.getModule(script, "@flamework", "core").out);
local v4 = setmetatable({}, {
	__tostring = function()
		return "BaseComponent";
	end
});
v4.__index = v4;
function v4.new(...)
	local v5 = setmetatable({}, v4);
	return v5:constructor(...) and v5;
end;
local u1 = v1.import(script, v1.getModule(script, "@rbxts", "maid").Maid);
function v4.constructor(p1)
	p1.maid = u1.new();
	p1._attributeChangeHandlers = {};
end;
function v4.setInstance(p2, p3, p4)
	p2.instance = p3;
	p2.attributes = p4;
end;
function v4.setAttribute(p5, p6, p7, p8)
	p5.attributes[p6] = p7;
	p5.instance:SetAttribute(p6, p7);
	if p8 then
		return p5.attributes[p6];
	end;
	return p7;
end;
function v4.onAttributeChanged(p9, p10, p11)
	local v6 = p9._attributeChangeHandlers[p10];
	if not v6 then
		v6 = {};
		p9._attributeChangeHandlers[p10] = v6;
	end;
	v6[#v6 + 1] = p11;
end;
function v4.destroy(p12)
	p12.maid:Destroy();
end;
local v7 = setmetatable({}, {
	__tostring = function()
		return "Components";
	end
});
v7.__index = v7;
function v7.new(...)
	local v8 = setmetatable({}, v7);
	return v8:constructor(...) and v8;
end;
function v7.constructor(p13)
	p13.components = {};
	p13.activeComponents = {};
	p13.reverseComponentsMapping = {};
	p13.tick = {};
	p13.physics = {};
	p13.render = {};
end;
local l__Reflect__2 = v3.Reflect;
function v7.onInit(p14)
	local v9 = {};
	for v10, v11 in pairs(l__Reflect__2.objToId) do
		local v12 = l__Reflect__2.getOwnMetadata(v10, "flamework:decorators.$c:init@Component");
		if v12 then
			v9[v10] = {
				ctor = v10, 
				config = v12, 
				identifier = v11
			};
		end;
	end;
	p14.components = v9;
end;
local l__RunService__3 = v2.RunService;
local l__CollectionService__4 = v2.CollectionService;
function v7.onStart(p15)
	for v13, v14 in pairs(p15.components) do
		local l__config__15 = v14.config;
		local l__ctor__16 = v14.ctor;
		local l__identifier__17 = v14.identifier;
		if l__config__15.tag ~= nil then
			local u5 = p15:getInstanceGuard(l__ctor__16);
			local u6 = {};
			local u7 = nil;
			local u8 = {};
			local function u9(p16)
				local u10 = nil;
				u10 = p16.DescendantAdded:Connect(function()
					if u5(p16) then
						p15:addComponent(p16, l__ctor__16, true);
						u10:Disconnect();
						u6[p16] = nil;
						u7(p16);
					end;
				end);
				u6[p16] = u10;
			end;
			u7 = function(p17)
				local u11 = nil;
				u11 = p17.DescendantRemoving:Connect(function()
					l__RunService__3.Heartbeat:Wait();
					if not u5(p17) then
						p15:removeComponent(p17, l__ctor__16);
						u11:Disconnect();
						u8[p17] = nil;
						u9(p17);
					end;
				end);
				u8[p17] = u11;
			end;
			local function v18(p18)
				if l__RunService__3:IsServer() or not u5 then
					return p15:addComponent(p18, l__ctor__16);
				end;
				if not u5(p18) then
					u9(p18);
					return;
				end;
				p15:addComponent(p18, l__ctor__16, true);
				u7(p18);
			end;
			l__CollectionService__4:GetInstanceAddedSignal(l__config__15.tag):Connect(v18);
			l__CollectionService__4:GetInstanceRemovedSignal(l__config__15.tag):Connect(function(p19)
				u6[p19] = nil;
				u8[p19] = nil;
				local v19 = u6[p19];
				if v19 ~= nil then
					v19:Disconnect();
				end;
				local v20 = u8[p19];
				if v20 ~= nil then
					v20:Disconnect();
				end;
				p15:removeComponent(p19, l__ctor__16);
			end);
			for v21, v22 in ipairs(l__CollectionService__4:GetTagged(l__config__15.tag)) do
				p15:safeCall("Failed to instantiate '" .. l__identifier__17 .. "' for " .. tostring(v22), function()
					return v18(v22);
				end);
			end;
		end;
	end;
end;
function v7.onTick(p20, p21)
	for v23, v24 in pairs(p20.tick) do
		p20:safeCall("Component '" .. tostring((l__Reflect__2.getMetadata(v23, "identifier"))) .. "' failed to tick " .. v23.instance:GetFullName(), function()
			return v23:onTick(p21);
		end);
	end;
end;
function v7.onRender(p22, p23)
	for v25, v26 in pairs(p22.render) do
		p22:safeCall("Component '" .. tostring((l__Reflect__2.getMetadata(v25, "identifier"))) .. "' failed to render " .. v25.instance:GetFullName(), function()
			return v25:onRender(p23);
		end);
	end;
end;
function v7.onPhysics(p24, p25, p26)
	for v27, v28 in pairs(p24.physics) do
		p24:safeCall("Component '" .. tostring((l__Reflect__2.getMetadata(v27, "identifier"))) .. "' failed to step " .. v27.instance:GetFullName(), function()
			return v27:onPhysics(p25, p26);
		end);
	end;
end;
function v7.getAttributeGuards(p27, p28)
	local v29 = {};
	local v30 = p27.components[p28];
	if v30 then
		if v30.config.attributes ~= nil then
			for v31, v32 in pairs(v30.config.attributes) do
				v29[v31] = v32;
			end;
		end;
		local v33 = getmetatable(p28);
		if v33.__index ~= nil then
			for v34, v35 in pairs(p27:getAttributeGuards(v33.__index)) do
				if v29[v34] == nil then
					v29[v34] = v35;
				end;
			end;
		end;
	end;
	return v29;
end;
function v7.getAttributes(p29, p30, p31, p32)
	local v36 = p30:GetAttributes();
	local v37 = {};
	local l__defaults__38 = p31.config.defaults;
	for v39, v40 in pairs(p32) do
		local v41 = v36[v39];
		if not v40(v41) then
			local v42 = l__defaults__38;
			if v42 ~= nil then
				v42 = v42[v39];
			end;
			if v42 ~= nil then
				v37[v39] = l__defaults__38[v39];
			else
				error(p30:GetFullName() .. " has invalid attribute '" .. v39 .. "' for '" .. p31.identifier .. "'");
			end;
		else
			v37[v39] = v41;
		end;
	end;
	return v37;
end;
function v7.getInstanceGuard(p33, p34)
	local v43 = nil;
	local v44 = p33.components[p34];
	if v44 then
		if v44.config.instanceGuard ~= nil then
			return v44.config.instanceGuard;
		end;
		v43 = getmetatable(p34);
		if v43.__index == nil then
			return;
		end;
	else
		return;
	end;
	return p33:getInstanceGuard(v43.__index);
end;
function v7.safeCall(p35, p36, p37)
	task.spawn(function()
		xpcall(p37, function(p38)
			if type(p38) == "string" then
				local v45 = debug.traceback(p38, 2);
				warn(p36);
				warn(v45);
				return;
			end;
			warn(p36);
			warn(p38);
			warn(debug.traceback(nil, 2));
		end);
	end);
end;
local l__Flamework__12 = v3.Flamework;
function v7.setupComponent(p39, p40, p41, p42, p43)
	local l__config__46 = p43.config;
	local l__identifier__47 = p43.identifier;
	p42:setInstance(p40, p41);
	if l__Flamework__12._implements(p42, "$:flamework@OnStart") then
		p39:safeCall("Component '" .. l__identifier__47 .. "' failed to start " .. p40:GetFullName(), function()
			return p42:onStart();
		end);
	end;
	if l__Flamework__12._implements(p42, "$:flamework@OnRender") then
		p39.render[p42] = true;
		p42.maid:GiveTask(function()
			p39.render[p42] = nil;
			return p39.render[p42] ~= nil;
		end);
	end;
	if l__Flamework__12._implements(p42, "$:flamework@OnPhysics") then
		p39.physics[p42] = true;
		p42.maid:GiveTask(function()
			p39.physics[p42] = nil;
			return p39.physics[p42] ~= nil;
		end);
	end;
	if l__Flamework__12._implements(p42, "$:flamework@OnTick") then
		p39.tick[p42] = true;
		p42.maid:GiveTask(function()
			p39.tick[p42] = nil;
			return p39.tick[p42] ~= nil;
		end);
	end;
	if l__config__46.refreshAttributes == nil or l__config__46.refreshAttributes then
		for v48, v49 in pairs((p39:getAttributeGuards(p43.ctor))) do
			if type(v48) == "string" then
				p42.maid:GiveTask(p40:GetAttributeChangedSignal(v48):Connect(function()
					local v50 = p42._attributeChangeHandlers[v48];
					local v51 = p40:GetAttribute(v48);
					local l__attributes__52 = p42.attributes;
					if v49(v51) then
						if v50 then
							for v53, v54 in ipairs(v50) do
								p39:safeCall("Component '" .. l__identifier__47 .. "' failed to call onAttributeChanged for " .. v48, function()
									return v54(v51, l__attributes__52[v48]);
								end);
							end;
						end;
						l__attributes__52[v48] = v51;
					end;
				end));
			end;
		end;
	end;
end;
function v7.getComponentFromSpecifier(p44, p45)
	return type(p45) == "string" and l__Reflect__2.idToObj[p45] or p45;
end;
function v7.getComponent(p46, p47, p48)
	local v55 = p46:getComponentFromSpecifier(p48);
	assert(v55, "Could not find component from specifier: " .. tostring(p48));
	local v56 = p46.activeComponents[p47];
	if not v56 then
		return nil;
	end;
	return v56[v55];
end;
function v7.addComponent(p49, p50, p51, p52)
	local v57 = p49:getComponentFromSpecifier(p51);
	assert(v57, "Could not find component from specifier: " .. tostring(p51));
	local v58 = p49.components[v57];
	assert(v58, "Provided componentSpecifier does not exist");
	if p52 ~= true then
		local v59 = p49:getInstanceGuard(v57);
		if v59 ~= nil then
			assert(v59(p50), p50:GetFullName() .. " did not pass instance guard check for '" .. v58.identifier .. "'");
		end;
	end;
	local v60 = p49.activeComponents[p50];
	if not v60 then
		v60 = {};
		p49.activeComponents[p50] = v60;
	end;
	local v61 = p49.reverseComponentsMapping[v57];
	if not v61 then
		v61 = {};
		p49.reverseComponentsMapping[v57] = v61;
	end;
	local v62 = v60[v57];
	if v62 ~= nil then
		return v62;
	end;
	local v63 = l__Flamework__12.createDependency(v57);
	v60[v57] = v63;
	v61[v63] = true;
	p49:setupComponent(p50, p49:getAttributes(p50, v58, (p49:getAttributeGuards(v57))), v63, v58);
	return v63;
end;
function v7.removeComponent(p53, p54, p55)
	local v64 = p53:getComponentFromSpecifier(p55);
	assert(v64, "Could not find component from specifier: " .. tostring(p55));
	local v65 = p53.activeComponents[p54];
	if not v65 then
		return nil;
	end;
	local v66 = v65[v64];
	if not v66 then
		return nil;
	end;
	local v67 = p53.reverseComponentsMapping[v64];
	if v67 then
		v67[v66] = nil;
	end;
	v66:destroy();
	v65[v64] = nil;
	local v68 = 0;
	for v69, v70 in pairs(v65) do
		v68 = v68 + 1;
	end;
	if v68 == 0 then
		p53.activeComponents[p54] = nil;
	end;
end;
function v7.getAllComponents(p56, p57)
	local v71 = p56:getComponentFromSpecifier(p57);
	assert(v71, "Could not find component from specifier: " .. tostring(p57));
	local v72 = p56.reverseComponentsMapping[v71];
	if not v72 then
		return {};
	end;
	local v73 = {};
	local v74 = #v73;
	for v75, v76 in pairs(v72) do
		v74 = v74 + 1;
		v73[v74] = v75;
	end;
	return v73;
end;
l__Reflect__2.defineMetadata(v7, "identifier", "$c:init@Components");
l__Reflect__2.defineMetadata(v7, "flamework:isExternal", false);
l__Reflect__2.defineMetadata(v7, "flamework:implements", { "$:flamework@OnInit", "$:flamework@OnStart", "$:flamework@OnTick", "$:flamework@OnPhysics", "$:flamework@OnRender" });
l__Reflect__2.defineMetadata(v7, "flamework:decorators", { "$:flamework@Service", "$:flamework@Controller" });
l__Reflect__2.defineMetadata(v7, "flamework:decorators.$:flamework@Service", {
	type = "Service", 
	loadOrder = 0
});
l__Reflect__2.defineMetadata(v7, "flamework:decorators.$:flamework@Controller", {
	type = "Controller", 
	loadOrder = 0
});
return {
	BaseComponent = v4, 
	Components = v7
};

