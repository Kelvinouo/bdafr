-- Decompiled with the Synapse X Luau decompiler.

local v1 = _G[script];
local v2 = v1.import(script, v1.getModule(script, "@rbxts", "services"));
local v3 = v1.import(script, v1.getModule(script, "@flamework", "core").out);
local l__Modding__4 = v3.Modding;
local v5 = l__Modding__4.createMetaDecorator("Class");
local v6 = setmetatable({}, {
	__tostring = function()
		return "BaseComponent";
	end
});
v6.__index = v6;
function v6.new(...)
	local v7 = setmetatable({}, v6);
	return v7:constructor(...) and v7;
end;
local u1 = v1.import(script, v1.getModule(script, "@rbxts", "maid").Maid);
function v6.constructor(p1)
	p1.maid = u1.new();
	p1._attributeChangeHandlers = {};
end;
function v6.setInstance(p2, p3, p4)
	p2.instance = p3;
	p2.attributes = p4;
end;
function v6.setAttribute(p5, p6, p7, p8)
	p5.attributes[p6] = p7;
	p5.instance:SetAttribute(p6, p7);
	if p8 then
		return p5.attributes[p6];
	end;
	return p7;
end;
function v6.onAttributeChanged(p9, p10, p11)
	local v8 = p9._attributeChangeHandlers[p10];
	if not v8 then
		v8 = {};
		p9._attributeChangeHandlers[p10] = v8;
	end;
	table.insert(v8, p11);
end;
function v6.destroy(p12)
	p12.maid:Destroy();
end;
local v9 = setmetatable({}, {
	__tostring = function()
		return "Components";
	end
});
v9.__index = v9;
function v9.new(...)
	local v10 = setmetatable({}, v9);
	return v10:constructor(...) and v10;
end;
function v9.constructor(p13)
	p13.components = {};
	p13.classParentCache = {};
	p13.activeComponents = {};
	p13.activeInheritedComponents = {};
	p13.reverseComponentsMapping = {};
end;
local l__Reflect__2 = v3.Reflect;
function v9.onInit(p14)
	local v11 = {};
	local v12, v13, v14 = ipairs((l__Modding__4.getDecorators("$c:init@Component")));
	while true do
		v12(v13, v14);
		if not v12 then
			break;
		end;
		v14 = v12;
		local l__object__15 = v13.object;
		v11[l__object__15] = {
			ctor = l__object__15, 
			config = v13.arguments[1] or {}, 
			identifier = l__Reflect__2.getMetadata(l__object__15, "identifier")
		};	
	end;
	p14.components = v11;
end;
local l__RunService__3 = v2.RunService;
local l__CollectionService__4 = v2.CollectionService;
function v9.onStart(p15)
	for v16, v17 in pairs(p15.components) do
		local l__config__18 = v17.config;
		local l__ctor__19 = v17.ctor;
		local l__identifier__20 = v17.identifier;
		if l__config__18.tag ~= nil then
			local u5 = p15:getInstanceGuard(l__ctor__19);
			local u6 = {};
			local u7 = nil;
			local u8 = {};
			u7 = function(p16)
				local u9 = nil;
				u9 = p16.DescendantRemoving:Connect(function()
					l__RunService__3.Heartbeat:Wait();
					if not u5(p16) then
						p15:removeComponent(p16, l__ctor__19);
						u9:Disconnect();
						u8[p16] = nil;
						local u10 = nil;
						u10 = p16.DescendantAdded:Connect(function()
							if u5(p16) then
								p15:addComponent(p16, l__ctor__19, true);
								u10:Disconnect();
								u6[p16] = nil;
								u7(p16);
							end;
						end);
						u6[p16] = u10;
					end;
				end);
				u8[p16] = u9;
			end;
			local function v21(p17)
				if l__RunService__3:IsServer() or not u5 then
					return p15:addComponent(p17, l__ctor__19);
				end;
				if u5(p17) then
					p15:addComponent(p17, l__ctor__19, true);
					u7(p17);
					return;
				end;
				local u11 = nil;
				u11 = p17.DescendantAdded:Connect(function()
					if u5(p17) then
						p15:addComponent(p17, l__ctor__19, true);
						u11:Disconnect();
						u6[p17] = nil;
						u7(p17);
					end;
				end);
				u6[p17] = u11;
			end;
			l__CollectionService__4:GetInstanceAddedSignal(l__config__18.tag):Connect(v21);
			l__CollectionService__4:GetInstanceRemovedSignal(l__config__18.tag):Connect(function(p18)
				local v22 = u6[p18];
				local v23 = u8[p18];
				u6[p18] = nil;
				u8[p18] = nil;
				if v22 ~= nil then
					v22:Disconnect();
				end;
				if v23 ~= nil then
					v23:Disconnect();
				end;
				p15:removeComponent(p18, l__ctor__19);
			end);
			local v24, v25, v26 = ipairs(l__CollectionService__4:GetTagged(l__config__18.tag));
			while true do
				v24(v25, v26);
				if not v24 then
					break;
				end;
				v26 = v24;
				p15:safeCall("Failed to instantiate '" .. l__identifier__20 .. "' for " .. tostring(v25), function()
					return v21(v25);
				end);			
			end;
		end;
	end;
end;
function v9.getParentConstructor(p19, p20)
	local v27 = getmetatable(p20);
	if not v27 or type(v27) ~= "table" then
		return;
	end;
	return rawget(v27, "__index");
end;
function v9.getOrderedParents(p21, p22, p23)
	if p23 == nil then
		p23 = true;
	end;
	local v28 = p21.classParentCache[p22];
	if v28 then
		return v28;
	end;
	local v29 = { p22 };
	local v30 = p22;
	while true do
		v30 = p21:getParentConstructor(v30);
		if v30 == nil then
			break;
		end;
		if not p23 or v30 ~= v6 then
			table.insert(v29, v30);
		end;	
	end;
	p21.classParentCache[p22] = v29;
	return v29;
end;
function v9.getAttributeGuards(p24, p25)
	local v31 = {};
	local v32 = p24.components[p25];
	if v32 then
		if v32.config.attributes ~= nil then
			for v33, v34 in pairs(v32.config.attributes) do
				v31[v33] = v34;
			end;
		end;
		local v35 = getmetatable(p25);
		if v35.__index ~= nil then
			for v36, v37 in pairs(p24:getAttributeGuards(v35.__index)) do
				if v31[v36] == nil then
					v31[v36] = v37;
				end;
			end;
		end;
	end;
	return v31;
end;
function v9.getAttributes(p26, p27, p28, p29)
	local v38 = p27:GetAttributes();
	local v39 = {};
	local l__defaults__40 = p28.config.defaults;
	for v41, v42 in pairs(p29) do
		local v43 = v38[v41];
		if not v42(v43) then
			local v44 = l__defaults__40;
			if v44 ~= nil then
				v44 = v44[v41];
			end;
			if v44 ~= nil then
				v39[v41] = l__defaults__40[v41];
				p27:SetAttribute(v41, l__defaults__40[v41]);
			else
				error(p27:GetFullName() .. " has invalid attribute '" .. v41 .. "' for '" .. p28.identifier .. "'");
			end;
		else
			v39[v41] = v43;
		end;
	end;
	return v39;
end;
function v9.getInstanceGuard(p30, p31)
	local v45 = nil;
	local v46 = p30.components[p31];
	if v46 then
		if v46.config.instanceGuard ~= nil then
			return v46.config.instanceGuard;
		end;
		v45 = getmetatable(p31);
		if v45.__index == nil then
			return;
		end;
	else
		return;
	end;
	return p30:getInstanceGuard(v45.__index);
end;
function v9.safeCall(p32, p33, p34)
	task.spawn(function()
		xpcall(p34, function(p35)
			if type(p35) == "string" then
				local v47 = debug.traceback(p35, 2);
				warn(p33);
				warn(v47);
				return;
			end;
			warn(p33);
			warn(p35);
			warn(debug.traceback(nil, 2));
		end);
	end);
end;
local l__Flamework__12 = v3.Flamework;
function v9.setupComponent(p36, p37, p38, p39, p40, p41)
	local l__config__48 = p41.config;
	local l__identifier__49 = p41.identifier;
	p39:setInstance(p37, p38);
	p40();
	if l__Flamework__12._implements(p39, "$:flamework@OnStart") then
		p36:safeCall("Component '" .. l__identifier__49 .. "' failed to start " .. p37:GetFullName(), function()
			return p39:onStart();
		end);
	end;
	l__Modding__4.addListener(p39);
	p39.maid:GiveTask(function()
		return l__Modding__4.removeListener(p39);
	end);
	if l__config__48.refreshAttributes == nil or l__config__48.refreshAttributes then
		local v50 = table.clone(p38);
		for v51, v52 in pairs((p36:getAttributeGuards(p41.ctor))) do
			if type(v51) == "string" then
				p39.maid:GiveTask(p37:GetAttributeChangedSignal(v51):Connect(function()
					local v53 = p39._attributeChangeHandlers[v51];
					local v54 = p37:GetAttribute(v51);
					if v52(v54) then
						if v53 then
							local v55, v56, v57 = ipairs(v53);
							while true do
								v55(v56, v57);
								if not v55 then
									break;
								end;
								v57 = v55;
								p36:safeCall("Component '" .. l__identifier__49 .. "' failed to call onAttributeChanged for " .. v51, function()
									return v56(v54, v50[v51]);
								end);							
							end;
						end;
						p39.attributes[v51] = v54;
						v50[v51] = v54;
					end;
				end));
			end;
		end;
	end;
end;
function v9.getComponentFromSpecifier(p42, p43)
	if type(p43) ~= "string" then
		return p43;
	end;
	return l__Reflect__2.idToObj[p43];
end;
function v9.getIdFromSpecifier(p44, p45)
	if p45 == nil then
		return;
	end;
	if type(p45) == "string" then
		return p45;
	end;
	return l__Reflect__2.getMetadata(p45, "identifier");
end;
function v9.addIdMapping(p46, p47, p48, p49)
	local v58 = p49[p48];
	if not v58 then
		v58 = {};
		p49[p48] = v58;
	end;
	local v59 = p46.reverseComponentsMapping[p48];
	if not v59 then
		v59 = {};
		p46.reverseComponentsMapping[p48] = v59;
	end;
	v58[p47] = true;
	v59[p47] = true;
end;
function v9.removeIdMapping(p50, p51, p52, p53)
	local v60 = p50.activeInheritedComponents[p51];
	if not v60 then
		return nil;
	end;
	local v61 = v60[p53];
	if not v61 then
		return nil;
	end;
	local v62 = p50.reverseComponentsMapping[p53];
	if not v62 then
		return nil;
	end;
	v61[p52] = nil;
	v62[p52] = nil;
	local v63 = 0;
	for v64 in pairs(v62) do
		v63 = v63 + 1;
	end;
	if v63 == 0 then
		p50.reverseComponentsMapping[p53] = nil;
	end;
	local v65 = 0;
	for v66 in pairs(v61) do
		v65 = v65 + 1;
	end;
	if v65 == 0 then
		v60[p53] = nil;
	end;
	local v67 = 0;
	for v68 in pairs(v60) do
		v67 = v67 + 1;
	end;
	if v67 == 0 then
		p50.activeInheritedComponents[p51] = nil;
	end;
end;
function v9.getComponent(p54, p55, p56)
	local v69 = p54:getComponentFromSpecifier(p56);
	assert(v69, "Could not find component from specifier: " .. tostring(p56));
	local v70 = p54.activeComponents[p55];
	if not v70 then
		return nil;
	end;
	return v70[v69];
end;
function v9.getComponents(p57, p58, p59)
	local v71 = p57:getIdFromSpecifier(p59);
	if v71 == nil then
		return {};
	end;
	local v72 = p57.activeInheritedComponents[p58];
	if not v72 then
		return {};
	end;
	local v73 = v72[v71];
	if not v73 then
		return {};
	end;
	local v74 = {};
	local v75 = #v74;
	for v76 in pairs(v73) do
		v75 = v75 + 1;
		v74[v75] = v76;
	end;
	return v74;
end;
function v9.addComponent(p60, p61, p62, p63)
	local v77 = p60:getComponentFromSpecifier(p62);
	assert(v77, "Could not find component from specifier: " .. tostring(p62));
	local v78 = p60.components[v77];
	assert(v78, "Provided componentSpecifier does not exist");
	local v79 = p60:getAttributes(p61, v78, (p60:getAttributeGuards(v77)));
	if p63 ~= true then
		local v80 = p60:getInstanceGuard(v77);
		if v80 ~= nil then
			assert(v80(p61), p61:GetFullName() .. " did not pass instance guard check for '" .. v78.identifier .. "'");
		end;
	end;
	local v81 = p60.activeComponents[p61];
	if not v81 then
		v81 = {};
		p60.activeComponents[p61] = v81;
	end;
	local v82 = p60.activeInheritedComponents[p61];
	if not v82 then
		v82 = {};
		p60.activeInheritedComponents[p61] = v82;
	end;
	local v83 = v81[v77];
	if v83 ~= nil then
		return v83;
	end;
	local v84 = l__Modding__4.createDeferredDependency(v77);
	local v85 = v84[1];
	v81[v77] = v85;
	local v86, v87, v88 = ipairs(p60:getOrderedParents(v77));
	while true do
		v86(v87, v88);
		if not v86 then
			break;
		end;
		v88 = v86;
		local v89 = l__Reflect__2.getOwnMetadata(v87, "identifier");
		if v89 ~= nil then
			p60:addIdMapping(v85, v89, v82);
		end;	
	end;
	local v90, v91, v92 = ipairs((l__Reflect__2.getMetadatas(v77, "flamework:implements")));
	while true do
		v90(v91, v92);
		if not v90 then
			break;
		end;
		v92 = v90;
		local v93, v94, v95 = ipairs(v91);
		while true do
			v93(v94, v95);
			if not v93 then
				break;
			end;
			v95 = v93;
			p60:addIdMapping(v85, v94, v82);		
		end;	
	end;
	p60:setupComponent(p61, v79, v85, v84[2], v78);
	return v85;
end;
function v9.removeComponent(p64, p65, p66)
	local v96 = p64:getComponentFromSpecifier(p66);
	assert(v96, "Could not find component from specifier: " .. tostring(p66));
	local v97 = p64.activeComponents[p65];
	if not v97 then
		return nil;
	end;
	local v98 = v97[v96];
	if not v98 then
		return nil;
	end;
	v98:destroy();
	v97[v96] = nil;
	local v99, v100, v101 = ipairs(p64:getOrderedParents(v96));
	while true do
		v99(v100, v101);
		if not v99 then
			break;
		end;
		v101 = v99;
		local v102 = l__Reflect__2.getOwnMetadata(v100, "identifier");
		if v102 ~= nil then
			p64:removeIdMapping(p65, v98, v102);
		end;	
	end;
	local v103, v104, v105 = ipairs((l__Reflect__2.getMetadatas(v96, "flamework:implements")));
	while true do
		v103(v104, v105);
		if not v103 then
			break;
		end;
		v105 = v103;
		local v106, v107, v108 = ipairs(v104);
		while true do
			v106(v107, v108);
			if not v106 then
				break;
			end;
			v108 = v106;
			p64:removeIdMapping(p65, v98, v107);		
		end;	
	end;
	local v109 = 0;
	for v110 in pairs(v97) do
		v109 = v109 + 1;
	end;
	if v109 == 0 then
		p64.activeComponents[p65] = nil;
	end;
end;
function v9.getAllComponents(p67, p68)
	local v111 = p67:getIdFromSpecifier(p68);
	if v111 == nil then
		return {};
	end;
	local v112 = p67.reverseComponentsMapping[v111];
	if not v112 then
		return {};
	end;
	local v113 = {};
	local v114 = #v113;
	for v115 in pairs(v112) do
		v114 = v114 + 1;
		v113[v114] = v115;
	end;
	return v113;
end;
l__Reflect__2.defineMetadata(v9, "identifier", "$c:init@Components");
l__Reflect__2.defineMetadata(v9, "flamework:implements", { "$:flamework@OnInit", "$:flamework@OnStart" });
l__Reflect__2.decorate(v9, "$:flamework@Service", v3.Service, { {
		loadOrder = 0
	} });
l__Reflect__2.decorate(v9, "$:flamework@Controller", v3.Controller, { {
		loadOrder = 0
	} });
return {
	Component = v5, 
	BaseComponent = v6, 
	Components = v9
};
