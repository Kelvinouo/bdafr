
-- Decompiled with the Synapse X Luau decompiler.

local v1 = _G[script];
local u1 = v1.import(script, script.Parent.Parent, "middleware", "createMiddlewareProcessor").createMiddlewareProcessor;
local l__fireNetworkHandler__2 = v1.import(script, script.Parent.Parent, "handlers").fireNetworkHandler;
local u3 = nil;
local l__Players__4 = v1.import(script, v1.getModule(script, "@rbxts", "services")).Players;
u3 = function(p1, p2, p3, p4)
	local v2 = {};
	function v2.fire(p5, p6, ...)
		local v3 = { ... };
		if typeof(p6) == "Instance" then
			p1:FireClient(p6, unpack(v3));
			return;
		end;
		for v4, v5 in ipairs(p6) do
			p1:FireClient(v5, unpack(v3));
		end;
	end;
	function v2.broadcast(p7, ...)
		p1:FireAllClients(unpack({ ... }));
	end;
	function v2.except(p8, p9, ...)
		local v6 = { ... };
		if typeof(p9) == "Instance" then
			p9 = { p9 };
		end;
		for v7, v8 in ipairs(l__Players__4:GetPlayers()) do
			if table.find(p9, v8) == nil then
				p8:fire(v8, unpack(v6));
			end;
		end;
	end;
	function v2.connect(p10, p11, p12)
		assert(p3, "Event " .. p1.Name .. " is not registered as a receiver.");
		return p3.Event:Connect(function(p13, ...)
			local v9 = { ... };
			if p12 then
				local v10 = 0;
				local v11 = false;
				while true do
					if v11 then
						v10 = v10 + 1;
					else
						v11 = true;
					end;
					if not (v10 < p2) then
						break;
					end;
					local v12 = p12[v10 + 1];
					if v12 ~= nil and not v12(v9[v10 + 1]) then
						return nil;
					end;				
				end;
			end;
			return p11(p13, unpack(v9));
		end);
	end;
	function v2.predict(p14, p15, ...)
		assert(p4, "Event " .. p1.Name .. " does not have a middleware processor.");
		p4(p15, unpack({ ... }));
	end;
	setmetatable(v2, {
		__call = function(p16, p17, ...)
			p16:fire(p17, unpack({ ... }));
		end
	});
	return v2;
end;
return {
	createServerHandler = function(p18, p19, p20, p21, p22)
		local v13 = {};
		local v14 = {};
		local v15 = {};
		for v16, v17 in pairs(p20) do
			v14[v16] = Instance.new("BindableEvent");
		end;
		for v18, v19 in pairs(p18) do
			local v20 = p19[v18];
			local v21 = p22;
			if v21 ~= nil then
				v21 = v21[v18];
			end;
			local v22 = u1(v21, v20, function(p23, ...)
				local v23 = v14[v18];
				if v23 ~= nil then
					v23 = v23:Fire(p23, unpack({ ... }));
				end;
				return v23;
			end);
			v15[v18] = v22;
			v19.OnServerEvent:Connect(function(p24, ...)
				local v24 = { ... };
				local v25 = p20[v18];
				if not v25 then
					return nil;
				end;
				local v26 = 0;
				local v27 = false;
				while true do
					if v27 then
						v26 = v26 + 1;
					else
						v27 = true;
					end;
					if not (v26 < #v25) then
						break;
					end;
					if not v25[v26 + 1](v24[v26 + 1]) then
						l__fireNetworkHandler__2("onBadRequest", p24, v20, v26);
						return nil;
					end;				
				end;
				v22(p24, unpack(v24));
			end);
		end;
		local v28, v29, v30 = pairs(p18);
		while true do
			local v31, v32 = v28(v29, v30);
			if not v31 then
				break;
			end;
			local v33 = p20[v31];
			if v33 ~= nil then
				v33 = #v33;
			end;
			local v34 = v33;
			if v34 == nil then
				v34 = 0;
			end;
			v13[v31] = u3(v32, v34, v14[v31], v15[v31]);		
		end;
		return v13;
	end
};

