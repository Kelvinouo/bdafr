-- Script Hash: 1f8de2e5c02734cb180c74944e5be1f3857fe2613f3ad85e81a48d64ab7a4d99bce89e4f33c1929392ae93f23ea8c683
-- Decompiled with the Synapse X Luau decompiler.

local v1 = _G[script];
local l__t__2 = v1.import(script, v1.getModule(script, "@rbxts", "t").lib.ts).t;
local v3 = {};
local v4 = setmetatable({}, {
	__index = v3
});
v4.Timeout = "Timeout";
v3.Timeout = "Timeout";
v4.Cancelled = "Cancelled";
v3.Cancelled = "Cancelled";
v4.BadRequest = "BadRequest";
v3.BadRequest = "BadRequest";
v4.Unprocessed = "Unprocessed";
v3.Unprocessed = "Unprocessed";
v4.InvalidResult = "InvalidResult";
v3.InvalidResult = "InvalidResult";
local u1 = l__t__2.union(l__t__2.literal("Timeout"), l__t__2.literal("Cancelled"), l__t__2.literal("BadRequest"), l__t__2.literal("Unprocessed"), l__t__2.literal("InvalidResult"));
return {
	getFunctionError = function(p1)
		if type(p1) ~= "boolean" then
			if u1(p1) then
				return p1;
			else
				return;
			end;
		end;
		return p1 == false and v4.Unprocessed or nil;
	end, 
	isNetworkingFunctionError = u1, 
	NetworkingFunctionError = v4
};
