-- Script Hash: 90170622c40217adb173bad46728832e398ec744fabf8f690fb6570843aae22a7960167b55b078e76b31a5d659c44bf1
-- Decompiled with the Synapse X Luau decompiler.

local v1 = _G[script];
local v2 = v1.import(script, script.Parent, "errors");
local u1 = nil;
local u2 = nil;
local l__getFunctionError__3 = v2.getFunctionError;
local l__fireNetworkHandler__4 = v1.import(script, script.Parent.Parent, "handlers").fireNetworkHandler;
local l__NetworkingFunctionError__5 = v2.NetworkingFunctionError;
local u6 = nil;
local l__Players__7 = v1.import(script, v1.getModule(script, "@rbxts", "services")).Players;
local u8 = nil;
local u9 = v1.import(script, script.Parent.Parent, "middleware", "createMiddlewareProcessor").createMiddlewareProcessor;
u1 = function(p1, p2, p3, p4, p5, p6, p7)
	local v3 = {};
	function v3.invoke(p8, p9, ...)
		local v4 = {};
		local u10 = { ... };
		v4[1] = u8(10, l__NetworkingFunctionError__5.Timeout);
		v4[2] = v1.Promise.new(function(p10, p11, p12)
			local v5 = u2(p9, p5);
			v5.nextId = v5.nextId + 1;
			local l__nextId__6 = v5.nextId;
			v5.requests[l__nextId__6] = function(p13, p14)
				if p14 then
					return p11(p14);
				end;
				if p1(p13) then
					p10(p13);
					return;
				end;
				l__fireNetworkHandler__4("onBadResponse", p9, p4);
				return p11(l__NetworkingFunctionError__5.InvalidResult);
			end;
			p12(function()
				v5.requests[l__nextId__6] = nil;
			end);
			p7:FireClient(p9, l__nextId__6, unpack(u10));
		end);
		return v1.Promise.race(v4);
	end;
	function v3.setCallback(p15, p16)
		if p3[p6] ~= nil then
			warn("Function.setCallback was called multiple times for " .. p6);
		end;
		p3[p6] = u9(p2, p4, p16);
	end;
	function v3.predict(p17, p18, ...)
		local u11 = { ... };
		return v1.Promise.new(function(p19, p20)
			local v7 = p3[p6];
			if not v7 then
				return p20(l__NetworkingFunctionError__5.Unprocessed);
			end;
			p19(v7(p18, unpack(u11)));
		end);
	end;
	setmetatable(v3, {
		__call = function(p21, p22, ...)
			return p21:invoke(p22, unpack({ ... }));
		end
	});
	return v3;
end;
u2 = function(p23, p24)
	local v8 = p24[p23];
	if v8 then
		return v8;
	end;
	local v9 = {
		nextId = 0, 
		requests = {}
	};
	p24[p23] = v9;
	return v9;
end;
u8 = function(p25, p26)
	return v1.Promise.delay(p25):andThen(function()
		return v1.Promise.reject(p26);
	end);
end;
local l__Skip__12 = v1.import(script, script.Parent.Parent, "middleware", "skip").Skip;
u6 = function(p27)
	return p27 == l__Skip__12 and l__NetworkingFunctionError__5.Cancelled or true;
end;
return {
	createServerHandler = function(p28, p29, p30, p31, p32, p33)
		local u13 = {};
		local u14 = {};
		local u15 = {};
		local function v10(p34, p35, p36)
			if u13[p34] ~= nil then
				return nil;
			end;
			local v11 = p31[p34];
			if v11 == nil then
				v11 = p32[p34];
			end;
			local v12 = p33;
			if v12 ~= nil then
				v12 = v12[p34];
			end;
			local v13 = v12;
			if v13 == nil then
				v13 = {};
			end;
			u13[p34] = u1(v11[2], v13, u14, p35, u15, p34, p36);
		end;
		for v14, v15 in pairs(p29) do
			local v16 = string.sub(v14, 3);
			v10(v16, p30[v16], v15);
			v15.OnServerEvent:Connect(function(p37, p38, p39, p40)
				if type(p38) ~= "number" then
					return nil;
				end;
				local v17 = u2(p37, u15);
				local v18 = v17.requests[p38];
				v17.requests[p38] = nil;
				if v18 then
					v18(p40, l__getFunctionError__3(p39));
				end;
			end);
		end;
		for v19, v20 in pairs(p28) do
			local v21 = string.sub(v19, 3);
			local v22 = p30[v21];
			v10(v21, v22, v20);
			v20.OnServerEvent:Connect(function(p41, p42, ...)
				local v23 = { ... };
				local v24 = p31[v21];
				if not v24 then
					return nil;
				end;
				local v25 = 0;
				local v26 = false;
				while true do
					if v26 then
						v25 = v25 + 1;
					else
						v26 = true;
					end;
					if not (v25 < #v24[1]) then
						break;
					end;
					if not v24[1][v25 + 1](v23[v25 + 1]) then
						l__fireNetworkHandler__4("onBadRequest", p41, v22, v25);
						return v20:FireClient(p41, p42, l__NetworkingFunctionError__5.BadRequest);
					end;				
				end;
				local v27 = u14[v21];
				if not v27 then
					v20:FireClient(p41, p42, false);
					return;
				end;
				v27(p41, unpack(v23)):andThen(function(p43)
					return v20:FireClient(p41, p42, u6(p43), p43);
				end):catch(function(p44)
					warn("Failed to process request to " .. v21);
					warn(p44);
					v20:FireClient(p41, p42, false);
				end);
			end);
		end;
		l__Players__7.PlayerRemoving:Connect(function(p45)
			u15[p45] = nil;
		end);
		return u13;
	end
};
