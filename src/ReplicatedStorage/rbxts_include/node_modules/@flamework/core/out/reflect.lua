
-- Decompiled with the Synapse X Luau decompiler.

local v1 = {};
local v2 = setmetatable({}, {
	__mode = "k"
});
v1.metadata = v2;
local v3 = {};
v1.idToObj = v3;
local v4 = {};
v1.objToId = v4;
local u1 = {};
local function u2(p1, p2, p3)
	local v5 = p2;
	if v5 == nil then
		v5 = u1;
	end;
	if not p3 then
		local v6 = v2[p1];
		if v6 ~= nil then
			v6 = v6[v5];
		end;
		return v6;
	end;
	local v7 = v2[p1];
	if not v7 then
		v7 = {};
		v2[p1] = v7;
	end;
	local v8 = v7[v5];
	if not v8 then
		v8 = {};
		v7[v5] = v8;
	end;
	return v8;
end;
function v1.defineMetadata(p4, p5, p6, p7)
	if p5 == "identifier" then
		assert(type(p6) == "string", "identifier must be a string.");
		assert(v4[p4] == nil, "obj is already registered.");
		assert(v3[p6] == nil, "id is already registered.");
		v4[p4] = p6;
		v3[p6] = p4;
	end;
	u2(p4, p7, true)[p5] = p6;
end;
function v1.defineMetadataBatch(p8, p9, p10)
	local v9 = u2(p8, p10, true);
	for v10, v11 in pairs(p9) do
		v9[v10] = v11;
	end;
end;
function v1.deleteMetadata(p11, p12, p13)
	local v12 = u2(p11, p13);
	if v12 ~= nil then
		v12[p12] = nil;
	end;
end;
local function v13(p14, p15, p16)
	local v14 = u2(p14, p16);
	if v14 ~= nil then
		v14 = v14[p15];
	end;
	return v14;
end;
v1.getOwnMetadata = v13;
local function v15(p17, p18, p19)
	local v16 = u2(p17, p19);
	if v16 ~= nil then
		v16 = v16[p18] ~= nil;
	end;
	local v17 = v16;
	if v17 == nil then
		v17 = false;
	end;
	return v17;
end;
v1.hasOwnMetadata = v15;
local function v18(p20, p21)
	local v19 = {};
	local v20 = u2(p20, p21);
	if v20 ~= nil then
		local function v21(p22, p23)
			local v22 = #v19;
			v19[v22 + 1] = p23;
			return v22 + 1;
		end;
		for v23, v24 in pairs(v20) do
			v21(v24, v23, v20);
		end;
	end;
	return v19;
end;
v1.getOwnMetadataKeys = v18;
local function u3(p24)
	local v25 = getmetatable(p24);
	if not v25 or type(v25) ~= "table" then
		return;
	end;
	return rawget(v25, "__index");
end;
local function u4(p25, p26, p27)
	local v26 = {};
	local v27 = v13(p25, p26, p27);
	if v27 ~= nil then
		v26[#v26 + 1] = v27;
	end;
	local v28 = u3(p25);
	if v28 then
		local v29 = u4(v28, p26, p27);
		local function v30(p28)
			local v31 = #v26;
			v26[v31 + 1] = p28;
			return v31 + 1;
		end;
		for v32, v33 in ipairs(v29) do
			v30(v33, v32 - 1, v29);
		end;
	end;
	return v26;
end;
v1.getMetadatas = u4;
local function u5(p29, p30, p31)
	local v34 = v13(p29, p30, p31);
	if v34 ~= nil then
		return v34;
	end;
	local v35 = u3(p29);
	if not v35 then
		return;
	end;
	return u5(v35, p30, p31);
end;
v1.getMetadata = u5;
local function u6(p32, p33, p34)
	local v36 = v15(p32, p33, p34);
	if v36 then
		return v36;
	end;
	local v37 = u3(p32);
	if not v37 then
		return false;
	end;
	return u6(v37, p33, p34);
end;
v1.hasMetadata = u6;
local function u7(p35, p36)
	local v38 = {};
	for v39, v40 in ipairs(v18(p35, p36)) do
		v38[v40] = true;
	end;
	local v41 = u3(p35);
	if v41 then
		local v42 = u7(v41, p36);
		local function v43(p37)
			v38[p37] = true;
			return v38;
		end;
		for v44, v45 in ipairs(v42) do
			v43(v45, v44 - 1, v42);
		end;
	end;
	local v46 = {};
	local v47 = #v46;
	for v48, v49 in pairs(v38) do
		v47 = v47 + 1;
		v46[v47] = v48;
	end;
	return v46;
end;
v1.getMetadataKeys = u7;
return {
	Reflect = v1
};

