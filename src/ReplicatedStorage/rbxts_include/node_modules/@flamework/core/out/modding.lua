-- Decompiled with the Synapse X Luau decompiler.

local v1 = _G[script];
local v2 = v1.import(script, v1.getModule(script, "@rbxts", "signal"));
local v3 = {};
local v4 = {};
local l__Reflect__1 = v1.import(script, script.Parent, "reflect").Reflect;
local u2 = {};
local u3 = {};
local u4 = {};
local u5 = v4;
local u6 = v2.new();
local function v5(p1)
	local v6 = {
		eventIds = {}, 
		involvement = {}
	};
	local v7, v8, v9 = ipairs(l__Reflect__1.getMetadatas(p1, "flamework:implements"));
	while true do
		v7(v8, v9);
		if not v7 then
			break;
		end;
		v9 = v7;
		local v10, v11, v12 = ipairs(v8);
		while true do
			v10(v11, v12);
			if not v10 then
				break;
			end;
			v12 = v10;
			if v6.eventIds[v11] == nil then
				local v13 = u2[v11];
				if not v13 then
					v13 = {};
					u2[v11] = v13;
				end;
				v13[p1] = true;
				v6.eventIds[v11] = true;
				table.insert(v6.involvement, v13);
				local v14 = u3[v11];
				if v14 ~= nil then
					v14:Fire(p1);
				end;
			end;		
		end;	
	end;
	local v15 = l__Reflect__1.getMetadata(p1, "flamework:decorators");
	if v15 then
		local v16, v17, v18 = ipairs(v15);
		while true do
			v16(v17, v18);
			if not v16 then
				break;
			end;
			v18 = v16;
			if v6.eventIds[v17] == nil then
				local v19 = u4[v17];
				if not v19 then
					v19 = {};
					u4[v17] = v19;
				end;
				v19[p1] = true;
				v6.eventIds[v17] = true;
				table.insert(v6.involvement, v19);
				local v20 = u3[v17];
				if v20 ~= nil then
					v20:Fire(p1);
				end;
			end;		
		end;
	end;
	u5[p1] = v6;
	u6:Fire(p1);
end;
v3.addListener = v5;
local u7 = {};
local u8 = v2.new();
function v3.removeListener(p2)
	local v21 = u5[p2];
	if not v21 then
		return nil;
	end;
	local v22, v23, v24 = ipairs(v21.involvement);
	while true do
		v22(v23, v24);
		if not v22 then
			break;
		end;
		v24 = v22;
		v23[p2] = nil;	
	end;
	for v25 in pairs(v21.eventIds) do
		local v26 = u7[v25];
		if v26 ~= nil then
			v26:Fire(p2);
		end;
	end;
	u5[p2] = nil;
	u8:Fire(p2);
end;
function v3.onListenerAdded(p3, p4)
	if p4 == nil then
		for v27 in pairs(u5) do
			task.spawn(p3, v27);
		end;
		return u6:Connect(p3);
	end;
	local v28 = u3[p4];
	if not v28 then
		v28 = v2.new();
		u3[p4] = v28;
	end;
	local v29 = u2[p4] or u4[p4];
	if v29 then
		for v30 in pairs(v29) do
			task.spawn(p3, v30);
		end;
	end;
	return v28:Connect(p3);
end;
function v3.onListenerRemoved(p5, p6)
	if p6 == nil then
		return u8:Connect(p5);
	end;
	local v31 = u7[p6];
	if not v31 then
		v31 = v2.new();
		u7[p6] = v31;
	end;
	return v31:Connect(p5);
end;
local u9 = nil;
function v3.createDecorator(p7, p8)
	local v32 = {};
	function v32.func(p9, p10)
		u9(p9, p10);
		p8(p9, p10);
	end;
	return v32;
end;
function v3.createMetaDecorator(p11)
	return {
		func = function(p12, p13)
			u9(p12, p13);
		end
	};
end;
function v3.getDecorators(p14)
	assert(p14 ~= nil);
	local v33 = l__Reflect__1.decorators[p14];
	if not v33 then
		return {};
	end;
	local v34 = table.create(#v33);
	local v35, v36, v37 = ipairs(v33);
	while true do
		v35(v36, v37);
		if not v35 then
			break;
		end;
		v37 = v35;
		local v38 = l__Reflect__1.getOwnMetadata(v36, "flamework:decorators." .. p14);
		assert(v38);
		v34[v35] = {
			object = v36, 
			arguments = v38.arguments
		};	
	end;
	return v34;
end;
local u10 = nil;
function v3.getPropertyDecorators(p15, p16)
	local v39 = {};
	assert(p16 ~= nil);
	local v40, v41, v42 = ipairs(l__Reflect__1.getProperties(p15));
	while true do
		v40(v41, v42);
		if not v40 then
			break;
		end;
		v42 = v40;
		local v43 = u10(p15, v41, p16);
		if v43 then
			v39[v41] = v43;
		end;	
	end;
	return v39;
end;
u10 = function(p17, p18, p19)
	local v44 = l__Reflect__1.getMetadata(p17, "flamework:decorators." .. tostring(p19), p18);
	if v44 then
		return v44;
	end;
	return nil;
end;
v3.getDecorator = u10;
local u11 = {};
local u12 = {};
local u13 = nil;
local function v45(p20)
	local v46 = u11[p20];
	if v46 ~= nil then
		return v46;
	end;
	if table.find(u12, p20) ~= nil then
		local v47 = table.create(#u12);
		local v48, v49, v50 = ipairs(u12);
		while true do
			v48(v49, v50);
			if not v48 then
				break;
			end;
			v50 = v48;
			v47[v48] = tostring(v49);		
		end;
		error("Circular dependency detected " .. table.concat(v47, " <=> ") .. " <=> " .. tostring(p20));
	end;
	table.insert(u12, p20);
	local v51 = u13(p20, (l__Reflect__1.getOwnMetadata(p20, "flamework:dependency_resolution")));
	u11[p20] = v51;
	u12[#u12] = nil;
	v5(v51);
	return v51;
end;
v3.resolveSingleton = v45;
function v3.getSingletons()
	return u11;
end;
local u14 = {};
function v3.registerDependency(p21, p22)
	assert(p22 ~= nil);
	if type(p21) == "function" then
		u14[p22] = p21;
		return;
	end;
	u14[p22] = function()
		return p21;
	end;
end;
local u15 = nil;
u13 = function(p23, p24)
	if p24 == nil then
		p24 = {};
	end;
	local v52 = u15(p23, p24);
	v52[2]();
	return v52[1];
end;
v3.createDependency = u13;
local u16 = nil;
local u17 = nil;
u15 = function(p25, p26)
	if p26 == nil then
		p26 = {};
	end;
	local v53 = u16(p25);
	local v54 = {};
	local u18 = v53[2];
	v54[1] = v53[1];
	v54[2] = function()
		local v55 = l__Reflect__1.getMetadata(p25, "flamework:parameters");
		local v56 = {};
		if v55 then
			for v57, v58 in pairs(v55) do
				v56[v57 - 1 + 1] = u17(p25, v58, v57 - 1, p26);
			end;
		end;
		u18(unpack(v56));
	end;
	return v54;
end;
v3.createDeferredDependency = u15;
local u19 = nil;
u17 = function(p27, p28, p29, p30)
	if p30.handle ~= nil then
		local v59 = p30.handle(p28, p29);
		if v59 ~= nil then
			return v59;
		end;
	end;
	local v60 = u14[p28];
	if v60 ~= nil then
		return v60(p27);
	end;
	if string.sub(p28, 1, 2) == "$p" then
		if string.sub(p28, 1, 3) == "$ps" then
			return string.sub(p28, 5);
		end;
		if string.sub(p28, 1, 3) == "$pn" then
			local v61 = tonumber(string.sub(p28, 5));
			if v61 == nil then
				v61 = 0;
			end;
			return v61;
		end;
		if p30.handlePrimitive ~= nil then
			return p30.handlePrimitive(p28, p29);
		end;
		error("Unexpected primitive dependency '" .. p28 .. "' while constructing " .. tostring(p27));
	end;
	local v62 = l__Reflect__1.idToObj[p28];
	if not v62 or not u19(v62) then
		error("Could not find constructor for " .. p28 .. " while constructing " .. tostring(p27));
	end;
	return v45(v62);
end;
function v3.macro(p31, p32)
	if type(p31) == "string" then
		return {
			[p31] = p32
		};
	end;
	local v63 = {};
	local v64, v65, v66 = ipairs(p31);
	while true do
		v64(v65, v66);
		if not v64 then
			break;
		end;
		v66 = v64;
		v63[v65[1]] = v65[2];	
	end;
	return v63;
end;
u9 = function(p33, p34)
	if p33.isStatic then
		local v67 = "static:" .. p33.property;
	else
		v67 = p33.property;
	end;
	l__Reflect__1.defineMetadata(p33.object, "flamework:decorators." .. p33.id, {
		arguments = p34
	}, v67);
	local v68 = l__Reflect__1.getMetadata(p33.object, "flamework:decorators", v67);
	if not v68 then
		v68 = {};
		l__Reflect__1.defineMetadata(p33.object, "flamework:decorators", v68, v67);
	end;
	table.insert(v68, p33.id);
end;
u19 = function(p35)
	local v69 = false;
	if p35.new ~= nil then
		v69 = p35.constructor ~= nil;
	end;
	return v69;
end;
u16 = function(p36)
	local v70 = setmetatable({}, p36);
	local v71 = {};
	v71[1] = v70;
	v71[2] = function(...)
		local v72 = v70:constructor(unpack({ ... }));
		local v73 = true;
		if v72 ~= nil then
			v73 = v72 == v70;
		end;
		assert(v73, "Deferred constructors are not allowed to return values.");
	end;
	return v71;
end;
u5 = {
	Modding = v3
};
return v4;
