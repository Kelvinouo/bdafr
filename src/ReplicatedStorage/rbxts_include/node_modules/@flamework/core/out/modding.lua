-- Script Hash: 7d9efd34a2ab5e5d61a05617928da55733aaaebe8b55f205c774bd6c4c92416aae1198d10773945362561991d04bcd93
-- Decompiled with the Synapse X Luau decompiler.

local v1 = _G[script];
local v2 = v1.import(script, v1.getModule(script, "@rbxts", "signal"));
local v3 = {};
local l__Reflect__1 = v1.import(script, script.Parent, "reflect").Reflect;
local u2 = {};
local u3 = {};
local u4 = {};
local u5 = {};
local u6 = v2.new();
local function v4(p1)
	local v5 = {
		eventIds = {}, 
		involvement = {}
	};
	for v6, v7 in ipairs(l__Reflect__1.getMetadatas(p1, "flamework:implements")) do
		for v8, v9 in ipairs(v7) do
			if v5.eventIds[v9] == nil then
				local v10 = u2[v9];
				if not v10 then
					v10 = {};
					u2[v9] = v10;
				end;
				v10[p1] = true;
				v5.eventIds[v9] = true;
				table.insert(v5.involvement, v10);
				local v11 = u3[v9];
				if v11 ~= nil then
					v11:Fire(p1);
				end;
			end;
		end;
	end;
	local v12 = l__Reflect__1.getMetadata(p1, "flamework:decorators");
	if v12 then
		for v13, v14 in ipairs(v12) do
			if v5.eventIds[v14] == nil then
				local v15 = u4[v14];
				if not v15 then
					v15 = {};
					u4[v14] = v15;
				end;
				v15[p1] = true;
				v5.eventIds[v14] = true;
				table.insert(v5.involvement, v15);
				local v16 = u3[v14];
				if v16 ~= nil then
					v16:Fire(p1);
				end;
			end;
		end;
	end;
	u5[p1] = v5;
	u6:Fire(p1);
end;
v3.addListener = v4;
local u7 = {};
local u8 = v2.new();
function v3.removeListener(p2)
	local v17 = u5[p2];
	if not v17 then
		return nil;
	end;
	for v18, v19 in ipairs(v17.involvement) do
		v19[p2] = nil;
	end;
	for v20 in pairs(v17.eventIds) do
		local v21 = u7[v20];
		if v21 ~= nil then
			v21:Fire(p2);
		end;
	end;
	u5[p2] = nil;
	u8:Fire(p2);
end;
function v3.onListenerAdded(p3, p4)
	if p4 == nil then
		for v22 in pairs(u5) do
			task.spawn(p3, v22);
		end;
		return u6:Connect(p3);
	end;
	local v23 = u3[p4];
	if not v23 then
		v23 = v2.new();
		u3[p4] = v23;
	end;
	local v24 = u2[p4] or u4[p4];
	if v24 then
		for v25 in pairs(v24) do
			task.spawn(p3, v25);
		end;
	end;
	return v23:Connect(p3);
end;
function v3.onListenerRemoved(p5, p6)
	if p6 == nil then
		return u8:Connect(p5);
	end;
	local v26 = u7[p6];
	if not v26 then
		v26 = v2.new();
		u7[p6] = v26;
	end;
	return v26:Connect(p5);
end;
local u9 = nil;
function v3.createDecorator(p7, p8)
	local v27 = {};
	function v27.func(p9, p10)
		u9(p9, p10);
		p8(p9, p10);
	end;
	return v27;
end;
function v3.createMetaDecorator(p11)
	return {
		func = function(p12, p13)
			u9(p12, p13);
		end
	};
end;
function v3.getDecorators(p14)
	assert(p14 ~= nil);
	local v28 = l__Reflect__1.decorators[p14];
	if not v28 then
		return {};
	end;
	local function v29(p15)
		local v30 = l__Reflect__1.getOwnMetadata(p15, "flamework:decorators." .. p14);
		assert(v30);
		return {
			object = p15, 
			arguments = v30.arguments
		};
	end;
	local v31 = table.create(#v28);
	for v32, v33 in ipairs(v28) do
		v31[v32] = v29(v33, v32 - 1, v28);
	end;
	return v31;
end;
local u10 = nil;
function v3.getPropertyDecorators(p16, p17)
	local v34 = {};
	assert(p17 ~= nil);
	for v35, v36 in ipairs(l__Reflect__1.getProperties(p16)) do
		local v37 = u10(p16, v36, p17);
		if v37 then
			v34[v36] = v37;
		end;
	end;
	return v34;
end;
u10 = function(p18, p19, p20)
	local v38 = l__Reflect__1.getMetadata(p18, "flamework:decorators." .. tostring(p20), p19);
	if v38 then
		return v38;
	end;
	return nil;
end;
v3.getDecorator = u10;
local u11 = {};
local u12 = {};
local u13 = nil;
local function v39(p21)
	local v40 = u11[p21];
	if v40 ~= nil then
		return v40;
	end;
	if table.find(u12, p21) ~= nil then
		local v41 = table.create(#u12);
		for v42, v43 in ipairs(u12) do
			v41[v42] = tostring(v43);
		end;
		error("Circular dependency detected " .. table.concat(v41, " <=> ") .. " <=> " .. tostring(p21));
	end;
	table.insert(u12, p21);
	local v44 = u13(p21, (l__Reflect__1.getOwnMetadata(p21, "flamework:dependency_resolution")));
	u11[p21] = v44;
	u12[#u12] = nil;
	v4(v44);
	return v44;
end;
v3.resolveSingleton = v39;
function v3.getSingletons()
	return u11;
end;
local u14 = {};
function v3.registerDependency(p22, p23)
	assert(p23 ~= nil);
	if type(p22) == "function" then
		u14[p23] = p22;
		return;
	end;
	u14[p23] = function()
		return p22;
	end;
end;
local u15 = nil;
u13 = function(p24, p25)
	if p25 == nil then
		p25 = {};
	end;
	local v45 = u15(p24, p25);
	v45[2]();
	return v45[1];
end;
v3.createDependency = u13;
local u16 = nil;
local u17 = nil;
u15 = function(p26, p27)
	if p27 == nil then
		p27 = {};
	end;
	local v46 = u16(p26);
	local v47 = {};
	local u18 = v46[2];
	v47[1] = v46[1];
	v47[2] = function()
		local v48 = l__Reflect__1.getMetadata(p26, "flamework:parameters");
		local v49 = {};
		if v48 then
			for v50, v51 in pairs(v48) do
				v49[v50 - 1 + 1] = u17(p26, v51, v50 - 1, p27);
			end;
		end;
		u18(unpack(v49));
	end;
	return v47;
end;
v3.createDeferredDependency = u15;
local u19 = nil;
u17 = function(p28, p29, p30, p31)
	if p31.handle ~= nil then
		local v52 = p31.handle(p29, p30);
		if v52 ~= nil then
			return v52;
		end;
	end;
	local v53 = u14[p29];
	if v53 ~= nil then
		return v53(p28);
	end;
	if string.sub(p29, 1, 2) == "$p" then
		if string.sub(p29, 1, 3) == "$ps" then
			return string.sub(p29, 5);
		end;
		if string.sub(p29, 1, 3) == "$pn" then
			local v54 = tonumber(string.sub(p29, 5));
			if v54 == nil then
				v54 = 0;
			end;
			return v54;
		end;
		if p31.handlePrimitive ~= nil then
			return p31.handlePrimitive(p29, p30);
		end;
		error("Unexpected primitive dependency '" .. p29 .. "' while constructing " .. tostring(p28));
	end;
	local v55 = l__Reflect__1.idToObj[p29];
	if not v55 or not u19(v55) then
		error("Could not find constructor for " .. p29 .. " while constructing " .. tostring(p28));
	end;
	return v39(v55);
end;
function v3.macro(p32, p33)
	if type(p32) == "string" then
		return {
			[p32] = p33
		};
	end;
	local v56 = {};
	for v57, v58 in ipairs(p32) do
		v56[v58[1]] = v58[2];
	end;
	return v56;
end;
u9 = function(p34, p35)
	if p34.isStatic then
		local v59 = "static:" .. p34.property;
	else
		v59 = p34.property;
	end;
	l__Reflect__1.defineMetadata(p34.object, "flamework:decorators." .. p34.id, {
		arguments = p35
	}, v59);
	local v60 = l__Reflect__1.getMetadata(p34.object, "flamework:decorators", v59);
	if not v60 then
		v60 = {};
		l__Reflect__1.defineMetadata(p34.object, "flamework:decorators", v60, v59);
	end;
	table.insert(v60, p34.id);
end;
u19 = function(p36)
	local v61 = false;
	if p36.new ~= nil then
		v61 = p36.constructor ~= nil;
	end;
	return v61;
end;
u16 = function(p37)
	local v62 = setmetatable({}, p37);
	local v63 = {};
	v63[1] = v62;
	v63[2] = function(...)
		local v64 = v62:constructor(unpack({ ... }));
		local v65 = true;
		if v64 ~= nil then
			v65 = v64 == v62;
		end;
		assert(v65, "Deferred constructors are not allowed to return values.");
	end;
	return v63;
end;
return {
	Modding = v3
};
