
-- Decompiled with the Synapse X Luau decompiler.

local v1 = _G[script];
local v2 = v1.import(script, v1.getModule(script, "@rbxts", "services"));
local v3 = {};
local v4 = {
	isDefault = true
};
v3.flameworkConfig = v4;
v3.isInitialized = false;
local u1 = {};
local l__Reflect__2 = v1.import(script, script.Parent, "reflect").Reflect;
local u3 = nil;
local function v5(p1)
	if table.find(u1, p1) ~= nil then
		local v6 = table.create(#u1);
		for v7, v8 in ipairs(u1) do
			v6[v7] = tostring(v8);
		end;
		error("Circular dependency detected " .. table.concat(v6, " <=> ") .. " <=> " .. tostring(p1));
	end;
	u1[#u1 + 1] = p1;
	local v9 = l__Reflect__2.getMetadata(p1, "flamework:dependencies");
	local v10 = {};
	if v9 then
		for v11, v12 in pairs(v9) do
			v10[v11 - 1 + 1] = u3(v12);
		end;
	end;
	u1[#u1] = nil;
	return p1.new(unpack(v10));
end;
v3.createDependency = v5;
local u4 = {};
local u5 = nil;
u3 = function(p2)
	local v13 = u4[p2];
	if v13 ~= nil then
		return v13;
	end;
	local v14 = l__Reflect__2.idToObj[p2];
	if v14 == nil then
		error("Dependency " .. p2 .. " could not be found.");
	end;
	assert((u5(v14)));
	local v15 = v5(v14);
	u4[p2] = v15;
	return v15;
end;
v3.resolveDependency = u3;
local l__RunService__6 = v2.RunService;
local l__Players__7 = v2.Players;
function v3._addPaths(...)
	local v16 = {};
	local v17, v18, v19 = ipairs({ ... });
	while true do
		local v20, v21 = v17(v18, v19);
		if not v20 then
			break;
		end;
		local v22 = table.remove(v21, 1);
		local v23 = game:GetService(v22);
		if v22 == "StarterPlayer" then
			if v21[1] ~= "StarterPlayerScripts" then
				error("StarterPlayer only supports StarterPlayerScripts");
			end;
			if not l__RunService__6:IsClient() then
				error("The server cannot load StarterPlayer content");
			end;
			v23 = l__Players__7.LocalPlayer:WaitForChild("PlayerScripts");
			table.remove(v21, 1);
		end;
		local v24 = 0;
		local v25 = false;
		while true do
			if v25 then
				v24 = v24 + 1;
			else
				v25 = true;
			end;
			if not (v24 < #v21) then
				break;
			end;
			v23 = v23:WaitForChild(v21[v24 + 1]);		
		end;
		v16[#v16 + 1] = v23;	
	end;
	local function v26(p3)
		local v27 = os.clock();
		local v28, v29 = pcall(require, p3);
		local v30 = v28 and {
			success = true, 
			value = v29
		} or {
			success = false, 
			error = v29
		};
		local v31 = math.floor((os.clock() - v27) * 1000);
		if not v30.success then
			error(p3:GetFullName() .. " failed to preload (" .. tostring(v31) .. "ms): " .. v30.error);
		end;
	end;
	local v32, v33, v34 = ipairs(v16);
	while true do
		local v35, v36 = v32(v33, v34);
		if not v35 then
			break;
		end;
		if v36:IsA("ModuleScript") then
			v26(v36);
		end;
		for v37, v38 in ipairs(v36:GetDescendants()) do
			if v38:IsA("ModuleScript") then
				v26(v38);
			end;
		end;	
	end;
end;
function v3._implements(p4, p5)
	local v39 = l__Reflect__2.getMetadatas(p4, "flamework:implements");
	local function v40(p6)
		return table.find(p6, p5) ~= nil;
	end;
	for v41, v42 in ipairs(v39) do
		if v40(v42, v41 - 1, v39) then
			return true;
		end;
	end;
	return false;
end;
u5 = function(p7)
	local v43 = false;
	if p7.new ~= nil then
		v43 = p7.constructor ~= nil;
	end;
	return v43;
end;
local u8 = {};
function v3.registerExternalClass(p8)
	u8[p8] = true;
end;
local u9 = false;
local function u10(p9)
	return l__Reflect__2.hasOwnMetadata(p9, "flamework:decorators.$:flamework@Service");
end;
local function u11(p10)
	return l__Reflect__2.hasOwnMetadata(p10, "flamework:decorators.$:flamework@Controller");
end;
local function u12(p11, p12)
	local v44 = l__Reflect__2.getMetadatas(p11, "flamework:decorators");
	if not v44 then
		return nil;
	end;
	for v45, v46 in ipairs(v44) do
		for v47, v48 in ipairs(v46) do
			local v49 = l__Reflect__2.getMetadata(p11, "flamework:decorators." .. v48);
			local v50 = v49;
			if v50 ~= nil then
				v50 = v50.type;
			end;
			if v50 == p12 then
				return v49;
			end;
		end;
	end;
end;
local u13 = v3;
function u13.ignite(p13)
	if u9 then
		error("Flamework.ignite() should only be called once");
	end;
	u9 = true;
	if p13 then
		for v51, v52 in pairs(p13) do
			v4[v51] = v52;
		end;
	end;
	for v53, v54 in pairs(l__Reflect__2.objToId) do
		if (not l__RunService__6:IsServer() or u10(v53)) and ((not l__RunService__6:IsClient() or u11(v53)) and u5(v53)) and (not v4.loadOverride or table.find(v4.loadOverride, v53) ~= nil or l__Reflect__2.getOwnMetadata(v53, "flamework:isPatched")) and (not l__Reflect__2.getOwnMetadata(v53, "flamework:isExternal") or u8[v53] ~= nil) then
			u3(v54);
		end;
	end;
	local v55 = {};
	if l__RunService__6:IsServer() then
		local v56 = "Service";
	else
		v56 = "Controller";
	end;
	local v57, v58, v59 = pairs(u4);
	while true do
		local v60, v61 = v57(v58, v59);
		if not v60 then
			break;
		end;
		local v62 = l__Reflect__2.idToObj[v60];
		if v62 == nil then
			error("Could not find constructor for " .. v60);
		end;
		local v63 = u12(v62, v56);
		if v63 and (not l__Reflect__2.getOwnMetadata(v62, "flamework:isExternal") or u8[v62] ~= nil) then
			v55[#v55 + 1] = { u3(v60), v63 };
		end;	
	end;
	local v64 = {};
	local v65 = {};
	local v66 = {};
	local v67 = {};
	local v68 = {};
	table.sort(v55, function(p14, p15)
		local v69 = p14[2].loadOrder;
		if v69 == nil then
			v69 = 1;
		end;
		local v70 = p15[2].loadOrder;
		if v70 == nil then
			v70 = 1;
		end;
		return v69 < v70;
	end);
	local v71, v72, v73 = ipairs(v55);
	while true do
		local v74, v75 = v71(v72, v73);
		if not v74 then
			break;
		end;
		local v76 = v75[1];
		if v3._implements(v76, "$:flamework@OnInit") then
			v65[#v65 + 1] = v76;
		end;
		if v3._implements(v76, "$:flamework@OnStart") then
			v64[#v64 + 1] = v76;
		end;
		if v3._implements(v76, "$:flamework@OnTick") then
			v66[#v66 + 1] = v76;
		end;
		if v3._implements(v76, "$:flamework@OnPhysics") then
			v68[#v68 + 1] = v76;
		end;
		if v3._implements(v76, "$:flamework@OnRender") then
			v67[#v67 + 1] = v76;
		end;	
	end;
	for v77, v78 in ipairs(v65) do
		local v79 = v78:onInit();
		if v1.Promise.is(v79) then
			v79:await();
		end;
	end;
	u13.isInitialized = true;
	l__RunService__6.Heartbeat:Connect(function(p16)
		for v80, v81 in ipairs(v66) do
			task.spawn(function()
				return v81:onTick(p16);
			end);
		end;
	end);
	l__RunService__6.Stepped:Connect(function(p17, p18)
		for v82, v83 in ipairs(v68) do
			task.spawn(function()
				return v83:onPhysics(p18, p17);
			end);
		end;
	end);
	if l__RunService__6:IsClient() then
		l__RunService__6.RenderStepped:Connect(function(p19)
			for v84, v85 in ipairs(v67) do
				task.spawn(function()
					return v85:onRender(p19);
				end);
			end;
		end);
	end;
	for v86, v87 in ipairs(v64) do
		task.spawn(function()
			return v87:onStart();
		end);
	end;
	return v55;
end;
u13.Testing = {
	patchDependency = function(p20, p21)
		if p21 == nil then
			error("Patching failed, no ID");
		end;
		if u4[p21] ~= nil then
			error(p21 .. " has already been resolved, continuing is unsafe");
		end;
		local v88 = l__Reflect__2.idToObj[p21];
		if v88 == nil then
			error("Dependency " .. p21 .. " was not found and cannot be patched.");
		end;
		local v89 = l__Reflect__2.metadata[v88];
		if not v89 then
			error("Dependency " .. p21 .. " has no existing metadata.");
		end;
		l__Reflect__2.defineMetadata(v88, "flamework:isPatched", true);
		l__Reflect__2.metadata[v88] = nil;
		l__Reflect__2.metadata[p20] = v89;
		l__Reflect__2.objToId[p20] = p21;
		l__Reflect__2.idToObj[p21] = p20;
	end
};
u13 = {
	Flamework = v3
};
return u13;

