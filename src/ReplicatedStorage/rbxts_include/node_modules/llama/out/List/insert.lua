-- Decompiled with the Synapse X Luau decompiler.

local v1 = require(script.Parent.Parent.t);
local u1 = v1.tuple(v1.table, v1.optional(v1.integer));
return function(p1, p2, ...)
	assert(u1(p1, p2));
	local v2 = #p1;
	if p2 < 1 then
		p2 = v2 + p2;
	end;
	local v3 = false;
	if p2 > 0 then
		v3 = p2 <= v2 + 1;
	end;
	assert(v3, string.format("index %d out of bounds of list of length %d", p2, v2));
	local v4 = {};
	local v5 = 1;
	for v6 = 1, v2 do
		if v6 == p2 then
			for v7 = 1, select("#", ...) do
				v4[v5] = select(v7, ...);
				v5 = v5 + 1;
			end;
		end;
		v4[v5] = p1[v6];
		v5 = v5 + 1;
	end;
	return v4;
end;
