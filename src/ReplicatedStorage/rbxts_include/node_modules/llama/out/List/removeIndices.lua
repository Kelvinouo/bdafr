
-- Decompiled with the Synapse X Luau decompiler.

local v1 = require(script.Parent.Parent.t);
local l__table__1 = v1.table;
local l__integer__2 = v1.integer;
return function(p1, ...)
	assert(l__table__1(p1));
	local v2 = #p1;
	local v3 = {};
	for v4 = 1, select("#", ...) do
		local v5 = select(v4, ...);
		assert(l__integer__2(v5));
		if v5 < 1 then
			v5 = v2 + v5;
		end;
		local v6 = false;
		if v5 > 0 then
			v6 = v5 <= v2;
		end;
		assert(v6, string.format("index %d out of bounds of list of length %d", v5, v2));
		v3[v5] = true;
	end;
	local v7 = {};
	local v8 = 1;
	for v9 = 1, v2 do
		if not v3[v9] then
			v7[v8] = p1[v9];
			v8 = v8 + 1;
		end;
	end;
	return v7;
end;

