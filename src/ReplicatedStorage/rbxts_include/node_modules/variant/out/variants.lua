-- Decompiled with the Synapse X Luau decompiler.

local v1 = _G[script];
local l__ObjectUtils__1 = v1.import(script, script.Parent, "ObjectUtils").ObjectUtils;
local u2 = v1.import(script, script.Parent, "variantFactory").variantFactory("type");
local l__identityFunc__3 = v1.import(script, script.Parent, "identityFunc").identityFunc;
return {
	default = function(p1)
		local v2 = nil;
		local v3 = l__ObjectUtils__1.keys(p1);
		local function v4(p2, p3)
			local v5 = {};
			for v6, v7 in pairs(p2) do
				v5[v6] = v7;
			end;
			if type(p1[p3]) == "function" then
				local v8 = p1[p3];
			else
				v8 = l__identityFunc__3;
			end;
			v5[p3] = u2(p3, v8);
			return v5;
		end;
		v2 = {};
		for v9 = 1, #v3 do
			v2 = v4(v2, v3[v9], v9 - 1, v3);
		end;
		return local v10;
	end, 
	variant = u2
};
