-- Script Hash: 1e9124a86102e283be99d050dbd0d887520a2b4413ac08d428d978b59fe862ac060071de23683418e728307ab3ccb9a6
-- Decompiled with the Synapse X Luau decompiler.

local u1 = {
	ClassName = "Maid", 
	new = function()
		return setmetatable({
			_tasks = {}
		}, u1);
	end, 
	__index = function(p1, p2)
		if u1[p2] then
			return u1[p2];
		end;
		return p1._tasks[p2];
	end, 
	__newindex = function(p3, p4, p5)
		if u1[p4] ~= nil then
			error(("'%s' is reserved"):format(tostring(p4)), 2);
		end;
		local l___tasks__1 = p3._tasks;
		local v2 = l___tasks__1[p4];
		l___tasks__1[p4] = p5;
		if v2 then
			if type(v2) == "function" then
				v2();
				return;
			end;
			if typeof(v2) ~= "RBXScriptConnection" then
				if v2.Destroy then
					v2:Destroy();
				end;
				return;
			end;
		else
			return;
		end;
		v2:Disconnect();
	end, 
	GiveTask = function(p6, p7)
		assert(p7, "Task cannot be false or nil");
		local v3 = #p6._tasks + 1;
		p6[v3] = p7;
		if type(p7) == "table" and not p7.Destroy then
			warn("[Maid.GiveTask] - Gave table task without .Destroy\n\n" .. debug.traceback());
		end;
		return v3;
	end, 
	GivePromise = function(p8, p9)
		if not p9:IsPending() then
			return p9;
		end;
		local v4 = p9:resolved();
		local u2 = p8:GiveTask(v4);
		v4:Finally(function()
			p8[u2] = nil;
		end);
		return v4;
	end, 
	DoCleaning = function(p10)
		local l___tasks__5 = p10._tasks;
		for v6, v7 in pairs(l___tasks__5) do
			if typeof(v7) == "RBXScriptConnection" then
				l___tasks__5[v6] = nil;
				v7:Disconnect();
			end;
		end;
		local v8, v9 = next(l___tasks__5);
		while v9 ~= nil do
			l___tasks__5[v8] = nil;
			if type(v9) == "function" then
				v9();
			elseif typeof(v9) == "RBXScriptConnection" then
				v9:Disconnect();
			elseif v9.Destroy then
				v9:Destroy();
			end;
			local v10, v11 = next(l___tasks__5);
			v8 = v10;
			v9 = v11;		
		end;
	end
};
u1.Destroy = u1.DoCleaning;
return u1;
