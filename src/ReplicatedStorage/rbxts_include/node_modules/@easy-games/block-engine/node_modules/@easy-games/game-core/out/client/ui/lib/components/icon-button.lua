-- Script Hash: d60a6f1b5f6c56046c98656f61b5cc153b6bff907735588d366a445e7c0c7e525293d40adb58ab017d2adeb682f925ad
-- Decompiled with the Synapse X Luau decompiler.

local v1 = _G[script];
local v2 = v1.import(script, v1.getModule(script, "@rbxts", "roact").src);
local v3 = v2.Component:extend("IconButton");
local u1 = v1.import(script, v1.getModule(script, "@rbxts", "maid").Maid);
function v3.init(p1)
	p1.hoverMaid = u1.new();
end;
local l__ColorUtil__2 = v1.import(script, script.Parent.Parent.Parent.Parent.Parent, "shared", "util", "color-util").ColorUtil;
local l__SoundManager__3 = v1.import(script, script.Parent.Parent.Parent.Parent.Parent, "shared", "sound", "sound-manager").SoundManager;
local l__GameCoreClientConfig__4 = v1.import(script, script.Parent.Parent.Parent.Parent, "config", "game-core-config").GameCoreClientConfig;
local l__TweenService__5 = v1.import(script, v1.getModule(script, "@rbxts", "services")).TweenService;
function v3.render(p2)
	local v4 = {};
	for v5, v6 in pairs(p2.props) do
		v4[v5] = v6;
	end;
	v4.Image = nil;
	v4.OnClick = nil;
	v4.IconProps = nil;
	v4.CornerRadiusScale = nil;
	v4[v2.Children] = nil;
	local v7 = {
		BackgroundColor3 = l__ColorUtil__2.BLACK, 
		BackgroundTransparency = 1, 
		ImageTransparency = 1
	};
	v7[v2.Event.MouseButton1Click] = function()
		l__SoundManager__3:playSound(l__GameCoreClientConfig__4.Sounds.UI_CLICK);
		local l__OnClick__8 = p2.props.OnClick;
		if l__OnClick__8 ~= nil then
			l__OnClick__8();
		end;
	end;
	v7[v2.Event.MouseEnter] = function(p3)
		l__SoundManager__3:playSound(l__GameCoreClientConfig__4.Sounds.UI_HOVER);
		p2.hoverMaid:DoCleaning();
		local v9 = l__TweenService__5:Create(p3, TweenInfo.new(0.12), {
			BackgroundTransparency = 0.6
		});
		v9:Play();
		p2.hoverMaid:GiveTask(function()
			v9:Cancel();
		end);
	end;
	v7[v2.Event.MouseLeave] = function(p4)
		p2.hoverMaid:DoCleaning();
		local v10 = l__TweenService__5:Create(p4, TweenInfo.new(0.12), {
			BackgroundTransparency = 1
		});
		v10:Play();
		p2.hoverMaid:GiveTask(function()
			v10:Cancel();
		end);
	end;
	for v11, v12 in pairs(v4) do
		v7[v11] = v12;
	end;
	local v13 = {};
	local v14 = #v13;
	local v15 = {};
	local v16 = p2.props.CornerRadiusScale;
	if v16 == nil then
		v16 = 1;
	end;
	v15.CornerRadius = UDim.new(v16, 0);
	v13[v14 + 1] = v2.createElement("UICorner", v15);
	v13[v14 + 2] = v2.createElement("UIPadding", {
		PaddingTop = UDim.new(0.1, 0), 
		PaddingBottom = UDim.new(0.1, 0), 
		PaddingLeft = UDim.new(0.1, 0), 
		PaddingRight = UDim.new(0.1, 0)
	});
	local v17 = {
		Size = UDim2.fromScale(1, 1), 
		Position = UDim2.fromScale(0.5, 0.5), 
		AnchorPoint = Vector2.new(0.5, 0.5), 
		Image = p2.props.Image, 
		BackgroundTransparency = 1, 
		BorderSizePixel = 0, 
		ZIndex = v4.ZIndex
	};
	local l__IconProps__18 = p2.props.IconProps;
	if l__IconProps__18 then
		for v19, v20 in pairs(l__IconProps__18) do
			v17[v19] = v20;
		end;
	end;
	local v21 = {};
	local v22 = #v21;
	local v23 = {};
	local v24 = p2.props.CornerRadiusScale;
	if v24 == nil then
		v24 = 1;
	end;
	v23.CornerRadius = UDim.new(v24, 0);
	v21[v22 + 1] = v2.createElement("UICorner", v23);
	local v25 = p2.props[v2.Children];
	if v25 then
		local v26, v27, v28 = pairs(v25);
		while true do
			local v29 = nil;
			local v30 = nil;
			v30, v29 = v26(v27, v28);
			if not v30 then
				break;
			end;
			v28 = v30;
			if type(v30) == "number" then
				v21[v22 + 1 + v30] = v29;
			else
				v21[v30] = v29;
			end;		
		end;
	end;
	v13.Icon = v2.createElement("ImageLabel", v17, v21);
	return v2.createFragment({
		IconButtonWrapper = v2.createElement("ImageButton", v7, v13)
	});
end;
function v3.willUnmount(p5)
	p5.hoverMaid:DoCleaning();
end;
return {
	IconButton = v3
};
