-- Script Hash: cd25e1c2d9b8fbffd364c4858d8f470f87c2ae72867c8f3e5ad2e37cf4d63a6ecf67d071930bc64e52d4ecc000f28e51
-- Decompiled with the Synapse X Luau decompiler.

local v1 = _G[script];
local v2 = v1.import(script, v1.getModule(script, "@rbxts", "flipper").src);
local l__SingleMotor__1 = v2.SingleMotor;
local l__Spring__2 = v2.Spring;
local l__BindingFromMotor__3 = v1.import(script, script.Parent.Parent.Parent.Parent.Parent.Parent, "shared", "util", "binding-util").BindingFromMotor;
local u4 = v1.import(script, v1.getModule(script, "@rbxts", "roact").src);
local function u5(p1, p2, p3)
	return p2 + (p3 - p2) * ((p1 - 0) / 1);
end;
local u6 = v1.import(script, script.Parent.Parent.Parent.Parent.Parent.Parent, "shared", "tarmac", "tarmac-helpers").GetTarmacAsset("CheckIcon");
local l__ColorUtil__7 = v1.import(script, script.Parent.Parent.Parent.Parent.Parent.Parent, "shared", "util", "color-util").ColorUtil;
return {
	GridElement = v1.import(script, v1.getModule(script, "@rbxts", "roact-hooks").src).new(u4)(function(p4, p5)
		local l__useState__3 = p5.useState;
		local l__useEffect__4 = p5.useEffect;
		local v5, v6 = l__useState__3(false);
		local v7, v8 = l__useState__3(l__SingleMotor__1.new(0));
		local v9, v10 = l__useState__3(nil);
		local v11, v12 = l__useState__3(l__SingleMotor__1.new(0));
		local v13, v14 = l__useState__3(nil);
		l__useEffect__4(function()
			v10(l__BindingFromMotor__3(v7));
			v14(l__BindingFromMotor__3(v11));
		end, {});
		local function u8(p6)
			v7:setGoal(l__Spring__2.new(p6, {
				frequency = 8, 
				dampingRatio = 1
			}));
		end;
		l__useEffect__4(function()
			v6(p4.CurrentIndex == p4.Index);
			if p4.CurrentIndex == p4.Index then
				local v15 = 1;
			else
				v15 = 0;
			end;
			u8(v15);
		end, { p4.CurrentIndex });
		local v16 = {};
		local l__TextElement__17 = p4.TextElement;
		if type(l__TextElement__17) == "table" then
			for v18, v19 in pairs(l__TextElement__17) do
				v16[v18] = v19;
			end;
		end;
		v16.Text = nil;
		v16[u4.Children] = nil;
		local v20 = {
			Size = UDim2.fromScale(0, 1), 
			BackgroundTransparency = 1, 
			LayoutOrder = p4.Index, 
			BorderSizePixel = 0
		};
		local v21 = p4.Image;
		if v21 == nil then
			v21 = "";
		end;
		v20.Image = v21;
		v20.AutoButtonColor = false;
		v20.ScaleType = Enum.ScaleType.Crop;
		v20[u4.Event.Activated] = function()
			p4.OnClick();
			if p4.SetSelectedIndex then
				p4.SetSelectedIndex(p4.Index);
			end;
		end;
		local function u9(p7)
			v11:setGoal(l__Spring__2.new(p7, {
				frequency = 9, 
				dampingRatio = 0.9
			}));
		end;
		v20[u4.Event.MouseEnter] = function()
			return u9(0.3);
		end;
		v20[u4.Event.MouseButton1Down] = function()
			return u9(0.8);
		end;
		v20[u4.Event.MouseButton1Up] = function()
			return u9(0.3);
		end;
		v20[u4.Event.MouseLeave] = function()
			return u9(0);
		end;
		local v22 = {};
		local v23 = #v22;
		local v24 = {};
		local v25 = v13;
		if v25 ~= nil then
			v25 = v25:map(function(p8)
				return u5(p8, 1, 0.9);
			end);
		end;
		v24.Scale = v25;
		v22[v23 + 1] = u4.createElement("UIScale", v24);
		v22[v23 + 2] = u4.createElement("UICorner", {
			CornerRadius = UDim.new(0, 6)
		});
		local v26 = {
			AnchorPoint = Vector2.new(0, 1), 
			Position = UDim2.fromScale(0, 1), 
			Size = UDim2.fromScale(1, 1)
		};
		local v27 = { u4.createElement("UICorner", {
				CornerRadius = UDim.new(0, 5)
			}) };
		local v28 = #v27;
		local v29 = {
			Color = ColorSequence.new(Color3.fromRGB(86, 99, 118))
		};
		local v30 = v9;
		if v30 ~= nil then
			v30 = v30:map(function(p9)
				return NumberSequence.new({ NumberSequenceKeypoint.new(0, u5(p9, 0.1, 0.5)), NumberSequenceKeypoint.new(0.35, u5(p9, 1, 0.5)), NumberSequenceKeypoint.new(1, u5(p9, 1, 0.5)) });
			end);
		end;
		v29.Transparency = v30;
		v29.Rotation = -90;
		v27[v28 + 1] = u4.createElement("UIGradient", v29);
		local v31 = v5;
		if v31 then
			local v32 = {
				AnchorPoint = Vector2.new(0.5, 0.5), 
				Position = UDim2.fromScale(0.5, 0.4), 
				Size = UDim2.fromOffset(22, 17), 
				BackgroundTransparency = 1
			};
			local v33 = v9;
			if v33 ~= nil then
				v33 = v33:map(function(p10)
					return u5(p10, 1, 0);
				end);
			end;
			v32.ImageTransparency = v33;
			local v34 = p4.ActiveIcon;
			if v34 == nil then
				v34 = u6.Image;
			end;
			v32.Image = v34;
			local l__ActiveIcon__35 = p4.ActiveIcon;
			if l__ActiveIcon__35 == "" or not l__ActiveIcon__35 then
				local v36 = u6.ImageRectOffset;
			else
				v36 = nil;
			end;
			v32.ImageRectOffset = v36;
			local l__ActiveIcon__37 = p4.ActiveIcon;
			if l__ActiveIcon__37 == "" or not l__ActiveIcon__37 then
				local v38 = u6.ImageRectSize;
			else
				v38 = nil;
			end;
			v32.ImageRectSize = v38;
			v32.ZIndex = 2;
			v31 = u4.createFragment({
				GridElementActiveIcon = u4.createElement("ImageLabel", v32)
			});
		end;
		if v31 then
			v27[v28 + 2] = v31;
		end;
		local v39 = p4.TextElement ~= nil;
		if v39 then
			local v40 = {
				AnchorPoint = Vector2.new(0.5, 1), 
				Position = UDim2.new(0.5, 0, 1, -10), 
				Size = UDim2.new(1, 0, 0, 16), 
				BackgroundTransparency = 1, 
				Text = "<b>" .. tostring(p4.TextElement.Text) .. "</b>", 
				TextWrapped = true, 
				RichText = true, 
				TextColor3 = l__ColorUtil__7.WHITE, 
				Font = Enum.Font.Roboto, 
				TextSize = 14, 
				ZIndex = 2
			};
			for v41, v42 in pairs(v16) do
				v40[v41] = v42;
			end;
			v39 = u4.createFragment({
				GridElementText = u4.createElement("TextLabel", v40)
			});
		end;
		if v39 then
			v27[#v27 + 1] = v39;
		end;
		local v43 = #v27;
		local v44 = p4[u4.Children];
		if v44 then
			local v45, v46, v47 = pairs(v44);
			while true do
				local v48 = nil;
				local v49 = nil;
				v49, v48 = v45(v46, v47);
				if not v49 then
					break;
				end;
				v47 = v49;
				if type(v49) == "number" then
					v27[v43 + v49] = v48;
				else
					v27[v49] = v48;
				end;			
			end;
		end;
		v22.GridElementContent = u4.createElement("Frame", v26, v27);
		return u4.createFragment({
			GridElement = u4.createElement("ImageButton", v20, v22)
		});
	end)
};
