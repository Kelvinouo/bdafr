-- Script Hash: ab79db3a80c022a5caa5f875f896bb47d302b82ae55a0acad99f6dac804963d01602654f8fbdd64c99f143525c80dd65
-- Decompiled with the Synapse X Luau decompiler.

local v1 = _G[script];
local v2 = {
	BLANK_CHARACTER = " \226\128\142", 
	fromNow = function(p1, p2)
		local v3 = p2.seconds;
		if v3 == nil then
			v3 = true;
		end;
		local v4 = p2.minutes;
		if v4 == nil then
			v4 = true;
		end;
		local v5 = p2.hours;
		if v5 == nil then
			v5 = true;
		end;
		local v6 = p2.days;
		if v6 == nil then
			v6 = true;
		end;
		local v7 = p2.weeks;
		if v7 == nil then
			v7 = true;
		end;
		local v8 = p2.seperator;
		if v8 == nil then
			v8 = " ";
		end;
		local v9 = p2.hideIfZero;
		if v9 == nil then
			v9 = false;
		end;
		local v10 = p2.upperCase;
		if v10 == nil then
			v10 = false;
		end;
		local v11 = p2.long;
		if v11 == nil then
			v11 = false;
		end;
		local v12 = p2.maxLength;
		if v12 == nil then
			v12 = math.huge;
		end;
		local u1 = math.max(0, p1 - os.time());
		local u2 = 0;
		local u3 = "";
		local function v13(p3, p4)
			if v9 and (p4 == 0 or p4 ~= p4 or not p4) then
				return nil;
			end;
			if v12 <= u2 then
				return nil;
			end;
			u3 = u3 .. p3 .. v8;
			u2 = u2 + 1;
		end;
		if v7 then
			local v14 = (function()
				if u1 < 0 then
					return nil;
				end;
				local v15 = math.floor(u1 / 60 / 60 / 24 / 7);
				u1 = u1 - v15 * 604800;
				return v15;
			end)();
			if v11 then
				local v16 = " weeks";
			else
				v16 = "w";
			end;
			v13(tostring(v14) .. v16, v14);
		end;
		if v6 then
			local v17 = (function()
				if u1 < 0 then
					return nil;
				end;
				local v18 = math.floor(u1 / 60 / 60 / 24);
				u1 = u1 - v18 * 86400;
				return v18;
			end)();
			if v11 then
				local v19 = " days";
			else
				v19 = "d";
			end;
			v13(tostring(v17) .. v19, v17);
		end;
		if v5 then
			local v20 = (function()
				if u1 < 0 then
					return nil;
				end;
				local v21 = math.floor(u1 / 60 / 60);
				u1 = u1 - v21 * 3600;
				return v21;
			end)();
			if v11 then
				local v22 = " hours";
			else
				v22 = "h";
			end;
			v13(tostring(v20) .. v22, v20);
		end;
		if v4 then
			local v23 = (function()
				if u1 < 0 then
					return nil;
				end;
				local v24 = math.floor(u1 / 60);
				u1 = u1 - v24 * 60;
				return v24;
			end)();
			if v11 then
				local v25 = " minutes";
			else
				v25 = "m";
			end;
			v13(tostring(v23) .. v25, v23);
		end;
		if v3 then
			local v26 = (function()
				if u1 < 0 then
					return nil;
				end;
				local v27 = math.floor(u1);
				u1 = u1 - v27;
				return v27;
			end)();
			if v11 then
				local v28 = " seconds";
			else
				v28 = "s";
			end;
			v13(tostring(v26) .. v28, v26);
		end;
		if v10 then
			local v29 = string.upper(u3);
		else
			v29 = u3;
		end;
		return v29;
	end, 
	formatCountdownTime = function(p5, p6)
		local v30 = math.floor(p5 / 86400);
		local v31 = tostring(v30) .. "";
		local v32 = p6;
		if v32 ~= nil then
			v32 = v32.days;
		end;
		if v32 then
			p5 = p5 - v30 * 86400;
		end;
		local v33 = math.floor(p5 / 3600);
		local v34 = tostring(v33) .. "";
		local v35 = p6;
		if v35 ~= nil then
			v35 = v35.hours;
		end;
		if v35 then
			p5 = p5 - v33 * 3600;
		end;
		local v36 = tostring(math.floor(p5 / 60)) .. "";
		local v37 = tostring(math.floor(p5 % 60)) .. "";
		if #v31 == 0 then
			v31 = "00";
		elseif #v31 == 1 then
			v31 = "0" .. v31;
		end;
		if #v34 == 0 then
			v34 = "00";
		elseif #v34 == 1 then
			v34 = "0" .. v34;
		end;
		if #v36 == 0 then
			v36 = "00";
		elseif #v36 == 1 then
			v36 = "0" .. v36;
		end;
		if #v37 == 0 then
			v37 = "00";
		elseif #v37 == 1 then
			v37 = "0" .. v37;
		end;
		local v38 = p6;
		if v38 ~= nil then
			v38 = v38.seperator;
		end;
		local v39 = v38;
		if v39 == nil then
			v39 = ":";
		end;
		local v40 = v36 .. v39 .. v37;
		local v41 = p6;
		if v41 ~= nil then
			v41 = v41.hours;
		end;
		if v41 then
			v40 = v34 .. v39 .. v40;
		end;
		local v42 = p6;
		if v42 ~= nil then
			v42 = v42.days;
		end;
		if v42 then
			v40 = v31 .. v39 .. v40;
		end;
		return v40;
	end, 
	capitalizeFirstLetter = function(p7)
		if #p7 <= 1 then
			return string.upper(p7);
		end;
		return string.upper(string.sub(p7, 1, 1)) .. string.lower(string.sub(p7, 2));
	end, 
	formatNumberShorthand = function(p8)
		if p8 < 1000 then
			return tostring(p8) .. "";
		end;
		if p8 < 1000000 then
			return tostring(math.floor(p8 / 1000 * 10) / 10) .. "k";
		end;
		if p8 < 1000000000 then
			return tostring(math.floor(p8 / 1000000 * 10) / 10) .. "M";
		end;
		return tostring(math.floor(p8 / 1000000000 * 10) / 10) .. "B";
	end, 
	formatNumberWithCommas = function(p9)
		local v43 = tostring(p9);
		return string.reverse((string.gsub(string.reverse(v43), "...", "%0,", (math.floor((#v43 - 1) / 3)))));
	end
};
local u4 = v1.import(script, v1.getModule(script, "@rbxts", "string-utils"));
v2.fuzzySearch = v1.async(function(p10, p11)
	local u5 = {};
	local function v44(p12)
		return table.find(u5, p12) == nil;
	end;
	local v45 = {};
	local v46 = 0;
	for v47, v48 in ipairs(p11) do
		if v44(v48, v47 - 1, p11) == true then
			v46 = v46 + 1;
			v45[v46] = v48;
		end;
	end;
	local u6 = string.lower(p10);
	local function v49(p13)
		return string.lower(p13) == u6;
	end;
	local v50 = {};
	local v51 = 0;
	for v52, v53 in ipairs(v45) do
		if v49(v53, v52 - 1, v45) == true then
			v51 = v51 + 1;
			v50[v51] = v53;
		end;
	end;
	local function v54(p14)
		table.insert(u5, p14);
		return #u5;
	end;
	for v55, v56 in ipairs(v50) do
		v54(v56, v55 - 1, v50);
	end;
	local function v57(p15)
		return table.find(u5, p15) == nil;
	end;
	local v58 = {};
	local v59 = 0;
	for v60, v61 in ipairs(p11) do
		if v57(v61, v60 - 1, p11) == true then
			v59 = v59 + 1;
			v58[v59] = v61;
		end;
	end;
	local function v62(p16)
		return u4.startsWith(string.lower(p16), u6);
	end;
	local v63 = {};
	local v64 = 0;
	for v65, v66 in ipairs(v58) do
		if v62(v66, v65 - 1, v58) == true then
			v64 = v64 + 1;
			v63[v64] = v66;
		end;
	end;
	local function v67(p17)
		table.insert(u5, p17);
		return #u5;
	end;
	for v68, v69 in ipairs(v63) do
		v67(v69, v68 - 1, v63);
	end;
	local function v70(p18)
		return table.find(u5, p18) == nil;
	end;
	local v71 = {};
	local v72 = 0;
	for v73, v74 in ipairs(p11) do
		if v70(v74, v73 - 1, p11) == true then
			v72 = v72 + 1;
			v71[v72] = v74;
		end;
	end;
	local function v75(p19)
		return u4.includes(string.lower(p19), u6);
	end;
	local v76 = {};
	local v77 = 0;
	for v78, v79 in ipairs(v71) do
		if v75(v79, v78 - 1, v71) == true then
			v77 = v77 + 1;
			v76[v77] = v79;
		end;
	end;
	local function v80(p20)
		table.insert(u5, p20);
		return #u5;
	end;
	for v81, v82 in ipairs(v76) do
		v80(v82, v81 - 1, v76);
	end;
	return u5;
end);
function v2.roundNumber(p21, p22)
	return string.format("%." .. tostring(p22) .. "f", p21);
end;
function v2.formatPercentage(p23, p24, p25)
	local v83 = p25;
	if v83 == nil then
		v83 = 2;
	end;
	return v2.roundNumber(p23 / p24 * 100, v83) .. "%";
end;
return {
	StringUtil = v2
};
