-- Decompiled with the Synapse X Luau decompiler.

local v1 = _G[script];
local v2 = {
	BLANK_CHARACTER = " \226\128\142", 
	fromNow = function(p1, p2)
		local v3 = p2.seconds;
		if v3 == nil then
			v3 = true;
		end;
		local v4 = p2.minutes;
		if v4 == nil then
			v4 = true;
		end;
		local v5 = p2.hours;
		if v5 == nil then
			v5 = true;
		end;
		local v6 = p2.days;
		if v6 == nil then
			v6 = true;
		end;
		local v7 = p2.weeks;
		if v7 == nil then
			v7 = true;
		end;
		local v8 = p2.seperator;
		if v8 == nil then
			v8 = " ";
		end;
		local v9 = p2.hideIfZero;
		if v9 == nil then
			v9 = false;
		end;
		local v10 = p2.upperCase;
		if v10 == nil then
			v10 = false;
		end;
		local v11 = p2.long;
		if v11 == nil then
			v11 = false;
		end;
		local v12 = p2.maxLength;
		if v12 == nil then
			v12 = math.huge;
		end;
		local u1 = math.max(0, p1 - os.time());
		local u2 = 0;
		local u3 = "";
		if v7 then
			if u1 < 0 then
				local v13 = nil;
			else
				local v14 = math.floor(u1 / 60 / 60 / 24 / 7);
				u1 = u1 - v14 * 604800;
				v13 = v14;
			end;
			if v11 then
				local v15 = " weeks";
			else
				v15 = "w";
			end;
			local v16 = tostring(v13) .. v15;
			if (not v9 or v13 ~= 0 and v13 == v13 and not (not v13)) and not (v12 <= u2) then
				u3 = u3 .. v16 .. v8;
				u2 = u2 + 1;
			end;
		end;
		if v6 then
			if u1 < 0 then
				local v17 = nil;
			else
				local v18 = math.floor(u1 / 60 / 60 / 24);
				u1 = u1 - v18 * 86400;
				v17 = v18;
			end;
			if v11 then
				local v19 = " days";
			else
				v19 = "d";
			end;
			local v20 = tostring(v17) .. v19;
			if (not v9 or v17 ~= 0 and v17 == v17 and not (not v17)) and not (v12 <= u2) then
				u3 = u3 .. v20 .. v8;
				u2 = u2 + 1;
			end;
		end;
		if v5 then
			if u1 < 0 then
				local v21 = nil;
			else
				local v22 = math.floor(u1 / 60 / 60);
				u1 = u1 - v22 * 3600;
				v21 = v22;
			end;
			if v11 then
				local v23 = " hours";
			else
				v23 = "h";
			end;
			local v24 = tostring(v21) .. v23;
			if (not v9 or v21 ~= 0 and v21 == v21 and not (not v21)) and not (v12 <= u2) then
				u3 = u3 .. v24 .. v8;
				u2 = u2 + 1;
			end;
		end;
		if v4 then
			if u1 < 0 then
				local v25 = nil;
			else
				local v26 = math.floor(u1 / 60);
				u1 = u1 - v26 * 60;
				v25 = v26;
			end;
			if v11 then
				local v27 = " minutes";
			else
				v27 = "m";
			end;
			local v28 = tostring(v25) .. v27;
			if (not v9 or v25 ~= 0 and v25 == v25 and not (not v25)) and not (v12 <= u2) then
				u3 = u3 .. v28 .. v8;
				u2 = u2 + 1;
			end;
		end;
		if v3 then
			if u1 < 0 then
				local v29 = nil;
			else
				local v30 = math.floor(u1);
				u1 = u1 - v30;
				v29 = v30;
			end;
			if v11 then
				local v31 = " seconds";
			else
				v31 = "s";
			end;
			local v32 = tostring(v29) .. v31;
			if (not v9 or v29 ~= 0 and v29 == v29 and not (not v29)) and not (v12 <= u2) then
				u3 = u3 .. v32 .. v8;
				u2 = u2 + 1;
			end;
		end;
		if v10 then
			local v33 = string.upper(u3);
		else
			v33 = u3;
		end;
		return v33;
	end, 
	formatCountdownTime = function(p3, p4)
		local v34 = math.floor(p3 / 86400);
		local v35 = tostring(v34) .. "";
		local v36 = p4;
		if v36 ~= nil then
			v36 = v36.days;
		end;
		if v36 then
			p3 = p3 - v34 * 86400;
		end;
		local v37 = math.floor(p3 / 3600);
		local v38 = tostring(v37) .. "";
		local v39 = p4;
		if v39 ~= nil then
			v39 = v39.hours;
		end;
		if v39 then
			p3 = p3 - v37 * 3600;
		end;
		local v40 = tostring(math.floor(p3 / 60)) .. "";
		local v41 = tostring(math.floor(p3 % 60)) .. "";
		if #v35 == 0 then
			v35 = "00";
		elseif #v35 == 1 then
			v35 = "0" .. v35;
		end;
		if #v38 == 0 then
			v38 = "00";
		elseif #v38 == 1 then
			v38 = "0" .. v38;
		end;
		if #v40 == 0 then
			v40 = "00";
		elseif #v40 == 1 then
			v40 = "0" .. v40;
		end;
		if #v41 == 0 then
			v41 = "00";
		elseif #v41 == 1 then
			v41 = "0" .. v41;
		end;
		local v42 = p4;
		if v42 ~= nil then
			v42 = v42.seperator;
		end;
		local v43 = v42;
		if v43 == nil then
			v43 = ":";
		end;
		local v44 = v40 .. v43 .. v41;
		local v45 = p4;
		if v45 ~= nil then
			v45 = v45.hours;
		end;
		if v45 then
			v44 = v38 .. v43 .. v44;
		end;
		local v46 = p4;
		if v46 ~= nil then
			v46 = v46.days;
		end;
		if v46 then
			v44 = v35 .. v43 .. v44;
		end;
		return v44;
	end, 
	capitalizeFirstLetter = function(p5)
		if #p5 <= 1 then
			return string.upper(p5);
		end;
		return string.upper(string.sub(p5, 1, 1)) .. string.lower(string.sub(p5, 2));
	end, 
	formatNumberShorthand = function(p6)
		if p6 < 1000 then
			return tostring(p6) .. "";
		end;
		if p6 < 1000000 then
			return tostring(math.floor(p6 / 1000 * 10) / 10) .. "k";
		end;
		if p6 < 1000000000 then
			return tostring(math.floor(p6 / 1000000 * 10) / 10) .. "M";
		end;
		return tostring(math.floor(p6 / 1000000000 * 10) / 10) .. "B";
	end, 
	formatNumberWithCommas = function(p7)
		local v47 = tostring(p7);
		return string.reverse((string.gsub(string.reverse(v47), "...", "%0,", (math.floor((#v47 - 1) / 3)))));
	end
};
local u4 = v1.import(script, v1.getModule(script, "@rbxts", "string-utils"));
v2.fuzzySearch = v1.async(function(p8, p9)
	local v48 = string.lower(p8);
	local u5 = {};
	local v49 = {};
	local v50 = 0;
	local v51, v52, v53 = ipairs(p9);
	while true do
		local v54, v55 = v51(v52, v53);
		if not v54 then
			break;
		end;
		if table.find(u5, v55) == nil == true then
			v50 = v50 + 1;
			v49[v50] = v55;
		end;	
	end;
	local v56 = {};
	local v57 = 0;
	local v58, v59, v60 = ipairs(v49);
	while true do
		local v61, v62 = v58(v59, v60);
		if not v61 then
			break;
		end;
		if string.lower(v62) == v48 == true then
			v57 = v57 + 1;
			v56[v57] = v62;
		end;	
	end;
	for v63, v64 in ipairs(v56) do
		table.insert(u5, v64);
	end;
	local v65 = {};
	local v66 = 0;
	local v67, v68, v69 = ipairs(p9);
	while true do
		local v70, v71 = v67(v68, v69);
		if not v70 then
			break;
		end;
		if table.find(u5, v71) == nil == true then
			v66 = v66 + 1;
			v65[v66] = v71;
		end;	
	end;
	local v72 = {};
	local v73 = 0;
	for v74, v75 in ipairs(v65) do
		if u4.startsWith(string.lower(v75), v48) == true then
			v73 = v73 + 1;
			v72[v73] = v75;
		end;
	end;
	for v76, v77 in ipairs(v72) do
		table.insert(u5, v77);
	end;
	local v78 = {};
	local v79 = 0;
	local v80, v81, v82 = ipairs(p9);
	while true do
		local v83, v84 = v80(v81, v82);
		if not v83 then
			break;
		end;
		if table.find(u5, v84) == nil == true then
			v79 = v79 + 1;
			v78[v79] = v84;
		end;	
	end;
	local v85 = {};
	local v86 = 0;
	for v87, v88 in ipairs(v78) do
		if u4.includes(string.lower(v88), v48) == true then
			v86 = v86 + 1;
			v85[v86] = v88;
		end;
	end;
	for v89, v90 in ipairs(v85) do
		table.insert(u5, v90);
	end;
	return u5;
end);
function v2.roundNumber(p10, p11)
	return string.format("%." .. tostring(p11) .. "f", p10);
end;
function v2.formatPercentage(p12, p13, p14)
	local v91 = p14;
	if v91 == nil then
		v91 = 2;
	end;
	return v2.roundNumber(p12 / p13 * 100, v91) .. "%";
end;
return {
	StringUtil = v2
};
