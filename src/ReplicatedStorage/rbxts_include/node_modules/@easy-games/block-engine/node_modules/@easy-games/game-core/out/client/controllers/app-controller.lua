-- Script Hash: 6bb3644c5acc8effdddc3bcc40fc4c5885bd5ee9ab8106d50880d5402a8a3dae847896f39f13cf4a459e785fa9739e3b
-- Decompiled with the Synapse X Luau decompiler.

local v1 = _G[script];
local l__Reflect__2 = v1.import(script, v1.getModule(script, "@flamework", "core").out).Reflect;
local v3 = v1.import(script, v1.getModule(script, "@rbxts", "services"));
local v4 = setmetatable({}, {
	__tostring = function()
		return "AppController";
	end
});
v4.__index = v4;
function v4.new(...)
	local v5 = setmetatable({}, v4);
	return v5:constructor(...) and v5;
end;
function v4.constructor(p1)

end;
local l__ContextActionService__1 = v3.ContextActionService;
local l__UILayers__2 = v1.import(script, script.Parent.Parent, "ui", "types", "ui-app").UILayers;
function v4.onInit(p2)
	l__ContextActionService__1:BindAction("GameCoreCloseUI", function(p3, p4)
		if p4 ~= Enum.UserInputState.Begin or not p2:isLayerOpen(l__UILayers__2.MAIN) then
			return Enum.ContextActionResult.Pass;
		end;
		p2:closeLayer(l__UILayers__2.MAIN);
		return Enum.ContextActionResult.Sink;
	end, false, Enum.KeyCode.F, Enum.KeyCode.E);
end;
local l__GameCoreClientConfig__3 = v1.import(script, script.Parent.Parent, "config", "game-core-config").GameCoreClientConfig;
local l__GameCoreClientSyncEvents__4 = v1.import(script, script.Parent.Parent, "game-core-client-events").GameCoreClientSyncEvents;
function v4.onStart(p5)
	l__GameCoreClientConfig__3.Store.changed:connect(function(p6, p7)
		local v6 = {};
		for v7, v8 in ipairs(p6.AppInfo.openApps) do
			v6[v8] = true;
		end;
		local v9 = {};
		for v10, v11 in ipairs(p7.AppInfo.openApps) do
			v9[v11] = true;
		end;
		for v12, v13 in ipairs(p6.AppInfo.openApps) do
			if v9[v13] == nil then
				task.spawn(function()
					l__GameCoreClientSyncEvents__4.AppOpen:fire(v13);
				end);
			end;
		end;
		for v14, v15 in ipairs(p7.AppInfo.openApps) do
			if v6[v15] == nil then
				task.spawn(function()
					l__GameCoreClientSyncEvents__4.AppClose:fire(v15);
				end);
			end;
		end;
	end);
end;
function v4.registerApp(p8, p9)
	p8.registeredApps[p9.appId] = p9;
end;
function v4.openApp(p10, p11, p12, p13, p14)
	if type(p11) ~= "string" then
		p11.layer = p13 or p11.layer;
		return p10:openAppComponent(p11, p12);
	end;
	local v16 = v4.registeredApps[p11];
	if not v16 then
		print("[Game Core (AppController)] Could not find app config for provided app ID. Was is registered?");
		return false;
	end;
	v16.layer = p13 or v16.layer;
	return p10:openAppComponent(v16, p12, p14);
end;
local l__Players__5 = v3.Players;
local u6 = v1.import(script, v1.getModule(script, "@rbxts", "roact").src);
local l__StoreProvider__7 = v1.import(script, v1.getModule(script, "@rbxts", "roact-rodux").src).StoreProvider;
function v4.openAppComponent(p15, p16, p17, p18)
	if p15:isAppOpen(p16.appId) then
		p15:closeAppById(p16.appId);
		return false;
	end;
	if p16.layer then
		p15:closeLayer(p16.layer);
		v4.layerMap[p16.layer] = p16.appId;
	end;
	v4.appMap[p16.appId] = p16;
	local l__AppId__17 = p17.AppId;
	if l__AppId__17 == "" or not l__AppId__17 then
		p17.AppId = p16.appId;
	end;
	local v18 = {};
	local v19 = {};
	for v20, v21 in pairs(p17) do
		v19[v20] = v21;
	end;
	v18[#v18 + 1] = u6.createElement(p16.app, v19);
	v4.treeMap[p16.appId] = u6.mount(u6.createElement(l__StoreProvider__7, {
		store = l__GameCoreClientConfig__3.Store
	}, v18), p18 or l__Players__5.LocalPlayer:WaitForChild("PlayerGui"), p16.appId);
	p15:updateAppInfoStore();
	return true;
end;
function v4.closeAppById(p19, p20)
	local v22 = v4.appMap[p20];
	if v22 then
		p19:closeApp(v22);
	end;
end;
function v4.closeApp(p21, p22)
	if type(p22) == "string" then
		return p21:closeAppById(p22);
	end;
	local v23 = v4.treeMap[p22.appId];
	if v23 then
		u6.unmount(v23);
	end;
	v4.treeMap[p22.appId] = nil;
	v4.appMap[p22.appId] = nil;
	if p22.layer then
		v4.layerMap[p22.layer] = nil;
	end;
	p21:updateAppInfoStore();
end;
function v4.closeLayer(p23, p24)
	local v24 = v4.layerMap[p24];
	if v24 == "" or not v24 then
		return nil;
	end;
	local v25 = v4.appMap[v24];
	if v25 then
		p23:closeApp(v25);
	end;
end;
function v4.isAppOpen(p25, p26)
	if type(p26) == "string" then
		return v4.appMap[p26] ~= nil;
	end;
	return v4.appMap[p26.appId] ~= nil;
end;
function v4.isLayerOpen(p27, p28)
	local v26 = v4.layerMap[p28];
	local v27 = false;
	if v26 ~= "" then
		v27 = v26;
	end;
	return not (not v27);
end;
local u8 = v1.import(script, v1.getModule(script, "@rbxts", "object-utils"));
function v4.getOpenApps(p29)
	return u8.keys(v4.appMap);
end;
function v4.updateAppInfoStore(p30)
	l__GameCoreClientConfig__3.Store:dispatch({
		type = "UpdateOpenApps", 
		openApps = p30:getOpenApps()
	});
end;
v4.registeredApps = {};
v4.treeMap = {};
v4.appMap = {};
v4.layerMap = {};
l__Reflect__2.defineMetadata(v4, "identifier", "@easy-games/game-core:client/controllers/app-controller@AppController");
l__Reflect__2.defineMetadata(v4, "flamework:isExternal", true);
l__Reflect__2.defineMetadata(v4, "flamework:implements", { "$:flamework@OnStart", "$:flamework@OnInit" });
l__Reflect__2.defineMetadata(v4, "flamework:decorators", { "$:flamework@Controller" });
l__Reflect__2.defineMetadata(v4, "flamework:decorators.$:flamework@Controller", {
	type = "Controller"
});
return {
	AppController = v4
};
