-- Script Hash: 8a9908f24c9d10407a20cced2830c1877bba1100ed7d33a33938322ad73500cfee7e830864cb191bb83934b3bbf036b2
-- Decompiled with the Synapse X Luau decompiler.

local v1 = _G[script];
local v2 = v1.import(script, v1.getModule(script, "@rbxts", "roact").src);
local v3 = v2.Component:extend("PlayerRender");
function v3.init(p1, p2)
	p1:setState({
		image = ""
	});
end;
function v3.didMount(p3)
	v1.Promise.defer(function()
		p3:fetchImage();
	end);
end;
function v3.didUpdate(p4, p5)
	if p5.Player ~= p4.props.Player then
		v1.Promise.defer(function()
			p4:fetchImage();
		end);
	end;
end;
local u1 = {};
local l__Players__2 = v1.import(script, v1.getModule(script, "@rbxts", "services")).Players;
function v3.fetchImage(p6)
	if not p6.props.Player then
		p6:setState({
			image = ""
		});
		return;
	end;
	if u1[p6.props.Player.userId] == nil then
		p6:setState({
			image = l__Players__2:GetUserThumbnailAsync(p6.props.Player.userId, Enum.ThumbnailType.HeadShot, Enum.ThumbnailSize.Size352x352)
		});
		return;
	end;
	p6:setState({
		image = u1[p6.props.Player.userId]
	});
	return nil;
end;
local l__ColorUtil__3 = v1.import(script, script.Parent.Parent.Parent.Parent.Parent, "shared", "util", "color-util").ColorUtil;
local l__ImageId__4 = v1.import(script, script.Parent.Parent.Parent.Parent.Parent, "shared", "images", "image-id").ImageId;
function v3.render(p7)
	local v4 = {};
	for v5, v6 in pairs(p7.props) do
		v4[v5] = v6;
	end;
	v4.Player = nil;
	v4.FallbackColor = nil;
	v4.FallbackTransparency = nil;
	v4[v2.Children] = nil;
	local v7 = p7.state.image == "";
	local v8 = p7.props.FallbackTransparency;
	if v8 == nil then
		v8 = 0.6;
	end;
	local v9 = {};
	for v10, v11 in pairs(v4) do
		v9[v10] = v11;
	end;
	if v7 then
		local v12 = l__ImageId__4.PIXEL;
	else
		v12 = p7.state.image;
	end;
	v9.Image = v12;
	if v7 then
		local v13 = p7.props.FallbackColor or l__ColorUtil__3.BLACK;
	else
		v13 = nil;
	end;
	v9.ImageColor3 = v13;
	if v7 then
		local v14 = v8;
	else
		v14 = nil;
	end;
	v9.ImageTransparency = v14;
	local v15 = {};
	local v16 = #v15;
	local v17 = p7.props[v2.Children];
	if v17 then
		local v18, v19, v20 = pairs(v17);
		while true do
			local v21 = nil;
			local v22 = nil;
			v22, v21 = v18(v19, v20);
			if not v22 then
				break;
			end;
			v20 = v22;
			if type(v22) == "number" then
				v15[v16 + v22] = v21;
			else
				v15[v22] = v21;
			end;		
		end;
	end;
	return v2.createFragment({
		PlayerRender = v2.createElement("ImageLabel", v9, v15)
	});
end;
return {
	PlayerRender = v3
};
