-- Script Hash: 60b5ce4a6a8c1587ba0ac57b1613512a7a88d152e29df2657974fc761863a7ba9e5aae7785aee088ab2825193a60434c
-- Decompiled with the Synapse X Luau decompiler.

local function u1(p1, p2)
	local v1 = ("\t"):rep(p2);
	return v1 .. p1:gsub("\n", "\n" .. v1);
end;
local v2 = {};
local function u2(p3, p4)
	local v3 = {};
	for v4, v5 in ipairs(p3) do
		table.insert(v3, u1(v5, p4));
	end;
	return table.concat(v3, "\n");
end;
function v2.__tostring(p5)
	local v6 = { "LogInfo {" };
	local v7 = #p5.errors;
	local v8 = #p5.warnings;
	local v9 = #p5.infos;
	if v7 + v8 + v9 == 0 then
		table.insert(v6, "\t(no messages)");
	end;
	if v7 > 0 then
		table.insert(v6, ("\tErrors (%d) {"):format(v7));
		table.insert(v6, u2(p5.errors, 2));
		table.insert(v6, "\t}");
	end;
	if v8 > 0 then
		table.insert(v6, ("\tWarnings (%d) {"):format(v8));
		table.insert(v6, u2(p5.warnings, 2));
		table.insert(v6, "\t}");
	end;
	if v9 > 0 then
		table.insert(v6, ("\tInfos (%d) {"):format(v9));
		table.insert(v6, u2(p5.infos, 2));
		table.insert(v6, "\t}");
	end;
	table.insert(v6, "}");
	return table.concat(v6, "\n");
end;
local v10 = {};
local function u3()
	local v11 = {
		errors = {}, 
		warnings = {}, 
		infos = {}
	};
	setmetatable(v11, v2);
	return v11;
end;
local u4 = true;
local u5 = {};
function v10.capture(p6)
	local v12 = u3();
	u4 = false;
	u5[v12] = true;
	local v13, v14 = pcall(p6);
	u5[v12] = nil;
	u4 = u4;
	assert(v13, v14);
	return v12;
end;
function v10.warn(p7, ...)
	local v15 = p7:format(...);
	for v16 in pairs(u5) do
		table.insert(v16.warnings, v15);
	end;
	local v17 = ("%s\n%s"):format(v15, u1(debug.traceback("", 2):sub(2), 1));
	if u4 then
		warn(v17);
	end;
end;
local u6 = {};
function v10.warnOnce(p8, ...)
	local v18 = debug.traceback();
	if u6[v18] then
		return;
	end;
	u6[v18] = true;
	v10.warn(p8, ...);
end;
return v10;
