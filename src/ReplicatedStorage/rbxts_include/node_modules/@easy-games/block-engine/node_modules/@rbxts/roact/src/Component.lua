-- Script Hash: 0a6584b6ff1694601fdf496571a48c4ce59ba7d9d94ad2dc7ab2b63ad43a36c7d1306a2085dc177b15538532724e4fd4
-- Decompiled with the Synapse X Luau decompiler.

local v1 = require(script.Parent.assign);
local v2 = require(script.Parent.ComponentLifecyclePhase);
local v3 = require(script.Parent.Type);
local v4 = require(script.Parent.invalidSetStateMessages);
local v5 = require(script.Parent.internalAssert);
local v6 = require(script.Parent.GlobalConfig).get();
local v7 = require(script.Parent.Symbol).named("InternalData");
local v8 = {
	__tostring = function(p1)
		return p1.__componentName;
	end
};
local v9 = {};
setmetatable(v9, v8);
v9[v3] = v3.StatefulComponentClass;
v9.__index = v9;
v9.__componentName = "Component";
function v9.extend(p2, p3)
	if v6.typeChecks then
		assert(v3.of(p2) == v3.StatefulComponentClass, "Invalid `self` argument to `extend`.");
		assert(typeof(p3) == "string", "Component class name must be a string");
	end;
	local v10 = {};
	for v11, v12 in pairs(p2) do
		if v11 ~= "extend" then
			v10[v11] = v12;
		end;
	end;
	v10[v3] = v3.StatefulComponentClass;
	v10.__index = v10;
	v10.__componentName = p3;
	setmetatable(v10, v8);
	return v10;
end;
function v9.__getDerivedState(p4, p5, p6)
	local v13 = nil;
	if v6.internalTypeChecks then
		v5(v3.of(p4) == v3.StatefulComponentInstance, "Invalid use of `__getDerivedState`");
	end;
	local l__componentClass__14 = p4[v7].componentClass;
	if l__componentClass__14.getDerivedStateFromProps ~= nil then
		v13 = l__componentClass__14.getDerivedStateFromProps(p5, p6);
		if v13 == nil then
			return nil;
		end;
	else
		return nil;
	end;
	if v6.typeChecks then
		assert(typeof(v13) == "table", "getDerivedStateFromProps must return a table!");
	end;
	return v13;
end;
function v9.setState(p7, p8)
	if v6.typeChecks then
		assert(v3.of(p7) == v3.StatefulComponentInstance, "Invalid `self` argument to `extend`.");
	end;
	local v15 = p7[v7];
	local l__lifecyclePhase__16 = v15.lifecyclePhase;
	if l__lifecyclePhase__16 == v2.ShouldUpdate or l__lifecyclePhase__16 == v2.WillUpdate or l__lifecyclePhase__16 == v2.Render or l__lifecyclePhase__16 == v2.WillUnmount then
		error(v4[v15.lifecyclePhase]:format(tostring(v15.componentClass)), 2);
	end;
	local l__pendingState__17 = v15.pendingState;
	local v18 = nil;
	if typeof(p8) == "function" then
		v18 = p8(l__pendingState__17 or p7.state, p7.props);
		if v18 == nil then
			return;
		end;
	elseif typeof(p8) == "table" then
		v18 = p8;
	else
		error("Invalid argument to setState, expected function or table", 2);
	end;
	if l__pendingState__17 ~= nil then
		local v19 = v1(l__pendingState__17, v18);
	else
		v19 = v1({}, p7.state, v18);
	end;
	if l__lifecyclePhase__16 == v2.Init then
		p7.state = v1(v19, (p7:__getDerivedState(p7.props, v19)));
		return;
	end;
	if l__lifecyclePhase__16 == v2.DidMount or l__lifecyclePhase__16 == v2.DidUpdate or l__lifecyclePhase__16 == v2.ReconcileChildren then
		v15.pendingState = v1(v19, (p7:__getDerivedState(p7.props, v19)));
		return;
	end;
	if l__lifecyclePhase__16 == v2.Idle then
		p7:__update(nil, v19);
		return;
	end;
	error(v4.default:format(tostring(v15.componentClass)), 2);
end;
function v9.getElementTraceback(p9)
	return p9[v7].virtualNode.currentElement.source;
end;
function v9.render(p10)
	error(("The component %q is missing the `render` method.\n`render` must be defined when creating a Roact component!"):format(tostring(p10[v7].componentClass)), 0);
end;
function v9.__getContext(p11, p12)
	if v6.internalTypeChecks then
		v5(v3.of(p11) == v3.StatefulComponentInstance, "Invalid use of `__getContext`");
		v5(p12 ~= nil, "Context key cannot be nil");
	end;
	return p11[v7].virtualNode.context[p12];
end;
function v9.__addContext(p13, p14, p15)
	if v6.internalTypeChecks then
		v5(v3.of(p13) == v3.StatefulComponentInstance, "Invalid use of `__addContext`");
	end;
	local l__virtualNode__20 = p13[v7].virtualNode;
	if l__virtualNode__20.originalContext == nil then
		l__virtualNode__20.originalContext = l__virtualNode__20.context;
	end;
	l__virtualNode__20.context = v1({}, l__virtualNode__20.context, {
		[p14] = p15
	});
end;
function v9.__validateProps(p16, p17)
	if not v6.propValidation then
		return;
	end;
	local l__validateProps__21 = p16[v7].componentClass.validateProps;
	if l__validateProps__21 == nil then
		return;
	end;
	if typeof(l__validateProps__21) ~= "function" then
		error(("validateProps must be a function, but it is a %s.\nCheck the definition of the component %q."):format(typeof(l__validateProps__21), p16.__componentName));
	end;
	local v22, v23 = l__validateProps__21(p17);
	if not v22 then
		error(("Property validation failed in %s: %s\n\n%s"):format(p16.__componentName, tostring(v23 and "<Validator function did not supply a message>"), p16:getElementTraceback() and "<enable element tracebacks>"), 0);
	end;
end;
function v9.__mount(p18, p19, p20)
	if v6.internalTypeChecks then
		v5(v3.of(p18) == v3.StatefulComponentClass, "Invalid use of `__mount`");
		v5(v3.of(p20) == v3.VirtualNode, "Expected arg #2 to be of type VirtualNode");
	end;
	local v24 = {
		reconciler = p19, 
		virtualNode = p20, 
		componentClass = p18, 
		lifecyclePhase = v2.Init
	};
	local v25 = {
		[v3] = v3.StatefulComponentInstance, 
		[v7] = v24
	};
	setmetatable(v25, p18);
	p20.instance = v25;
	local v26 = p20.currentElement.props;
	if p18.defaultProps ~= nil then
		v26 = v1({}, p18.defaultProps, v26);
	end;
	v25:__validateProps(v26);
	v25.props = v26;
	v25._context = v1({}, p20.legacyContext);
	v25.state = v1({}, v25:__getDerivedState(v25.props, {}));
	if v25.init ~= nil then
		v25:init(v25.props);
		v1(v25.state, v25:__getDerivedState(v25.props, v25.state));
	end;
	p20.legacyContext = v25._context;
	v24.lifecyclePhase = v2.Render;
	v24.lifecyclePhase = v2.ReconcileChildren;
	p19.updateVirtualNodeWithRenderResult(p20, p20.hostParent, (v25:render()));
	if v25.didMount ~= nil then
		v24.lifecyclePhase = v2.DidMount;
		v25:didMount();
	end;
	if v24.pendingState ~= nil then
		v25:__update(nil, nil);
	end;
	v24.lifecyclePhase = v2.Idle;
end;
function v9.__unmount(p21)
	if v6.internalTypeChecks then
		v5(v3.of(p21) == v3.StatefulComponentInstance, "Invalid use of `__unmount`");
	end;
	local v27 = p21[v7];
	local l__reconciler__28 = v27.reconciler;
	if p21.willUnmount ~= nil then
		v27.lifecyclePhase = v2.WillUnmount;
		p21:willUnmount();
	end;
	for v29, v30 in pairs(v27.virtualNode.children) do
		l__reconciler__28.unmountVirtualNode(v30);
	end;
end;
function v9.__update(p22, p23, p24)
	if v6.internalTypeChecks then
		v5(v3.of(p22) == v3.StatefulComponentInstance, "Invalid use of `__update`");
		local v31 = true;
		if v3.of(p23) ~= v3.Element then
			v31 = p23 == nil;
		end;
		v5(v31, "Expected arg #1 to be of type Element or nil");
		local v32 = true;
		if typeof(p24) ~= "table" then
			v32 = p24 == nil;
		end;
		v5(v32, "Expected arg #2 to be of type table or nil");
	end;
	local v33 = p22[v7];
	local l__componentClass__34 = v33.componentClass;
	local v35 = p22.props;
	if p23 ~= nil then
		v35 = p23.props;
		if l__componentClass__34.defaultProps ~= nil then
			v35 = v1({}, l__componentClass__34.defaultProps, v35);
		end;
		p22:__validateProps(v35);
	end;
	local v36 = 0;
	while true do
		local v37 = nil;
		if v33.pendingState ~= nil then
			v37 = v33.pendingState;
			v33.pendingState = nil;
		end;
		if p24 ~= nil or v35 ~= p22.props then
			if v37 == nil then
				local v38 = p24 or p22.state;
			else
				v38 = v1(v37, p24);
			end;
			local v39 = p22:__getDerivedState(v35, v38);
			if v39 ~= nil then
				v38 = v1({}, v38, v39);
			end;
			p24 = nil;
		else
			v38 = v37;
		end;
		if not p22:__resolveUpdate(v35, v38) then
			return false;
		end;
		v36 = v36 + 1;
		if v36 > 100 then
			error(("The component %q has reached the setState update recursion limit.\nWhen using `setState` in `didUpdate`, make sure that it won't repeat infinitely!"):format(tostring(v33.componentClass)), 3);
		end;
		if v33.pendingState == nil then
			break;
		end;	
	end;
	return true;
end;
function v9.__resolveUpdate(p25, p26, p27)
	if v6.internalTypeChecks then
		v5(v3.of(p25) == v3.StatefulComponentInstance, "Invalid use of `__resolveUpdate`");
	end;
	local v40 = p25[v7];
	local l__virtualNode__41 = v40.virtualNode;
	local l__props__42 = p25.props;
	local l__state__43 = p25.state;
	if p26 == nil then
		p26 = l__props__42;
	end;
	if p27 == nil then
		p27 = l__state__43;
	end;
	if p25.shouldUpdate ~= nil then
		v40.lifecyclePhase = v2.ShouldUpdate;
		if not p25:shouldUpdate(p26, p27) then
			v40.lifecyclePhase = v2.Idle;
			return false;
		end;
	end;
	if p25.willUpdate ~= nil then
		v40.lifecyclePhase = v2.WillUpdate;
		p25:willUpdate(p26, p27);
	end;
	v40.lifecyclePhase = v2.Render;
	p25.props = p26;
	p25.state = p27;
	v40.lifecyclePhase = v2.ReconcileChildren;
	v40.reconciler.updateVirtualNodeWithRenderResult(l__virtualNode__41, l__virtualNode__41.hostParent, (l__virtualNode__41.instance:render()));
	if p25.didUpdate ~= nil then
		v40.lifecyclePhase = v2.DidUpdate;
		p25:didUpdate(l__props__42, l__state__43);
	end;
	v40.lifecyclePhase = v2.Idle;
	return true;
end;
return v9;
