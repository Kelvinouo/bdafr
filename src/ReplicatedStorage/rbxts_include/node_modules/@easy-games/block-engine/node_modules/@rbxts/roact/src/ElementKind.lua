
-- Decompiled with the Synapse X Luau decompiler.

local v1 = require(script.Parent.Symbol);
local v2 = {
	Portal = v1.named("Portal"), 
	Host = v1.named("Host"), 
	Function = v1.named("Function"), 
	Stateful = v1.named("Stateful"), 
	Fragment = v1.named("Fragment")
};
local u1 = newproxy(true);
function v2.of(p1)
	if typeof(p1) ~= "table" then
		return nil;
	end;
	return p1[u1];
end;
local u2 = require(script.Parent.Portal);
local u3 = {
	string = v2.Host, 
	["function"] = v2.Function, 
	table = v2.Stateful
};
function v2.fromComponent(p2)
	if p2 == u2 then
		return u1.Portal;
	end;
	return u3[typeof(p2)];
end;
getmetatable(u1).__index = v2;
require(script.Parent.strict)(v2, "ElementKind");
return u1;

