
-- Decompiled with the Synapse X Luau decompiler.

local v1 = _G[script];
local l__GameQueryUtil__2 = v1.import(script, v1.getModule(script, "@easy-games", "game-core").out).GameQueryUtil;
local v3 = v1.import(script, v1.getModule(script, "@rbxts", "make"));
local v4 = v1.import(script, v1.getModule(script, "@rbxts", "services"));
local l__BlockEngine__5 = v1.import(script, script.Parent.Parent.Parent).BlockEngine;
local l__BLOCK_SIZE__6 = v1.import(script, script.Parent.Parent.Parent, "shared", "block", "block-constants").BLOCK_SIZE;
local l__PositionUtil__7 = v1.import(script, script.Parent.Parent.Parent, "shared", "lib", "position-util").PositionUtil;
local v8 = {};
local v9 = setmetatable({}, {
	__index = v8
});
v9.PLACE = 0;
v8[0] = "PLACE";
v9.SELECT = 1;
v8[1] = "SELECT";
local v10 = setmetatable({}, {
	__tostring = function()
		return "BlockSelector";
	end
});
v10.__index = v10;
function v10.new(...)
	local v11 = setmetatable({}, v10);
	return v11:constructor(...) and v11;
end;
local l__Players__1 = v4.Players;
function v10.constructor(p1, p2)
	if p2 then
		p1.mouse = p2;
		return;
	end;
	p1.mouse = l__Players__1.LocalPlayer:GetMouse();
end;
local l__Workspace__2 = v4.Workspace;
local u3 = 6 * l__BLOCK_SIZE__6;
local l__CollectionService__4 = v4.CollectionService;
local u5 = 6 * l__BLOCK_SIZE__6;
function v10.getMouseInfo(p3, p4, p5)
	local v12 = l__Players__1.LocalPlayer.Character;
	if v12 ~= nil then
		v12 = v12.PrimaryPart;
	end;
	if not v12 then
		return nil;
	end;
	local v13 = RaycastParams.new();
	v13.FilterType = Enum.RaycastFilterType.Blacklist;
	if l__Players__1.LocalPlayer.Character then
		v13.FilterDescendantsInstances = { l__Players__1.LocalPlayer.Character };
	end;
	local function v14()
		local v15 = p5;
		if v15 ~= nil then
			v15 = v15.ray;
		end;
		local v16 = v15;
		if v16 == nil then
			v16 = p3.mouse.UnitRay;
		end;
		local v17 = l__Workspace__2:Raycast(v16.Origin, v16.Direction * (u3 * 3.5), v13);
		while true do
			local v18 = v17;
			if v18 then
				v18 = l__CollectionService__4:HasTag(v17.Instance, "block:no-collision");
				if not v18 then
					v18 = l__GameQueryUtil__2:isQueryIgnored(v17.Instance);
					if not v18 then
						v18 = false;
						if p4 == v9.PLACE then
							v18 = v17.Instance:GetAttribute("BlockEngine_Select_IgnorePlaceMode");
						end;
					end;
				end;
			end;
			if v18 == 0 then
				break;
			end;
			if v18 ~= v18 then
				break;
			end;
			if v18 == "" then
				break;
			end;
			if not v18 then
				break;
			end;
			local v19 = {};
			local v20 = #v19;
			local v21 = v13.FilterDescendantsInstances;
			local v22 = #v21;
			table.move(v21, 1, v22, v20 + 1, v19);
			v19[v20 + v22 + 1] = v17.Instance;
			v13.FilterDescendantsInstances = v19;
			v17 = l__Workspace__2:Raycast(v16.Origin, v16.Direction * (u3 * 3.5), v13);		
		end;
		return v17;
	end;
	local l__Position__23 = l__Players__1.LocalPlayer.Character.PrimaryPart.Position;
	local v24 = v14();
	local v25 = u3;
	if p4 == v9.SELECT then
		v25 = u5;
	end;
	if v24 and (v24.Instance:IsA("BasePart") and (v24.Position - l__Position__23).Magnitude <= v25) then
		local v26 = l__BlockEngine__5:getBlockInstanceFromChild(v24.Instance);
		if v26 then
			local v27 = l__BlockEngine__5:getHandlerRegistry():getHandler(v26.Name);
			if v27 ~= nil then
				v27 = v27:getBlockMeta();
			end;
			if p4 == v9.PLACE then
				local v28 = v27;
				if v28 ~= nil then
					v28 = v28.denyPlaceOn;
				end;
				if v28 then
					return nil;
				else
					local v29 = l__PositionUtil__7.convertToBlockPosition(v24.Position - v24.Normal * 0.1);
					return {
						target = {
							blockInstance = v26, 
							blockRef = {
								blockPosition = v29
							}, 
							hitPosition = v24.Position, 
							hitNormal = v24.Normal
						}, 
						placementPosition = v29 + v24.Normal.Unit
					};
				end;
			else
				v29 = l__PositionUtil__7.convertToBlockPosition(v24.Position - v24.Normal * 0.1);
				return {
					target = {
						blockInstance = v26, 
						blockRef = {
							blockPosition = v29
						}, 
						hitPosition = v24.Position, 
						hitNormal = v24.Normal
					}, 
					placementPosition = v29 + v24.Normal.Unit
				};
			end;
		end;
	end;
	if p4 == v9.PLACE then
		local v30 = nil;
		local v31 = (l__Workspace__2:GetAttribute("WorldNormal") or Vector3.new(0, 1, 0)) * (math.pi / 2);
		local v32 = 1;
		local v33 = false;
		while true do
			if v33 then
				v32 = v32 + 1;
			else
				v33 = true;
			end;
			if not (v32 <= 3) then
				break;
			end;
			local v34 = l__BlockEngine__5:getBlockPosition(l__Position__23 - v31 * l__BLOCK_SIZE__6 * v32);
			if l__BlockEngine__5:getStore():getBlockAt(v34) then
				v30 = {
					blockPosition = v34
				};
				break;
			end;		
		end;
		if v30 then
			local v35 = v3("Part", {
				Size = Vector3.new(30, 1, 30) * l__BLOCK_SIZE__6, 
				CFrame = CFrame.new(v30.blockPosition * l__BLOCK_SIZE__6) * CFrame.Angles(v31.Z, 0, v31.X), 
				Anchored = true, 
				Transparency = 1, 
				CanCollide = false, 
				Parent = l__Workspace__2
			});
			local v36 = l__Players__1:GetPlayers();
			local function v37(p6)
				return p6.Character;
			end;
			local v38 = {};
			local v39 = 0;
			for v40, v41 in ipairs(v36) do
				local v42 = v37(v41, v40 - 1, v36);
				if v42 ~= nil then
					v39 = v39 + 1;
					v38[v39] = v42;
				end;
			end;
			local v43 = {};
			table.move(v38, 1, #v38, #v43 + 1, v43);
			v13.FilterDescendantsInstances = v43;
			local v44 = v14();
			v35:Destroy();
			local v45 = v44;
			if v45 ~= nil then
				v45 = v45.Instance;
			end;
			if v45 == v35 then
				local v46 = l__BlockEngine__5:getBlockPosition(l__BlockEngine__5:snapPosition(v44.Position - v31 * (l__BLOCK_SIZE__6 / 2)));
				if l__BlockEngine__5:getStore():getBlockAt(v46) == nil then
					local v47 = 10;
					while v47 > 0 do
						local v48 = l__BlockEngine__5:snapPosition(v46 - (v46 - v30.blockPosition).Unit);
						if l__BlockEngine__5:getStore():getBlockAt(v48) then
							break;
						end;
						v46 = v48;
						v47 = v47 - 1;					
					end;
					return {
						target = nil, 
						placementPosition = v46
					};
				end;
			end;
		end;
	end;
	return nil;
end;
return {
	BlockSelectorMode = v9, 
	BlockSelector = v10
};

