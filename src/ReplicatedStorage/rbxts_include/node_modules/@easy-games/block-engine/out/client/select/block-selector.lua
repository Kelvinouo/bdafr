-- Decompiled with the Synapse X Luau decompiler.

local v1 = _G[script];
local l__GameQueryUtil__2 = v1.import(script, v1.getModule(script, "@easy-games", "game-core").out).GameQueryUtil;
local v3 = v1.import(script, v1.getModule(script, "@rbxts", "make"));
local v4 = v1.import(script, v1.getModule(script, "@rbxts", "services"));
local l__BlockEngine__5 = v1.import(script, script.Parent.Parent.Parent).BlockEngine;
local l__BLOCK_SIZE__6 = v1.import(script, script.Parent.Parent.Parent, "shared", "block", "block-constants").BLOCK_SIZE;
local l__PositionUtil__7 = v1.import(script, script.Parent.Parent.Parent, "shared", "lib", "position-util").PositionUtil;
local v8 = {};
local v9 = setmetatable({}, {
	__index = v8
});
v9.PLACE = 0;
v8[0] = "PLACE";
v9.SELECT = 1;
v8[1] = "SELECT";
local v10 = setmetatable({}, {
	__tostring = function()
		return "BlockSelector";
	end
});
v10.__index = v10;
function v10.new(...)
	local v11 = setmetatable({}, v10);
	return v11:constructor(...) and v11;
end;
local l__Players__1 = v4.Players;
function v10.constructor(p1, p2)
	if p2 then
		p1.mouse = p2;
		return;
	end;
	p1.mouse = l__Players__1.LocalPlayer:GetMouse();
end;
local l__Workspace__2 = v4.Workspace;
local u3 = 6 * l__BLOCK_SIZE__6;
local l__CollectionService__4 = v4.CollectionService;
local u5 = 6 * l__BLOCK_SIZE__6;
function v10.getMouseInfo(p3, p4, p5)
	local v12 = l__Players__1.LocalPlayer.Character;
	if v12 ~= nil then
		v12 = v12.PrimaryPart;
	end;
	if not v12 then
		return nil;
	end;
	local v13 = RaycastParams.new();
	v13.FilterType = Enum.RaycastFilterType.Blacklist;
	if l__Players__1.LocalPlayer.Character then
		v13.FilterDescendantsInstances = { l__Players__1.LocalPlayer.Character };
	end;
	local function v14()
		local v15 = p5;
		if v15 ~= nil then
			v15 = v15.ray;
		end;
		local v16 = v15;
		if v16 == nil then
			v16 = p3.mouse.UnitRay;
		end;
		local v17 = l__Workspace__2:Raycast(v16.Origin, v16.Direction * (u3 * 3.5), v13);
		while true do
			local v18 = v17;
			if v18 then
				v18 = l__CollectionService__4:HasTag(v17.Instance, "block:no-collision");
				if not v18 then
					v18 = l__GameQueryUtil__2:isQueryIgnored(v17.Instance);
					if not v18 then
						v18 = false;
						if p4 == v9.PLACE then
							v18 = v17.Instance:GetAttribute("BlockEngine_Select_IgnorePlaceMode");
						end;
					end;
				end;
			end;
			if v18 == 0 then
				break;
			end;
			if v18 ~= v18 then
				break;
			end;
			if v18 == "" then
				break;
			end;
			if not v18 then
				break;
			end;
			local v19 = {};
			local v20 = #v19;
			local v21 = v13.FilterDescendantsInstances;
			local v22 = #v21;
			table.move(v21, 1, v22, v20 + 1, v19);
			v19[v20 + v22 + 1] = v17.Instance;
			v13.FilterDescendantsInstances = v19;
			v17 = l__Workspace__2:Raycast(v16.Origin, v16.Direction * (u3 * 3.5), v13);		
		end;
		return v17;
	end;
	local l__Position__23 = l__Players__1.LocalPlayer.Character.PrimaryPart.Position;
	local v24 = v14();
	local v25 = u3;
	if p4 == v9.SELECT then
		v25 = u5;
	end;
	local v26 = v24 and v24.Instance:IsA("BasePart");
	if v26 then
		local v27 = p5;
		if v27 ~= nil then
			v27 = v27.searchOutward;
		end;
		v26 = v27 ~= true;
	end;
	if v26 and (v24.Position - l__Position__23).Magnitude <= v25 then
		local v28 = l__BlockEngine__5:getBlockInstanceFromChild(v24.Instance);
		if v28 then
			local v29 = l__BlockEngine__5:getHandlerRegistry():getHandler(v28.Name);
			if v29 ~= nil then
				v29 = v29:getBlockMeta();
			end;
			if p4 == v9.PLACE then
				local v30 = v29;
				if v30 ~= nil then
					v30 = v30.denyPlaceOn;
				end;
				if v30 then
					return nil;
				else
					local v31 = l__PositionUtil__7.convertToBlockPosition(v24.Position - v24.Normal * 0.1);
					return {
						target = {
							blockInstance = v28, 
							blockRef = {
								blockPosition = v31
							}, 
							hitPosition = v24.Position, 
							hitNormal = v24.Normal
						}, 
						placementPosition = v31 + v24.Normal.Unit
					};
				end;
			else
				v31 = l__PositionUtil__7.convertToBlockPosition(v24.Position - v24.Normal * 0.1);
				return {
					target = {
						blockInstance = v28, 
						blockRef = {
							blockPosition = v31
						}, 
						hitPosition = v24.Position, 
						hitNormal = v24.Normal
					}, 
					placementPosition = v31 + v24.Normal.Unit
				};
			end;
		end;
	end;
	if p4 == v9.PLACE then
		local v32 = nil;
		local v33 = l__Workspace__2:GetAttribute("WorldNormal") or Vector3.new(0, 1, 0);
		local v34 = 1;
		local v35 = false;
		while true do
			if v35 then
				v34 = v34 + 1;
			else
				v35 = true;
			end;
			if not (v34 <= 3) then
				break;
			end;
			local v36 = l__BlockEngine__5:getBlockPosition(l__Position__23 - v33 * l__BLOCK_SIZE__6 * v34);
			if l__BlockEngine__5:getStore():getBlockAt(v36) then
				v32 = {
					blockPosition = v36
				};
				break;
			end;		
		end;
		if not v32 then
			local v37 = nil;
			local v38 = nil;
			local v39 = p5;
			if v39 ~= nil then
				v39 = v39.allowVoidSave;
			end;
			if v39 then
				local v40 = { Vector3.new(1, 0, 0), Vector3.new(-1, 0, 0), Vector3.new(0, 0, 1), Vector3.new(0, 0, -1), Vector3.new(1, 0, 1), Vector3.new(-1, 0, -1), Vector3.new(-1, 0, 1), Vector3.new(1, 0, -1) };
				local v41 = 1;
				local v42 = false;
				while true do
					if v42 then
						v41 = v41 + 1;
					else
						v42 = true;
					end;
					if not (v41 <= 3) then
						break;
					end;
					local v43 = l__BlockEngine__5:getBlockPosition(l__Position__23 - v33 * l__BLOCK_SIZE__6 * v41);
					local v44, v45, v46 = ipairs(v40);
					while true do
						v44(v45, v46);
						if not v44 then
							break;
						end;
						v46 = v44;
						if l__BlockEngine__5:getStore():getBlockAt(v43 + v45) ~= nil then
							return {
								target = nil, 
								placementPosition = v43
							};
						end;					
					end;				
				end;
				v37 = nil;
				v38 = v37;
				return v38;
			else
				v37 = nil;
				v38 = v37;
				return v38;
			end;
		end;
		local v47 = v3("Part", {
			Size = Vector3.new(30, 1, 30) * l__BLOCK_SIZE__6, 
			CFrame = CFrame.new(v32.blockPosition * l__BLOCK_SIZE__6) * CFrame.Angles(v33.Z, 0, v33.X), 
			Anchored = true, 
			Transparency = 1, 
			CanCollide = false, 
			Parent = l__Workspace__2
		});
		local v48 = {};
		local v49 = 0;
		local v50, v51, v52 = ipairs((l__Players__1:GetPlayers()));
		while true do
			v50(v51, v52);
			if not v50 then
				break;
			end;
			v52 = v50;
			local l__Character__53 = v51.Character;
			if l__Character__53 ~= nil then
				v49 = v49 + 1;
				v48[v49] = l__Character__53;
			end;		
		end;
		local v54 = {};
		table.move(v48, 1, #v48, #v54 + 1, v54);
		v13.FilterDescendantsInstances = v54;
		local v55 = p5;
		if v55 ~= nil then
			v55 = v55.searchOutward;
		end;
		if v55 then
			v13.FilterDescendantsInstances = { v47 };
			v13.FilterType = Enum.RaycastFilterType.Whitelist;
		end;
		local v56 = v14();
		v47:Destroy();
		local v57 = v56;
		if v57 ~= nil then
			v57 = v57.Instance;
		end;
		if v57 == v47 then
			local v58 = l__BlockEngine__5:getBlockPosition(l__BlockEngine__5:snapPosition(v56.Position - v33 * (l__BLOCK_SIZE__6 / 2)));
			local v59 = v32.blockPosition;
			if l__BlockEngine__5:getStore():getBlockAt(v59) then
				local v60 = 0;
				local v61 = false;
				while true do
					if v61 then
						v60 = v60 + 1;
					else
						v61 = true;
					end;
					if not (v60 < 20) then
						break;
					end;
					v59 = v59 + (v58 - v59).Unit / 2;
					if not l__BlockEngine__5:getStore():getBlockAt(l__BlockEngine__5:snapPosition(v59)) then
						break;
					end;				
				end;
			end;
			local v62 = l__BlockEngine__5:snapPosition(v59);
			if l__BlockEngine__5:getStore():getBlockAt(v62) == nil then
				return {
					target = nil, 
					placementPosition = v62
				};
			end;
		end;
	end;
	return nil;
end;
return {
	BlockSelectorMode = v9, 
	BlockSelector = v10
};
