-- Script Hash: e529df13c58cfbd9d1a94827f6085ae484f906d31bfcc3065a023be1c45823f6d374b64768eefbec4b9b392a3bff1bbf
-- Decompiled with the Synapse X Luau decompiler.

local v1 = _G[script];
local v2 = setmetatable({}, {
	__tostring = function()
		return "IClientBlockEngine";
	end
});
v2.__index = v2;
function v2.new(...)
	local v3 = setmetatable({}, v2);
	return v3:constructor(...) and v3;
end;
local l__BlockSelector__1 = v1.import(script, script.Parent, "select", "block-selector").BlockSelector;
function v2.constructor(p1)
	p1.blockSelector = l__BlockSelector__1.new();
end;
local l__CollectionTagAdded__2 = v1.import(script, v1.getModule(script, "@easy-games", "game-core").out).CollectionTagAdded;
local l__BlockEngine__3 = v1.import(script, script.Parent.Parent).BlockEngine;
local u4 = v1.import(script, v1.getModule(script, "@rbxts", "maid").Maid);
function v2.startBlockReplication(p2)
	l__CollectionTagAdded__2("block", function(p3)
		local v4 = l__BlockEngine__3:getHandlerRegistry():getHandler(p3.Name);
		if not v4 then
			warn("[ClientBlockEngine]: Failed to find handler during block instance stream: " .. p3.Name);
			return;
		end;
		local v5 = u4.new();
		local v6 = v4:getContainedPositions(p3);
		local function v7(p4)
			l__BlockEngine__3:getStore():setBlock(p4, p3);
		end;
		for v8, v9 in ipairs(v6) do
			v7(v9, v8 - 1, v6);
		end;
		local u5 = v6;
		v5:GiveTask(p3:GetPropertyChangedSignal("Size"):Connect(function()
			local v10 = v4:getContainedPositions(p3);
			local function v11(p5)
				return table.find(u5, p5) == nil;
			end;
			local v12 = {};
			local v13 = 0;
			for v14, v15 in ipairs(v10) do
				if v11(v15, v14 - 1, v10) == true then
					v13 = v13 + 1;
					v12[v13] = v15;
				end;
			end;
			local function v16(p6)
				return table.find(v10, p6) == nil;
			end;
			local v17 = {};
			local v18 = 0;
			for v19, v20 in ipairs(u5) do
				if v16(v20, v19 - 1, u5) == true then
					v18 = v18 + 1;
					v17[v18] = v20;
				end;
			end;
			u5 = v10;
			local function v21(p7)
				l__BlockEngine__3:getStore():setBlock(p7, p3);
			end;
			for v22, v23 in ipairs(v12) do
				v21(v23, v22 - 1, v12);
			end;
			local function v24(p8)
				l__BlockEngine__3:getStore():setBlock(p8, nil);
			end;
			for v25, v26 in ipairs(v17) do
				v24(v26, v25 - 1, v17);
			end;
		end));
		v5:GiveTask(p3.AncestryChanged:Connect(function(p9, p10)
			if p10 == nil then
				l__BlockEngine__3:getStore():removeBlockInstance(p3);
				v5:DoCleaning();
			end;
		end));
	end);
end;
function v2.getBlockSelector(p11)
	return p11.blockSelector;
end;
return {
	IClientBlockEngine = v2
};
