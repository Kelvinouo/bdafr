-- Decompiled with the Synapse X Luau decompiler.

local v1 = _G[script];
local v2 = setmetatable({}, {
	__tostring = function()
		return "IClientBlockEngine";
	end
});
v2.__index = v2;
function v2.new(...)
	local v3 = setmetatable({}, v2);
	return v3:constructor(...) and v3;
end;
local l__BlockSelector__1 = v1.import(script, script.Parent, "select", "block-selector").BlockSelector;
function v2.constructor(p1)
	p1.blockSelector = l__BlockSelector__1.new();
end;
local l__CollectionTagAdded__2 = v1.import(script, v1.getModule(script, "@easy-games", "game-core").out).CollectionTagAdded;
local l__BlockEngine__3 = v1.import(script, script.Parent.Parent).BlockEngine;
local u4 = v1.import(script, v1.getModule(script, "@rbxts", "maid").Maid);
function v2.startBlockReplication(p2)
	l__CollectionTagAdded__2("block", function(p3)
		debug.profilebegin("register-block");
		local v4 = l__BlockEngine__3:getHandlerRegistry():getHandler(p3.Name);
		if v4 then
			local v5 = u4.new();
			local v6 = v4:getContainedPositions(p3);
			local v7, v8, v9 = ipairs(v6);
			while true do
				v7(v8, v9);
				if not v7 then
					break;
				end;
				v9 = v7;
				l__BlockEngine__3:getStore():setBlock(v8, p3);			
			end;
			local u5 = v6;
			v5:GiveTask(p3:GetPropertyChangedSignal("Size"):Connect(function()
				local v10 = v4:getContainedPositions(p3);
				local v11 = {};
				local v12 = 0;
				local v13, v14, v15 = ipairs(v10);
				while true do
					v13(v14, v15);
					if not v13 then
						break;
					end;
					if table.find(u5, v14) == nil == true then
						v12 = v12 + 1;
						v11[v12] = v14;
					end;				
				end;
				local v16 = {};
				local v17 = 0;
				local v18, v19, v20 = ipairs(u5);
				while true do
					v18(v19, v20);
					if not v18 then
						break;
					end;
					if table.find(v10, v19) == nil == true then
						v17 = v17 + 1;
						v16[v17] = v19;
					end;				
				end;
				u5 = v10;
				local v21, v22, v23 = ipairs(v11);
				while true do
					v21(v22, v23);
					if not v21 then
						break;
					end;
					v23 = v21;
					l__BlockEngine__3:getStore():setBlock(v22, p3);				
				end;
				local v24, v25, v26 = ipairs(v16);
				while true do
					v24(v25, v26);
					if not v24 then
						break;
					end;
					v26 = v24;
					l__BlockEngine__3:getStore():setBlock(v25, nil);				
				end;
			end));
			v5:GiveTask(p3.AncestryChanged:Connect(function(p4, p5)
				if p5 == nil then
					l__BlockEngine__3:getStore():removeBlockInstance(p3);
					v5:DoCleaning();
				end;
			end));
		else
			warn("[ClientBlockEngine]: Failed to find handler during block instance stream: " .. p3.Name);
		end;
		debug.profileend();
	end);
end;
function v2.getBlockSelector(p6)
	return p6.blockSelector;
end;
return {
	IClientBlockEngine = v2
};
