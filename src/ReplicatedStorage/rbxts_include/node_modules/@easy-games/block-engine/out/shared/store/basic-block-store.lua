-- Script Hash: 419f6002dad8ae3562589c133e2916f4e060852037e8bcc60c42c3466309984f4b9e7c3d9c5be3fff022cba578d062c4
-- Decompiled with the Synapse X Luau decompiler.

local v1 = _G[script];
local v2 = v1.import(script, v1.getModule(script, "@rbxts", "services"));
local v3 = setmetatable({}, {
	__tostring = function()
		return "BasicBlockStore";
	end
});
v3.__index = v3;
function v3.new(...)
	local v4 = setmetatable({}, v3);
	return v4:constructor(...) and v4;
end;
local l__RunService__1 = v2.RunService;
local u2 = v1.import(script, v1.getModule(script, "@rbxts", "make"));
local l__Workspace__3 = v2.Workspace;
function v3.constructor(p1, p2)
	p1.handlerRegistry = p2;
	p1.blocks = {};
	if l__RunService__1:IsServer() then
		p1.blockDataFolder = u2("Folder", {
			Name = "BlockData", 
			Parent = l__Workspace__3
		});
		return;
	end;
	p1.blockDataFolder = l__Workspace__3:WaitForChild("BlockData");
end;
function v3.getBlockAt(p3, p4)
	return p3.blocks[p3:getKey(p4)];
end;
function v3.setBlock(p5, p6, p7)
	if p7 then
		p5.blocks[p5:getKey(p6)] = p7;
		return;
	end;
	p5.blocks[p5:getKey(p6)] = nil;
end;
function v3.removeBlockInstance(p8, p9)
	local v5 = p8.handlerRegistry:getHandler(p9.Name);
	if v5 then
		local v6 = v5:getContainedPositions(p9);
		local function v7(p10)
			if p8:getBlockAt(p10) == p9 then
				p8:setBlock(p10, nil);
			end;
		end;
		for v8, v9 in ipairs(v6) do
			v7(v9, v8 - 1, v6);
		end;
	end;
end;
function v3.getBlocksInRegion3(p11, p12)
	local v10 = {};
	local l__Position__11 = (p12.CFrame - p12.Size / 2).Position;
	local l__Position__12 = (p12.CFrame + p12.Size / 2).Position;
	local v13 = l__Position__11.X;
	local v14 = false;
	while true do
		if v14 then
			v13 = v13 + 1;
		else
			v14 = true;
		end;
		if not (v13 <= l__Position__12.X) then
			break;
		end;
		local v15 = l__Position__11.Y;
		local v16 = false;
		while true do
			if v16 then
				v15 = v15 + 1;
			else
				v16 = true;
			end;
			if not (v15 <= l__Position__12.Y) then
				break;
			end;
			local v17 = l__Position__11.Z;
			local v18 = false;
			while true do
				if v18 then
					v17 = v17 + 1;
				else
					v18 = true;
				end;
				if not (v17 <= l__Position__12.Z) then
					break;
				end;
				local v19 = p11:getBlockAt(Vector3.new(v13, v15, v17));
				if v19 then
					v10[v19] = true;
				end;			
			end;		
		end;	
	end;
	return v10;
end;
local u4 = v1.import(script, v1.getModule(script, "@rbxts", "object-utils"));
function v3.getAllBlocks(p13)
	return u4.values(p13.blocks);
end;
function v3.getKey(p14, p15)
	p15 = Vector3.new(math.round(p15.X), math.round(p15.Y), math.round(p15.Z));
	return tostring(p15);
end;
function v3.getBlockData(p16, p17)
	local v20 = p16:getBlockAt(p17);
	if v20 then
		local v21 = p16.blockDataFolder:FindFirstChild(p16:getBlockDataName(v20, p17));
		if v21 then
			return v21;
		end;
	end;
	return nil;
end;
function v3.waitForBlockData(p18, p19)
	local v22 = p18:getBlockAt(p19);
	if not v22 then
		error("Block not found at position " .. tostring(p19));
	end;
	return p18.blockDataFolder:WaitForChild(p18:getBlockDataName(v22, p19));
end;
function v3.createBlockData(p20, p21)
	local v23 = p20:getBlockAt(p21);
	if v23 then
		if not p20:getBlockData(p21) then
			local v24 = u2("Folder", {
				Name = p20:getBlockDataName(v23, p21), 
				Parent = p20.blockDataFolder
			});
			return;
		end;
	else
		return;
	end;
	return nil;
end;
function v3.getBlockDataName(p22, p23, p24)
	if p23:GetAttribute("GreedyBlock") ~= true then
		return p23:GetAttribute("BlockUUID");
	end;
	return tostring((p23:GetAttribute("BlockUUID"))) .. "_" .. tostring(p24);
end;
function v3.deleteBlockData(p25, p26)
	local v25 = p25:getBlockData(p26);
	if v25 ~= nil then
		v25:Destroy();
	end;
end;
return {
	BasicBlockStore = v3
};
