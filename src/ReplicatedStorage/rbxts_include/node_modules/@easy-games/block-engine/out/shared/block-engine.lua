-- Decompiled with the Synapse X Luau decompiler.

local v1 = _G[script];
local v2 = v1.import(script, v1.getModule(script, "@rbxts", "services"));
local v3 = setmetatable({}, {
	__tostring = function()
		return "BlockEngine";
	end
});
v3.__index = v3;
function v3.new(...)
	local v4 = setmetatable({}, v3);
	return v4:constructor(...) and v4;
end;
local l__SyncEvent__1 = v1.import(script, v1.getModule(script, "@easy-games", "sync-event").out).SyncEvent;
local l__BlockDamageHook__2 = v1.import(script, script.Parent, "hooks", "block-damage-hook").BlockDamageHook;
local l__BlockBreakableHook__3 = v1.import(script, script.Parent, "hooks", "block-breakable-hook").BlockBreakableHook;
local u4 = v1.import(script, v1.getModule(script, "@rbxts", "make"));
local l__HandlerRegistry__5 = v1.import(script, script.Parent, "handler", "handler-registry").HandlerRegistry;
local l__BasicBlockStore__6 = v1.import(script, script.Parent, "store", "basic-block-store").BasicBlockStore;
local l__AnimationController__7 = v1.import(script, script.Parent, "animation", "animation-controller").AnimationController;
local l__AnimationId__8 = v1.import(script, script.Parent, "animation", "animation-id").AnimationId;
local l__RunService__9 = v2.RunService;
local l__Players__10 = v2.Players;
local l__PhysicsService__11 = v2.PhysicsService;
local l__BlockEngineRemotes__12 = v1.import(script, script.Parent.Parent, "remotes").BlockEngineRemotes;
function v3.constructor(p1)
	p1.blockDamageHook = l__SyncEvent__1.new(l__BlockDamageHook__2);
	p1.blockBreakableHook = l__SyncEvent__1.new(l__BlockBreakableHook__3);
	p1.blocksFolder = u4("Folder", {
		Name = "Blocks"
	});
	p1.handlerRegistry = l__HandlerRegistry__5.new();
	p1.store = l__BasicBlockStore__6.new(p1.handlerRegistry);
	p1.animationController = l__AnimationController__7.new();
	p1.animationController:setAssetId(l__AnimationId__8.PLACE_BLOCK, "rbxassetid://4866397461");
	p1.animationController:setAssetId(l__AnimationId__8.BREAK_BLOCK, "rbxassetid://6322507715");
	function p1.createBlockHandlerCallback(p2)
		return nil;
	end;
	if l__RunService__9:IsServer() and (not l__RunService__9:IsClient() or l__Players__10.LocalPlayer ~= nil) and l__RunService__9:IsRunning() then
		v1.try(function()
			l__PhysicsService__11:CreateCollisionGroup("Players");
			l__PhysicsService__11:CreateCollisionGroup("Blocks");
			l__PhysicsService__11:CreateCollisionGroup("BlockParticles");
			l__PhysicsService__11:CreateCollisionGroup("FallingBlocks");
		end, function(p3)

		end);
		l__PhysicsService__11:CollisionGroupSetCollidable("Players", "Players", false);
		l__PhysicsService__11:CollisionGroupSetCollidable("BlockParticles", "Players", false);
		l__PhysicsService__11:CollisionGroupSetCollidable("FallingBlocks", "FallingBlocks", false);
		l__BlockEngineRemotes__12.Server:Create("SetBlocksBreakable");
	end;
end;
function v3.watchSourceFolder(p4, p5)
	p5.ChildAdded:Connect(function(p6)
		p4:processSourceBlock(p6);
	end);
	for v5, v6 in ipairs(p5:GetChildren()) do
		p4:processSourceBlock(v6);
	end;
end;
local l__PrefabBlockHandler__13 = v1.import(script, script.Parent, "handler", "handlers", "prefab-block-handler").PrefabBlockHandler;
local l__BreakBlockDamageType__14 = v1.import(script, script.Parent, "block", "block-meta").BreakBlockDamageType;
function v3.processSourceBlock(p7, p8)
	local l__Root__7 = p8:Clone():FindFirstChild("Root");
	l__Root__7.Name = p8.Name;
	l__Root__7.Parent = p7.blocksFolder;
	if l__RunService__9:IsServer() and l__RunService__9:IsRunning() then
		l__PhysicsService__11:SetPartCollisionGroup(l__Root__7, "Blocks");
	end;
	local v8 = p8:GetAttribute("EncodeId");
	if v8 == nil then
		v8 = -1;
	end;
	p7:getHandlerRegistry():registerHandler(p7.createBlockHandlerCallback(p8.Name, v8, l__Root__7) or l__PrefabBlockHandler__13.new(p8.Name, v8, {
		placeSound = function()
			return {};
		end, 
		breakSound = function()
			return {};
		end, 
		breakType = l__BreakBlockDamageType__14.WOOD
	}, l__Root__7));
end;
function v3.snapPosition(p9, p10)
	return Vector3.new(math.round(p10.X), math.round(p10.Y), math.round(p10.Z));
end;
local l__PositionUtil__15 = v1.import(script, script.Parent, "lib", "position-util").PositionUtil;
function v3.getBlockPosition(p11, p12)
	return l__PositionUtil__15.convertToBlockPosition(p12);
end;
function v3.getWorldPosition(p13, p14)
	return l__PositionUtil__15.convertToWorldPosition(p14);
end;
local l__Workspace__16 = v2.Workspace;
local l__GreedyBlockHandler__17 = v1.import(script, script.Parent, "handler", "handlers", "greedy", "greedy-block-handler").GreedyBlockHandler;
local l__HttpService__18 = v2.HttpService;
local l__CollectionService__19 = v2.CollectionService;
function v3.placeBlock(p15, p16, p17, p18)
	local v9 = p18;
	if v9 ~= nil then
		v9 = v9.parent;
	end;
	local v10 = v9;
	if v10 == nil then
		v10 = l__Workspace__16;
	end;
	local v11 = p15:snapPosition(p17);
	local v12 = p15.handlerRegistry:getHandler(p16);
	if not v12 then
		return;
	end;
	local v13 = p18;
	if v13 ~= nil then
		v13 = v13.greedy;
	end;
	if v13 and v1.instanceof(v12, l__GreedyBlockHandler__17) then
		local v14 = p18;
		if v14 ~= nil then
			v14 = v14.data;
		end;
		local v15 = v14;
		if v15 == nil then
			v15 = 0;
		end;
		local v16 = v12:place(v11, v15);
		v12:resize(v16, p17, p18.greedy.size);
	else
		local v17 = p18;
		if v17 ~= nil then
			v17 = v17.data;
		end;
		local v18 = v17;
		if v18 == nil then
			v18 = 0;
		end;
		v16 = v12:place(v11, v18);
	end;
	v16:SetAttribute("Block", true);
	local v19 = p18;
	if v19 ~= nil then
		v19 = v19.player;
		if v19 ~= nil then
			v19 = v19.UserId;
		end;
	end;
	local v20 = v19;
	if v20 == nil then
		v20 = 0;
	end;
	v16:SetAttribute("PlacedByUserId", v20);
	local v21 = p18;
	if v21 ~= nil then
		v21 = v21.blockUUID;
	end;
	local v22 = v21;
	if v22 == nil then
		v22 = l__HttpService__18:GenerateGUID(false);
	end;
	v16:SetAttribute("BlockUUID", v22);
	v16:SetAttribute("PlacedAt", os.time());
	if l__RunService__9:IsServer() then
		v16:SetAttribute("ServerPlaced", true);
	else
		v16:SetAttribute("ClientPlaced", true);
	end;
	local v23 = p18;
	if v23 ~= nil then
		v23 = v23.skipStore;
	end;
	if not v23 then
		for v24, v25 in ipairs((v12:getContainedPositions(v16))) do
			p15.store:setBlock(v25, v16);
		end;
	end;
	local v26 = p18;
	if v26 ~= nil then
		v26 = v26.skipCulling;
	end;
	if not v26 then
		local v27 = {};
		if v1.instanceof(v12, l__GreedyBlockHandler__17) then
			local u20 = v12:getContainedPositions(v16);
			for v28, v29 in ipairs((Enum.NormalId:GetEnumItems())) do
				local v30 = v12:checkCulling(p15.store, p15.handlerRegistry, v16, v29, u20);
			end;
			v27[v16] = true;
		end;
		local v31, v32, v33 = ipairs(Enum.NormalId:GetEnumItems());
		while true do
			local v34, v35 = v31(v32, v33);
			if not v34 then
				break;
			end;
			local v36 = {};
			local v37 = 0;
			for v38, v39 in ipairs((v12:getAdjacentBlockPositions(v16, v35, (v12:getContainedPositions(v16))))) do
				local v40 = p15.store:getBlockAt(v39);
				if v40 ~= nil then
					v37 = v37 + 1;
					v36[v37] = v40;
				end;
			end;
			local v41 = {};
			local v42 = 0;
			local v43, v44, v45 = ipairs(v36);
			while true do
				local v46, v47 = v43(v44, v45);
				if not v46 then
					break;
				end;
				if v27[v47] == nil == true then
					v42 = v42 + 1;
					v41[v42] = v47;
				end;			
			end;
			local function v48(p19)
				local v49 = p15.handlerRegistry:getHandler(p19.Name);
				if v1.instanceof(v49, l__GreedyBlockHandler__17) then
					local u21 = v49:getContainedPositions(p19);
					for v50, v51 in ipairs((Enum.NormalId:GetEnumItems())) do
						local v52 = v49:checkCulling(p15.store, p15.handlerRegistry, p19, v51, u21);
					end;
					v27[v16] = true;
				end;
			end;
			for v53, v54 in ipairs(v41) do
				v48(v54, v53 - 1, v41);
			end;		
		end;
	end;
	local v55 = v12:getBlockMeta().health;
	if v55 == nil then
		v55 = 10;
	end;
	v16:SetAttribute("Health", v55);
	v16:SetAttribute("MaxHealth", v55);
	local v56 = p18;
	if v56 ~= nil then
		v56 = v56.skipBlockData;
	end;
	if not v56 and l__RunService__9:IsServer() then
		p15:getStore():createBlockData(p17);
	end;
	v16.Parent = v10;
	local v57 = p18;
	if v57 ~= nil then
		v57 = v57.skipStore;
	end;
	if not v57 then
		l__CollectionService__19:AddTag(v16, "block");
	end;
	local v58 = v12:getBlockMeta();
	local v59 = v58;
	if v59 ~= nil then
		v59 = v59.collectionServiceTags;
	end;
	if v59 then
		for v60, v61 in ipairs(v58.collectionServiceTags) do
			l__CollectionService__19:AddTag(v16, v61);
		end;
	end;
	return v16;
end;
local u22 = v1.import(script, script.Parent.Parent, "server", "block-engine-server-events").BlockEngineServerSyncEvents;
function v3.destroyBlock(p20, p21, p22)
	local v62 = p20.store:getBlockAt(p21.blockPosition);
	if v62 then
		local v63 = p22;
		if v63 ~= nil then
			v63 = v63.destroyingPlayer;
		end;
		u22.DestroyBlock:fire(p21, v62.Name, v63);
		local v64 = p20.handlerRegistry:getHandler(v62.Name);
		if v64 then
			if l__RunService__9:IsServer() then
				p20:getStore():deleteBlockData(p21.blockPosition);
			end;
			local v65 = p22;
			if v65 ~= nil then
				v65 = v65.skipStore;
			end;
			if not v65 then
				for v66, v67 in ipairs((v64:getContainedPositions(v62))) do
					p20.store:setBlock(v67, nil);
				end;
			end;
			local v68 = p22;
			if v68 ~= nil then
				v68 = v68.skipCulling;
			end;
			if v68 ~= true then
				local v69 = {};
				if v1.instanceof(v64, l__GreedyBlockHandler__17) then
					local u23 = v64:getContainedPositions(v62);
					for v70, v71 in ipairs((Enum.NormalId:GetEnumItems())) do
						local v72 = v64:checkCulling(p20.store, p20.handlerRegistry, v62, v71, u23);
					end;
					v69[v62] = true;
				end;
				local v73, v74, v75 = ipairs(Enum.NormalId:GetEnumItems());
				while true do
					local v76, v77 = v73(v74, v75);
					if not v76 then
						break;
					end;
					local v78 = {};
					local v79 = 0;
					for v80, v81 in ipairs((v64:getAdjacentBlockPositions(v62, v77, (v64:getContainedPositions(v62))))) do
						local v82 = p20.store:getBlockAt(v81);
						if v82 ~= nil then
							v79 = v79 + 1;
							v78[v79] = v82;
						end;
					end;
					local v83 = {};
					local v84 = 0;
					local v85, v86, v87 = ipairs(v78);
					while true do
						local v88, v89 = v85(v86, v87);
						if not v88 then
							break;
						end;
						if v69[v89] == nil == true then
							v84 = v84 + 1;
							v83[v84] = v89;
						end;					
					end;
					local function v90(p23)
						local v91 = p20.handlerRegistry:getHandler(p23.Name);
						if v1.instanceof(v91, l__GreedyBlockHandler__17) then
							local u24 = v91:getContainedPositions(p23);
							for v92, v93 in ipairs((Enum.NormalId:GetEnumItems())) do
								local v94 = v91:checkCulling(p20.store, p20.handlerRegistry, p23, v93, u24);
							end;
							v69[v62] = true;
						end;
					end;
					for v95, v96 in ipairs(v83) do
						v90(v96, v95 - 1, v83);
					end;				
				end;
			end;
			v64:destroy(v62);
		end;
	end;
end;
function v3.getHandlerRegistry(p24)
	return p24.handlerRegistry;
end;
function v3.getBlockInstanceFromChild(p25, p26)
	if p26:GetAttribute("Block") == true then
		return p26;
	end;
	if not p26.Parent then
		return nil;
	end;
	return p25:getBlockInstanceFromChild(p26.Parent);
end;
local l__BLOCK_SIZE__25 = v1.import(script, script.Parent, "block", "block-constants").BLOCK_SIZE;
function v3.isAllowedPlacement(p27, p28, p29, p30, p31)
	local v97 = p27.handlerRegistry:getHandler(p29);
	if not v97 then
		return false;
	end;
	local v98 = v97:getPlacementPositions(p30, p31);
	if l__RunService__9:IsClient() then
		local v99 = p28.Character;
		if v99 ~= nil then
			v99 = v99:FindFirstChild("Head");
		end;
		if v99 then
			for v100, v101 in ipairs(v98) do
				if #l__Workspace__16:FindPartsInRegion3WithWhiteList(Region3.new(p27:getWorldPosition(v101) - Vector3.new(l__BLOCK_SIZE__25 / 2, l__BLOCK_SIZE__25 / 2, l__BLOCK_SIZE__25 / 2), p27:getWorldPosition(v101) + Vector3.new(l__BLOCK_SIZE__25 / 2, l__BLOCK_SIZE__25 / 2, l__BLOCK_SIZE__25 / 2)), { v99 }, 1) > 0 then
					print("placed in head.");
					return false;
				end;
			end;
		end;
	end;
	for v102, v103 in ipairs(v98) do
		if p27.store:getBlockAt(v103) ~= nil then
			return false;
		end;
	end;
	return true;
end;
function v3.getStore(p32)
	return p32.store;
end;
function v3.getAnimationController(p33)
	return p33.animationController;
end;
function v3.hookCreateSourceBlockHandler(p34, p35)
	p34.createBlockHandlerCallback = p35;
end;
function v3.calculateBlockDamage(p36, p37, p38)
	if not p37.Character then
		return 0;
	end;
	return p36.blockDamageHook:fire(p37, p38, 2).damage;
end;
function v3.getBlockDamageHook(p39)
	return p39.blockDamageHook;
end;
function v3.getBlockBreakableHook(p40)
	return p40.blockBreakableHook;
end;
function v3.isBlockBreakable(p41, p42, p43)
	local v104 = p41.store:getBlockAt(p42.blockPosition);
	if v104 and v104:GetAttribute("NoBreak") == true then
		return false;
	end;
	return not p41.blockBreakableHook:fire(p42, p43):isCancelled();
end;
return {
	BlockEngine = v3
};
