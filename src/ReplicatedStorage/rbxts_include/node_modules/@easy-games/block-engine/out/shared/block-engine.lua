-- Decompiled with the Synapse X Luau decompiler.

local v1 = _G[script];
local v2 = v1.import(script, v1.getModule(script, "@rbxts", "services"));
local v3 = setmetatable({}, {
	__tostring = function()
		return "BlockEngine";
	end
});
v3.__index = v3;
function v3.new(...)
	local v4 = setmetatable({}, v3);
	return v4:constructor(...) and v4;
end;
local l__SyncEvent__1 = v1.import(script, v1.getModule(script, "@easy-games", "sync-event").out).SyncEvent;
local l__BlockDamageHook__2 = v1.import(script, script.Parent, "hooks", "block-damage-hook").BlockDamageHook;
local l__BlockBreakableHook__3 = v1.import(script, script.Parent, "hooks", "block-breakable-hook").BlockBreakableHook;
local u4 = v1.import(script, v1.getModule(script, "@rbxts", "make"));
local l__HandlerRegistry__5 = v1.import(script, script.Parent, "handler", "handler-registry").HandlerRegistry;
local l__BasicBlockStore__6 = v1.import(script, script.Parent, "store", "basic-block-store").BasicBlockStore;
local l__AnimationController__7 = v1.import(script, script.Parent, "animation", "animation-controller").AnimationController;
local l__AnimationId__8 = v1.import(script, script.Parent, "animation", "animation-id").AnimationId;
local l__RunService__9 = v2.RunService;
local l__Players__10 = v2.Players;
local l__PhysicsService__11 = v2.PhysicsService;
local l__BlockEngineRemotes__12 = v1.import(script, script.Parent.Parent, "remotes").BlockEngineRemotes;
function v3.constructor(p1)
	p1.blockDamageHook = l__SyncEvent__1.new(l__BlockDamageHook__2);
	p1.blockBreakableHook = l__SyncEvent__1.new(l__BlockBreakableHook__3);
	p1.blocksFolder = u4("Folder", {
		Name = "Blocks"
	});
	p1.handlerRegistry = l__HandlerRegistry__5.new();
	p1.store = l__BasicBlockStore__6.new(p1.handlerRegistry);
	p1.animationController = l__AnimationController__7.new();
	p1.animationController:setAssetId(l__AnimationId__8.PLACE_BLOCK, "rbxassetid://4866397461");
	p1.animationController:setAssetId(l__AnimationId__8.BREAK_BLOCK, "rbxassetid://6322507715");
	function p1.createBlockHandlerCallback(p2)
		return nil;
	end;
	if l__RunService__9:IsServer() and (not l__RunService__9:IsClient() or l__Players__10.LocalPlayer ~= nil) and l__RunService__9:IsRunning() then
		v1.try(function()
			l__PhysicsService__11:CreateCollisionGroup("Players");
			l__PhysicsService__11:CreateCollisionGroup("Blocks");
			l__PhysicsService__11:CreateCollisionGroup("BlockParticles");
			l__PhysicsService__11:CreateCollisionGroup("FallingBlocks");
		end, function(p3)

		end);
		l__PhysicsService__11:CollisionGroupSetCollidable("Players", "Players", false);
		l__PhysicsService__11:CollisionGroupSetCollidable("BlockParticles", "Players", false);
		l__PhysicsService__11:CollisionGroupSetCollidable("FallingBlocks", "FallingBlocks", false);
		l__BlockEngineRemotes__12.Server:Create("SetBlocksBreakable");
	end;
end;
function v3.watchSourceFolder(p4, p5)
	p5.ChildAdded:Connect(function(p6)
		p4:processSourceBlock(p6);
	end);
	for v5, v6 in ipairs(p5:GetChildren()) do
		p4:processSourceBlock(v6);
	end;
end;
local l__PrefabBlockHandler__13 = v1.import(script, script.Parent, "handler", "handlers", "prefab-block-handler").PrefabBlockHandler;
local l__BreakBlockDamageType__14 = v1.import(script, script.Parent, "block", "block-meta").BreakBlockDamageType;
function v3.processSourceBlock(p7, p8)
	local l__Root__7 = p8:Clone():FindFirstChild("Root");
	l__Root__7.Name = p8.Name;
	l__Root__7.Parent = p7.blocksFolder;
	if l__RunService__9:IsServer() and l__RunService__9:IsRunning() then
		l__PhysicsService__11:SetPartCollisionGroup(l__Root__7, "Blocks");
	end;
	local v8 = p8:GetAttribute("EncodeId");
	if v8 == nil then
		v8 = -1;
	end;
	p7:getHandlerRegistry():registerHandler(p7.createBlockHandlerCallback(p8.Name, v8, l__Root__7) or l__PrefabBlockHandler__13.new(p8.Name, v8, {
		placeSound = function()
			return {};
		end, 
		breakSound = function()
			return {};
		end, 
		breakType = l__BreakBlockDamageType__14.WOOD
	}, l__Root__7));
end;
function v3.snapPosition(p9, p10)
	return Vector3.new(math.round(p10.X), math.round(p10.Y), math.round(p10.Z));
end;
local l__PositionUtil__15 = v1.import(script, script.Parent, "lib", "position-util").PositionUtil;
function v3.getBlockPosition(p11, p12)
	return l__PositionUtil__15.convertToBlockPosition(p12);
end;
function v3.getWorldPosition(p13, p14)
	return l__PositionUtil__15.convertToWorldPosition(p14);
end;
local l__Workspace__16 = v2.Workspace;
local l__GreedyBlockHandler__17 = v1.import(script, script.Parent, "handler", "handlers", "greedy", "greedy-block-handler").GreedyBlockHandler;
local l__HttpService__18 = v2.HttpService;
local l__CollectionService__19 = v2.CollectionService;
function v3.placeBlock(p15, p16, p17, p18)
	local v9 = p18;
	if v9 ~= nil then
		v9 = v9.parent;
	end;
	local v10 = v9;
	if v10 == nil then
		v10 = l__Workspace__16;
	end;
	local v11 = p15:snapPosition(p17);
	local v12 = p15.handlerRegistry:getHandler(p16);
	if not v12 then
		return;
	end;
	local v13 = p18;
	if v13 ~= nil then
		v13 = v13.greedy;
	end;
	if v13 and v1.instanceof(v12, l__GreedyBlockHandler__17) then
		local v14 = p18;
		if v14 ~= nil then
			v14 = v14.data;
		end;
		local v15 = v14;
		if v15 == nil then
			v15 = 0;
		end;
		local v16 = v12:place(v11, v15);
		v12:resize(v16, p17, p18.greedy.size);
	else
		local v17 = p18;
		if v17 ~= nil then
			v17 = v17.data;
		end;
		local v18 = v17;
		if v18 == nil then
			v18 = 0;
		end;
		v16 = v12:place(v11, v18);
	end;
	v16:SetAttribute("Block", true);
	local v19 = p18;
	if v19 ~= nil then
		v19 = v19.player;
		if v19 ~= nil then
			v19 = v19.UserId;
		end;
	end;
	local v20 = v19;
	if v20 == nil then
		v20 = 0;
	end;
	v16:SetAttribute("PlacedByUserId", v20);
	local v21 = p18;
	if v21 ~= nil then
		v21 = v21.blockUUID;
	end;
	local v22 = v21;
	if v22 == nil then
		v22 = l__HttpService__18:GenerateGUID(false);
	end;
	v16:SetAttribute("BlockUUID", v22);
	v16:SetAttribute("PlacedAt", os.time());
	if l__RunService__9:IsServer() then
		v16:SetAttribute("ServerPlaced", true);
	else
		v16:SetAttribute("ClientPlaced", true);
	end;
	local v23 = p18;
	if v23 ~= nil then
		v23 = v23.skipStore;
	end;
	if not v23 then
		for v24, v25 in ipairs((v12:getContainedPositions(v16))) do
			p15.store:setBlock(v25, v16);
		end;
	end;
	local v26 = p18;
	if v26 ~= nil then
		v26 = v26.skipCulling;
	end;
	if not v26 then
		local v27 = {};
		if v1.instanceof(v12, l__GreedyBlockHandler__17) then
			local v28 = Enum.NormalId:GetEnumItems();
			local u20 = v12:getContainedPositions(v16);
			local function v29(p19)
				return v12:checkCulling(p15.store, p15.handlerRegistry, v16, p19, u20);
			end;
			for v30, v31 in ipairs(v28) do
				v29(v31, v30 - 1, v28);
			end;
			v27[v16] = true;
		end;
		local v32, v33, v34 = ipairs(Enum.NormalId:GetEnumItems());
		while true do
			local v35, v36 = v32(v33, v34);
			if not v35 then
				break;
			end;
			local v37 = v12:getAdjacentBlockPositions(v16, v36, (v12:getContainedPositions(v16)));
			local function v38(p20)
				return p15.store:getBlockAt(p20);
			end;
			local v39 = {};
			local v40 = 0;
			for v41, v42 in ipairs(v37) do
				local v43 = v38(v42, v41 - 1, v37);
				if v43 ~= nil then
					v40 = v40 + 1;
					v39[v40] = v43;
				end;
			end;
			local function v44(p21)
				return v27[p21] == nil;
			end;
			local v45 = {};
			local v46 = 0;
			for v47, v48 in ipairs(v39) do
				if v44(v48, v47 - 1, v39) == true then
					v46 = v46 + 1;
					v45[v46] = v48;
				end;
			end;
			local function v49(p22)
				local v50 = p15.handlerRegistry:getHandler(p22.Name);
				if v1.instanceof(v50, l__GreedyBlockHandler__17) then
					local v51 = Enum.NormalId:GetEnumItems();
					local u21 = v50:getContainedPositions(p22);
					local function v52(p23)
						return v50:checkCulling(p15.store, p15.handlerRegistry, p22, p23, u21);
					end;
					for v53, v54 in ipairs(v51) do
						v52(v54, v53 - 1, v51);
					end;
					v27[v16] = true;
				end;
			end;
			for v55, v56 in ipairs(v45) do
				v49(v56, v55 - 1, v45);
			end;		
		end;
	end;
	local v57 = v12:getBlockMeta().health;
	if v57 == nil then
		v57 = 10;
	end;
	v16:SetAttribute("Health", v57);
	v16:SetAttribute("MaxHealth", v57);
	local v58 = p18;
	if v58 ~= nil then
		v58 = v58.skipBlockData;
	end;
	if not v58 and l__RunService__9:IsServer() then
		p15:getStore():createBlockData(p17);
	end;
	v16.Parent = v10;
	local v59 = p18;
	if v59 ~= nil then
		v59 = v59.skipStore;
	end;
	if not v59 then
		l__CollectionService__19:AddTag(v16, "block");
	end;
	local v60 = v12:getBlockMeta();
	local v61 = v60;
	if v61 ~= nil then
		v61 = v61.collectionServiceTags;
	end;
	if v61 then
		for v62, v63 in ipairs(v60.collectionServiceTags) do
			l__CollectionService__19:AddTag(v16, v63);
		end;
	end;
	return v16;
end;
function v3.destroyBlock(p24, p25, p26)
	local v64 = p24.store:getBlockAt(p25.blockPosition);
	if v64 then
		local v65 = p24.handlerRegistry:getHandler(v64.Name);
		if v65 then
			if l__RunService__9:IsServer() then
				p24:getStore():deleteBlockData(p25.blockPosition);
			end;
			local v66 = p26;
			if v66 ~= nil then
				v66 = v66.skipStore;
			end;
			if not v66 then
				for v67, v68 in ipairs((v65:getContainedPositions(v64))) do
					p24.store:setBlock(v68, nil);
				end;
			end;
			local v69 = p26;
			if v69 ~= nil then
				v69 = v69.skipCulling;
			end;
			if v69 ~= true then
				local v70 = {};
				if v1.instanceof(v65, l__GreedyBlockHandler__17) then
					local v71 = Enum.NormalId:GetEnumItems();
					local u22 = v65:getContainedPositions(v64);
					local function v72(p27)
						return v65:checkCulling(p24.store, p24.handlerRegistry, v64, p27, u22);
					end;
					for v73, v74 in ipairs(v71) do
						v72(v74, v73 - 1, v71);
					end;
					v70[v64] = true;
				end;
				local v75, v76, v77 = ipairs(Enum.NormalId:GetEnumItems());
				while true do
					local v78, v79 = v75(v76, v77);
					if not v78 then
						break;
					end;
					local v80 = v65:getAdjacentBlockPositions(v64, v79, (v65:getContainedPositions(v64)));
					local function v81(p28)
						return p24.store:getBlockAt(p28);
					end;
					local v82 = {};
					local v83 = 0;
					for v84, v85 in ipairs(v80) do
						local v86 = v81(v85, v84 - 1, v80);
						if v86 ~= nil then
							v83 = v83 + 1;
							v82[v83] = v86;
						end;
					end;
					local function v87(p29)
						return v70[p29] == nil;
					end;
					local v88 = {};
					local v89 = 0;
					for v90, v91 in ipairs(v82) do
						if v87(v91, v90 - 1, v82) == true then
							v89 = v89 + 1;
							v88[v89] = v91;
						end;
					end;
					local function v92(p30)
						local v93 = p24.handlerRegistry:getHandler(p30.Name);
						if v1.instanceof(v93, l__GreedyBlockHandler__17) then
							local v94 = Enum.NormalId:GetEnumItems();
							local u23 = v93:getContainedPositions(p30);
							local function v95(p31)
								return v93:checkCulling(p24.store, p24.handlerRegistry, p30, p31, u23);
							end;
							for v96, v97 in ipairs(v94) do
								v95(v97, v96 - 1, v94);
							end;
							v70[v64] = true;
						end;
					end;
					for v98, v99 in ipairs(v88) do
						v92(v99, v98 - 1, v88);
					end;				
				end;
			end;
			v65:destroy(v64);
		end;
	end;
end;
function v3.getHandlerRegistry(p32)
	return p32.handlerRegistry;
end;
function v3.getBlockInstanceFromChild(p33, p34)
	if p34:GetAttribute("Block") == true then
		return p34;
	end;
	if not p34.Parent then
		return nil;
	end;
	return p33:getBlockInstanceFromChild(p34.Parent);
end;
local l__BLOCK_SIZE__24 = v1.import(script, script.Parent, "block", "block-constants").BLOCK_SIZE;
function v3.isAllowedPlacement(p35, p36, p37, p38, p39)
	local v100 = p35.handlerRegistry:getHandler(p37);
	if not v100 then
		return false;
	end;
	local v101 = v100:getPlacementPositions(p38, p39);
	if l__RunService__9:IsClient() then
		local v102 = p36.Character;
		if v102 ~= nil then
			v102 = v102:FindFirstChild("Head");
		end;
		if v102 then
			for v103, v104 in ipairs(v101) do
				if #l__Workspace__16:FindPartsInRegion3WithWhiteList(Region3.new(p35:getWorldPosition(v104) - Vector3.new(l__BLOCK_SIZE__24 / 2, l__BLOCK_SIZE__24 / 2, l__BLOCK_SIZE__24 / 2), p35:getWorldPosition(v104) + Vector3.new(l__BLOCK_SIZE__24 / 2, l__BLOCK_SIZE__24 / 2, l__BLOCK_SIZE__24 / 2)), { v102 }, 1) > 0 then
					print("placed in head.");
					return false;
				end;
			end;
		end;
	end;
	for v105, v106 in ipairs(v101) do
		if p35.store:getBlockAt(v106) ~= nil then
			return false;
		end;
	end;
	return true;
end;
function v3.getStore(p40)
	return p40.store;
end;
function v3.getAnimationController(p41)
	return p41.animationController;
end;
function v3.hookCreateSourceBlockHandler(p42, p43)
	p42.createBlockHandlerCallback = p43;
end;
function v3.calculateBlockDamage(p44, p45, p46)
	if not p45.Character then
		return 0;
	end;
	return p44.blockDamageHook:fire(p45, p46, 2).damage;
end;
function v3.getBlockDamageHook(p47)
	return p47.blockDamageHook;
end;
function v3.getBlockBreakableHook(p48)
	return p48.blockBreakableHook;
end;
function v3.isBlockBreakable(p49, p50, p51)
	local v107 = p49.store:getBlockAt(p50.blockPosition);
	if v107 and v107:GetAttribute("NoBreak") == true then
		return false;
	end;
	return not p49.blockBreakableHook:fire(p50, p51):isCancelled();
end;
return {
	BlockEngine = v3
};
