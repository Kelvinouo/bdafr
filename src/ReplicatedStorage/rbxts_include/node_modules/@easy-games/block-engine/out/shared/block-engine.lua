-- Decompiled with the Synapse X Luau decompiler.

local v1 = _G[script];
local v2 = v1.import(script, v1.getModule(script, "@rbxts", "services"));
local v3 = setmetatable({}, {
	__tostring = function()
		return "BlockEngine";
	end
});
v3.__index = v3;
function v3.new(...)
	local v4 = setmetatable({}, v3);
	return v4:constructor(...) and v4;
end;
local l__SyncEvent__1 = v1.import(script, v1.getModule(script, "@easy-games", "sync-event").out).SyncEvent;
local l__BlockDamageHook__2 = v1.import(script, script.Parent, "hooks", "block-damage-hook").BlockDamageHook;
local l__BlockBreakableHook__3 = v1.import(script, script.Parent, "hooks", "block-breakable-hook").BlockBreakableHook;
local u4 = v1.import(script, v1.getModule(script, "@rbxts", "make"));
local l__HandlerRegistry__5 = v1.import(script, script.Parent, "handler", "handler-registry").HandlerRegistry;
local l__BasicBlockStore__6 = v1.import(script, script.Parent, "store", "basic-block-store").BasicBlockStore;
local l__AnimationController__7 = v1.import(script, script.Parent, "animation", "animation-controller").AnimationController;
local l__AnimationId__8 = v1.import(script, script.Parent, "animation", "animation-id").AnimationId;
local l__RunService__9 = v2.RunService;
local l__Players__10 = v2.Players;
local l__ServerStorage__11 = v2.ServerStorage;
local l__PhysicsService__12 = v2.PhysicsService;
local l__BlockEngineRemotes__13 = v1.import(script, script.Parent.Parent, "remotes").BlockEngineRemotes;
function v3.constructor(p1)
	p1.blockDamageHook = l__SyncEvent__1.new(l__BlockDamageHook__2);
	p1.blockBreakableHook = l__SyncEvent__1.new(l__BlockBreakableHook__3);
	p1.blocksFolder = u4("Folder", {
		Name = "Blocks"
	});
	p1.serverBlockWorldModel = u4("WorldModel", {
		Name = "Blocks"
	});
	p1.worldModelBlockParents = {};
	p1.handlerRegistry = l__HandlerRegistry__5.new();
	p1.store = l__BasicBlockStore__6.new(p1.handlerRegistry);
	p1.animationController = l__AnimationController__7.new();
	p1.animationController:setAssetId(l__AnimationId__8.PLACE_BLOCK, "rbxassetid://4866397461");
	p1.animationController:setAssetId(l__AnimationId__8.BREAK_BLOCK, "rbxassetid://6322507715");
	function p1.createBlockHandlerCallback(p2)
		return nil;
	end;
	if l__RunService__9:IsServer() then
		l__RunService__9.Heartbeat:Connect(function()
			local v5 = #p1.serverBlockWorldModel:GetChildren();
			if v5 > 0 then
				print("Transferring over " .. tostring(v5) .. " blocks!");
			end;
			local v6, v7, v8 = ipairs(p1.serverBlockWorldModel:GetChildren());
			while true do
				v6(v7, v8);
				if not v6 then
					break;
				end;
				v8 = v6;
				v7.Parent = p1.worldModelBlockParents[v7];			
			end;
			table.clear(p1.worldModelBlockParents);
		end);
	end;
	if l__RunService__9:IsServer() and (not l__RunService__9:IsClient() or l__Players__10.LocalPlayer ~= nil) then
		p1.serverBlockWorldModel.Parent = l__ServerStorage__11;
		if l__RunService__9:IsRunning() then
			v1.try(function()
				l__PhysicsService__12:CreateCollisionGroup("Players");
			end, function(p3)

			end);
			v1.try(function()
				l__PhysicsService__12:CreateCollisionGroup("Blocks");
			end, function(p4)

			end);
			v1.try(function()
				l__PhysicsService__12:CreateCollisionGroup("BlockParticles");
			end, function(p5)

			end);
			v1.try(function()
				l__PhysicsService__12:CreateCollisionGroup("FallingBlocks");
			end, function(p6)

			end);
			l__PhysicsService__12:CollisionGroupSetCollidable("Players", "Players", false);
			l__PhysicsService__12:CollisionGroupSetCollidable("BlockParticles", "Players", false);
			l__PhysicsService__12:CollisionGroupSetCollidable("FallingBlocks", "FallingBlocks", false);
			l__BlockEngineRemotes__13.Server:Create("SetBlocksBreakable");
		end;
	end;
end;
function v3.watchSourceFolder(p7, p8)
	p8.ChildAdded:Connect(function(p9)
		p7:processSourceBlock(p9);
	end);
	local v9, v10, v11 = ipairs(p8:GetChildren());
	while true do
		v9(v10, v11);
		if not v9 then
			break;
		end;
		v11 = v9;
		p7:processSourceBlock(v10);	
	end;
end;
local l__PrefabBlockHandler__14 = v1.import(script, script.Parent, "handler", "handlers", "prefab-block-handler").PrefabBlockHandler;
local l__BreakBlockDamageType__15 = v1.import(script, script.Parent, "block", "block-meta").BreakBlockDamageType;
function v3.processSourceBlock(p10, p11)
	local l__Root__12 = p11:Clone():FindFirstChild("Root");
	l__Root__12.Name = p11.Name;
	l__Root__12.Parent = p10.blocksFolder;
	if l__RunService__9:IsServer() and l__RunService__9:IsRunning() then
		l__PhysicsService__12:SetPartCollisionGroup(l__Root__12, "Blocks");
	end;
	local v13 = p11:GetAttribute("EncodeId");
	if v13 == nil then
		v13 = -1;
	end;
	p10:getHandlerRegistry():registerHandler(p10.createBlockHandlerCallback(p11.Name, v13, l__Root__12) or l__PrefabBlockHandler__14.new(p11.Name, v13, {
		placeSound = function()
			return {};
		end, 
		breakSound = function()
			return {};
		end, 
		breakType = l__BreakBlockDamageType__15.WOOD
	}, l__Root__12));
end;
function v3.snapPosition(p12, p13)
	return Vector3.new(math.round(p13.X), math.round(p13.Y), math.round(p13.Z));
end;
local l__PositionUtil__16 = v1.import(script, script.Parent, "lib", "position-util").PositionUtil;
function v3.getBlockPosition(p14, p15)
	return l__PositionUtil__16.convertToBlockPosition(p15);
end;
function v3.getWorldPosition(p16, p17)
	return l__PositionUtil__16.convertToWorldPosition(p17);
end;
local l__Workspace__17 = v2.Workspace;
local l__GameQueryUtil__18 = v1.import(script, v1.getModule(script, "@easy-games", "game-core").out).GameQueryUtil;
function v3.serverRaycast(p18, p19, p20, p21)
	local v14 = nil;
	local v15, v16, v17 = ipairs({ l__Workspace__17, p18.serverBlockWorldModel });
	while true do
		v15(v16, v17);
		if not v15 then
			break;
		end;
		if v16 == p18.serverBlockWorldModel then
			p21.CollisionGroup = "";
		end;
		l__GameQueryUtil__18:raycast(p19, p20, p21, {
			world = v16
		});
		local v18 = v16:Raycast(p19, p20, p21);
		if v18 and (not v14 or (v18.Position - p19).Magnitude < (v14.Position - p19).Magnitude) then
			v14 = v18;
		end;	
	end;
	return v14;
end;
local l__GreedyBlockHandler__19 = v1.import(script, script.Parent, "handler", "handlers", "greedy", "greedy-block-handler").GreedyBlockHandler;
local l__HttpService__20 = v2.HttpService;
local l__CollectionService__21 = v2.CollectionService;
function v3.placeBlock(p22, p23, p24, p25)
	debug.profilebegin("place-block");
	local v19 = p25;
	if v19 ~= nil then
		v19 = v19.parent;
	end;
	local v20 = v19;
	if v20 == nil then
		v20 = l__Workspace__17;
	end;
	local v21 = p22:snapPosition(p24);
	local v22 = p22.handlerRegistry:getHandler(p23);
	if not v22 then
		debug.profileend();
		return nil;
	end;
	debug.profilebegin("setup-block");
	local v23 = p25;
	if v23 ~= nil then
		v23 = v23.greedy;
	end;
	if v23 and v1.instanceof(v22, l__GreedyBlockHandler__19) then
		local v24 = p25;
		if v24 ~= nil then
			v24 = v24.data;
		end;
		local v25 = v24;
		if v25 == nil then
			v25 = 0;
		end;
		local v26 = v22:place(v21, v25);
		v22:resize(v26, p24, p25.greedy.size);
	else
		local v27 = p25;
		if v27 ~= nil then
			v27 = v27.data;
		end;
		local v28 = v27;
		if v28 == nil then
			v28 = 0;
		end;
		v26 = v22:place(v21, v28);
	end;
	local v29 = v22:getBlockMeta();
	v26:SetAttribute("Block", true);
	local v30 = p25;
	if v30 ~= nil then
		v30 = v30.player;
		if v30 ~= nil then
			v30 = v30.UserId;
		end;
	end;
	local v31 = v30;
	if v31 == nil then
		v31 = 0;
	end;
	v26:SetAttribute("PlacedByUserId", v31);
	local v32 = p25;
	if v32 ~= nil then
		v32 = v32.blockUUID;
	end;
	local v33 = v32;
	if v33 == nil then
		v33 = l__HttpService__20:GenerateGUID(false);
	end;
	v26:SetAttribute("BlockUUID", v33);
	v26:SetAttribute("PlacedAt", os.time());
	if v29.unbreakable then
		v26:SetAttribute("NoBreak", true);
	end;
	if v29.canReplace then
		v26:SetAttribute("CanReplace", true);
	end;
	if v29.noSuffocation then
		l__CollectionService__21:AddTag(v26, "CanNoclip");
	end;
	if l__RunService__9:IsServer() then
		v26:SetAttribute("ServerPlaced", true);
	else
		v26:SetAttribute("ClientPlaced", true);
	end;
	debug.profileend();
	debug.profilebegin("add-to-store");
	local v34 = p25;
	if v34 ~= nil then
		v34 = v34.skipStore;
	end;
	if not v34 then
		local v35, v36, v37 = ipairs((v22:getContainedPositions(v26)));
		while true do
			v35(v36, v37);
			if not v35 then
				break;
			end;
			v37 = v35;
			p22.store:setBlock(v36, v26);		
		end;
	end;
	debug.profileend();
	debug.profilebegin("face-culling");
	local v38 = p25;
	if v38 ~= nil then
		v38 = v38.skipCulling;
	end;
	if not v38 then
		local v39 = {};
		if v1.instanceof(v22, l__GreedyBlockHandler__19) then
			local v40, v41, v42 = ipairs((Enum.NormalId:GetEnumItems()));
			while true do
				v40(v41, v42);
				if not v40 then
					break;
				end;
				local v43 = p25;
				if v43 ~= nil then
					v43 = v43.predefinedCulling;
					if v43 ~= nil then
						v43 = v43[v41];
					end;
				end;
				if v43 ~= nil then
					v22:setFaceVisible(v26, v41, v43);
				else
					v22:checkCulling(p22.store, p22.handlerRegistry, v26, v41);
				end;			
			end;
			v39[v26] = true;
		end;
		local v44 = p25;
		if v44 ~= nil then
			v44 = v44.skipAdjacentCulling;
		end;
		if not v44 then
			local v45, v46, v47 = ipairs(Enum.NormalId:GetEnumItems());
			while true do
				v45(v46, v47);
				if not v45 then
					break;
				end;
				local v48 = {};
				local v49 = 0;
				local v50, v51, v52 = ipairs((v22:getAdjacentBlockPositions(v26, v46, (v22:getContainedPositions(v26)))));
				while true do
					v50(v51, v52);
					if not v50 then
						break;
					end;
					v52 = v50;
					local v53 = p22.store:getBlockAt(v51);
					if v53 ~= nil then
						v49 = v49 + 1;
						v48[v49] = v53;
					end;				
				end;
				local v54 = {};
				local v55 = 0;
				local v56, v57, v58 = ipairs(v48);
				while true do
					v56(v57, v58);
					if not v56 then
						break;
					end;
					if v39[v57] == nil == true then
						v55 = v55 + 1;
						v54[v55] = v57;
					end;				
				end;
				debug.profilebegin("adjacent-block-loop");
				local v59 = nil;
				local v60, v61, v62 = ipairs((Enum.NormalId:GetEnumItems()));
				while true do
					v60(v61, v62);
					if not v60 then
						break;
					end;
					v62 = v60;
					if (Vector3.FromNormalId(v61) + Vector3.FromNormalId(v46)).Magnitude == 0 == true then
						v59 = v61;
						break;
					end;				
				end;
				local v63, v64, v65 = ipairs(v54);
				while true do
					v63(v64, v65);
					if not v63 then
						break;
					end;
					v65 = v63;
					local v66 = p22.handlerRegistry:getHandler(v64.Name);
					if v1.instanceof(v66, l__GreedyBlockHandler__19) then
						v66:checkCulling(p22.store, p22.handlerRegistry, v64, v59);
						v39[v26] = true;
					end;				
				end;
				debug.profileend();			
			end;
		end;
	end;
	debug.profileend();
	local v67 = v22:getBlockMeta().health;
	if v67 == nil then
		v67 = 10;
	end;
	v26:SetAttribute("Health", v67);
	v26:SetAttribute("MaxHealth", v67);
	local v68 = l__RunService__9:IsServer();
	if v68 then
		local v69 = p25;
		if v69 ~= nil then
			v69 = v69.directToWorkspace;
		end;
		v68 = v69 ~= true;
	end;
	if v68 then
		p22.worldModelBlockParents[v26] = v20;
		v26.Parent = p22.serverBlockWorldModel;
	else
		v26.Parent = v20;
	end;
	local v70 = p25;
	if v70 ~= nil then
		v70 = v70.skipStore;
	end;
	if not v70 then
		l__CollectionService__21:AddTag(v26, "block");
	end;
	local v71 = v29;
	if v71 ~= nil then
		v71 = v71.collectionServiceTags;
	end;
	if v71 then
		local v72, v73, v74 = ipairs(v29.collectionServiceTags);
		while true do
			v72(v73, v74);
			if not v72 then
				break;
			end;
			v74 = v72;
			l__CollectionService__21:AddTag(v26, v73);		
		end;
	end;
	debug.profileend();
	return v26;
end;
local u22 = v1.import(script, script.Parent.Parent, "server", "block-engine-server-events").BlockEngineServerSyncEvents;
local l__BLOCK_SIZE__23 = v1.import(script, script.Parent, "block", "block-constants").BLOCK_SIZE;
function v3.destroyBlock(p26, p27, p28)
	debug.profilebegin("destroy-block");
	local v75 = {};
	local v76 = p26.store:getBlockAt(p27.blockPosition);
	if v76 then
		local v77 = p28;
		if v77 ~= nil then
			v77 = v77.destroyingPlayer;
		end;
		u22.DestroyBlock:fire(p27, v76.Name, v77);
		local v78 = p26.handlerRegistry:getHandler(v76.Name);
		if v78 then
			if l__RunService__9:IsServer() then
				p26:getStore():deleteBlockData(p27.blockPosition);
			end;
			local v79 = p28;
			if v79 ~= nil then
				v79 = v79.skipStore;
			end;
			if not v79 then
				local v80, v81, v82 = ipairs((v78:getContainedPositions(v76)));
				while true do
					v80(v81, v82);
					if not v80 then
						break;
					end;
					v82 = v80;
					p26.store:setBlock(v81, nil);				
				end;
			end;
			local v83 = p28;
			if v83 ~= nil then
				v83 = v83.skipCulling;
			end;
			if v83 ~= true and not v1.instanceof(v78, l__GreedyBlockHandler__19) then
				local v84 = {};
				if v1.instanceof(v78, l__GreedyBlockHandler__19) then
					local v85, v86, v87 = ipairs((Enum.NormalId:GetEnumItems()));
					while true do
						v85(v86, v87);
						if not v85 then
							break;
						end;
						v87 = v85;
						local v88 = v78:checkCulling(p26.store, p26.handlerRegistry, v76, v86);					
					end;
					v84[v76] = true;
				end;
				local v89, v90, v91 = ipairs(Enum.NormalId:GetEnumItems());
				while true do
					v89(v90, v91);
					if not v89 then
						break;
					end;
					local v92 = nil;
					local v93, v94, v95 = ipairs((Enum.NormalId:GetEnumItems()));
					while true do
						v93(v94, v95);
						if not v93 then
							break;
						end;
						v95 = v93;
						if (Vector3.FromNormalId(v94) + Vector3.FromNormalId(v90)).Magnitude == 0 == true then
							v92 = v94;
							break;
						end;					
					end;
					local v96 = {};
					local v97 = 0;
					local v98, v99, v100 = ipairs((v78:getAdjacentBlockPositions(v76, v90, (v78:getContainedPositions(v76)))));
					while true do
						v98(v99, v100);
						if not v98 then
							break;
						end;
						v100 = v98;
						local v101 = p26.store:getBlockAt(v99);
						if v101 ~= nil then
							v97 = v97 + 1;
							v96[v97] = v101;
						end;					
					end;
					local v102 = {};
					local v103 = 0;
					local v104, v105, v106 = ipairs(v96);
					while true do
						v104(v105, v106);
						if not v104 then
							break;
						end;
						if v84[v105] == nil == true then
							v103 = v103 + 1;
							v102[v103] = v105;
						end;					
					end;
					local v107, v108, v109 = ipairs(v102);
					while true do
						v107(v108, v109);
						if not v107 then
							break;
						end;
						v109 = v107;
						local v110 = p26.handlerRegistry:getHandler(v108.Name);
						if v1.instanceof(v110, l__GreedyBlockHandler__19) then
							v110:checkCulling(p26.store, p26.handlerRegistry, v108, v92);
							v84[v76] = true;
						end;					
					end;				
				end;
			end;
			local v111 = {};
			if v1.instanceof(v78, l__GreedyBlockHandler__19) then
				local v112, v113, v114 = ipairs(Enum.NormalId:GetEnumItems());
				while true do
					v112(v113, v114);
					if not v112 then
						break;
					end;
					v114 = v112;
					v111[v113] = v76:FindFirstChild(v113.Name) ~= nil;				
				end;
			end;
			v78:destroy(v76, p27);
			if v1.instanceof(v78, l__GreedyBlockHandler__19) then
				local v115, v116, v117 = ipairs((p26:remeshAfterRemoval(v76.Name, v76.Size / l__BLOCK_SIZE__23, v78:getMinBlockPosition(v76), p27.blockPosition, v111)));
				while true do
					v115(v116, v117);
					if not v115 then
						break;
					end;
					v117 = v115;
					table.insert(v75, v116);				
				end;
			end;
		end;
	end;
	debug.profileend();
	return {
		spawnedGreedyBlocks = v75
	};
end;
local u24 = v1.import(script, v1.getModule(script, "@rbxts", "object-utils"));
function v3.remeshAfterRemoval(p29, p30, p31, p32, p33, p34)
	debug.profilebegin("remesh");
	local u25 = {};
	for v118, v119 in pairs(p34) do
		u25[Vector3.FromNormalId(v118)] = v119;
	end;
	local function v120(p35)
		local u26 = {};
		local function v121(p36, p37)
			local v122 = nil;
			local v123, v124, v125 = ipairs((Enum.NormalId:GetEnumItems()));
			while true do
				v123(v124, v125);
				if not v123 then
					break;
				end;
				v125 = v123;
				if Vector3.FromNormalId(v124) == p37 == true then
					v122 = v124;
					break;
				end;			
			end;
			u26[v122] = p36;
			return u26;
		end;
		for v126, v127 in pairs(p35) do
			v121(v127, v126, p35);
		end;
		return u26;
	end;
	local v128 = {};
	local v129 = p32 + (p31 - Vector3.new(1, 1, 1));
	local v130, v131, v132 = ipairs(Enum.Axis:GetEnumItems());
	while true do
		v130(v131, v132);
		if not v130 then
			break;
		end;
		local v133 = Vector3.FromAxis(v131);
		local v134 = v133.X * 3 + v133.Y * 2 + v133.Z;
		local l__Magnitude__135 = (p33 * v133 - p32 * v133).Magnitude;
		local v136 = p31 * (Vector3.one - v133) + v133 * l__Magnitude__135;
		if l__Magnitude__135 > 0 then
			local v137 = u24.deepCopy(u25);
			v137[v133] = true;
			local v138 = {};
			local v139 = {};
			if v134 >= 3 then
				local v140 = v136.X;
			else
				v140 = 1;
			end;
			if v134 >= 2 then
				local v141 = v136.Y;
			else
				v141 = 1;
			end;
			v139.size = Vector3.new(v140, v141, v136.Z);
			v138.greedy = v139;
			v138.skipAdjacentCulling = true;
			v138.predefinedCulling = v120(v137);
			local v142 = p29:placeBlock(p30, p32, v138);
			if v142 then
				table.insert(v128, v142);
			end;
		end;
		local l__Magnitude__143 = (v129 * v133 - p33 * v133).Magnitude;
		local v144 = p31 * (Vector3.one - v133) + v133 * l__Magnitude__143;
		if l__Magnitude__143 > 0 then
			local v145 = u24.deepCopy(u25);
			v145[v133 * -1] = true;
			local v146 = {};
			local v147 = {};
			if v134 >= 3 then
				local v148 = v144.X;
			else
				v148 = 1;
			end;
			if v134 >= 2 then
				local v149 = v144.Y;
			else
				v149 = 1;
			end;
			v147.size = Vector3.new(v148, v149, v144.Z);
			v146.greedy = v147;
			v146.skipAdjacentCulling = true;
			v146.predefinedCulling = v120(v145);
			local v150 = p29:placeBlock(p30, p32 + (p33 - p32 + Vector3.new(1, 1, 1)) * v133, v146);
			if v150 then
				table.insert(v128, v150);
			end;
		end;
		p31 = p31 * (Vector3.one - v133) + v133;
		p32 = p32 * (Vector3.one - v133) + p33 * v133;
		if (v129 * (Vector3.one - v133) + p33 * v133) * v133 ~= p33 * v133 then
			u25[v133] = false;
		end;
		if p32 * v133 ~= p33 * v133 then
			u25[v133 * -1] = false;
		end;	
	end;
	p29:deleteBlockCulling(p33);
	debug.profileend();
	return v128;
end;
function v3.deleteBlockCulling(p38, p39)
	local v151, v152, v153 = ipairs(Enum.NormalId:GetEnumItems());
	while true do
		v151(v152, v153);
		if not v151 then
			break;
		end;
		v153 = v151;
		local v154 = Vector3.FromNormalId(v152);
		local v155 = p38.store:getBlockAt(p39 + v154);
		if v155 then
			local v156 = p38.handlerRegistry:getHandler(v155.Name);
			if v1.instanceof(v156, l__GreedyBlockHandler__19) and v156:getBlockMeta().greedyMesh then
				local v157 = nil;
				local v158, v159, v160 = ipairs((Enum.NormalId:GetEnumItems()));
				while true do
					v158(v159, v160);
					if not v158 then
						break;
					end;
					v160 = v158;
					if (Vector3.FromNormalId(v159) + v154).Magnitude == 0 == true then
						v157 = v159;
						break;
					end;				
				end;
				if not v155:FindFirstChild(v157.Name) then
					local v161 = v156:createFace(v155, v155:GetAttribute("Data"), v157);
					if v161 then
						v161.Parent = v155;
					end;
				end;
			end;
		end;	
	end;
end;
function v3.getHandlerRegistry(p40)
	return p40.handlerRegistry;
end;
function v3.getBlockInstanceFromChild(p41, p42)
	if p42:GetAttribute("Block") == true then
		return p42;
	end;
	if not p42.Parent then
		return nil;
	end;
	return p41:getBlockInstanceFromChild(p42.Parent);
end;
function v3.isAllowedPlacement(p43, p44, p45, p46, p47)
	local v162 = p43.handlerRegistry:getHandler(p45);
	if not v162 then
		return false;
	end;
	local v163 = v162:getPlacementPositions(p46, p47);
	if l__RunService__9:IsClient() then
		local v164 = p44.Character;
		if v164 ~= nil then
			v164 = v164:FindFirstChild("Head");
		end;
		if v164 then
			local v165, v166, v167 = ipairs(v163);
			while true do
				v165(v166, v167);
				if not v165 then
					break;
				end;
				v167 = v165;
				if #l__Workspace__17:FindPartsInRegion3WithWhiteList(Region3.new(p43:getWorldPosition(v166) - Vector3.new(l__BLOCK_SIZE__23 / 2, l__BLOCK_SIZE__23 / 2, l__BLOCK_SIZE__23 / 2), p43:getWorldPosition(v166) + Vector3.new(l__BLOCK_SIZE__23 / 2, l__BLOCK_SIZE__23 / 2, l__BLOCK_SIZE__23 / 2)), { v164 }, 1) > 0 then
					return false;
				end;			
			end;
		end;
	end;
	local v168, v169, v170 = ipairs(v163);
	while true do
		v168(v169, v170);
		if not v168 then
			break;
		end;
		v170 = v168;
		local v171 = p43.store:getBlockAt(v169);
		if v171 and v171:GetAttribute("CanReplace") ~= true then
			return false;
		end;	
	end;
	return true;
end;
function v3.getStore(p48)
	return p48.store;
end;
function v3.getAnimationController(p49)
	return p49.animationController;
end;
function v3.hookCreateSourceBlockHandler(p50, p51)
	p50.createBlockHandlerCallback = p51;
end;
function v3.calculateBlockDamage(p52, p53, p54)
	if not p53.Character then
		return 0;
	end;
	return p52.blockDamageHook:fire(p53, p54, 2).damage;
end;
function v3.getBlockDamageHook(p55)
	return p55.blockDamageHook;
end;
function v3.getBlockBreakableHook(p56)
	return p56.blockBreakableHook;
end;
function v3.isBlockBreakable(p57, p58, p59)
	local v172 = p57.store:getBlockAt(p58.blockPosition);
	if v172 and v172:GetAttribute("NoBreak") == true then
		return false;
	end;
	return not p57.blockBreakableHook:fire(p58, p59):isCancelled();
end;
return {
	BlockEngine = v3
};
