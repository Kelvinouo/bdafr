-- Decompiled with the Synapse X Luau decompiler.

local v1 = {};
local u1 = require(script.Parent.Maid);
function v1.Compound(p1, p2)
	local v2 = u1.new();
	local u2 = false;
	local u3 = u1.new();
	for v3, v4 in pairs(p1) do
		v2:GiveTask(v4:Observe(function(p3, p4)
			if not u2 then
				local v5, v6, v7 = pairs(p1);
				while true do
					local v8, v9 = v5(v6, v7);
					if not v8 then
						u2 = true;
						p2(p1, u3);
						break;
					end;
					v7 = v8;
					if not v9.Instance then
						break;
					end;				
				end;
			end;
			p4:GiveTask(function()
				if not u2 then
					return;
				end;
				u2 = false;
				u3:DoCleaning();
			end);
		end));
	end;
	v2:GiveTask(function()
		if not u2 then
			return;
		end;
		u2 = false;
		u3:DoCleaning();
	end);
	return v2;
end;
return v1;
