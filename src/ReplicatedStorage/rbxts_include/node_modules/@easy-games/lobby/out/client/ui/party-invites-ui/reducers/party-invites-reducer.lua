-- Decompiled with the Synapse X Luau decompiler.

local u1 = {
	incomingInvites = {}
};
return {
	PartyInvitesReducer = function(p1, p2)
		if p1 == nil then
			p1 = u1;
		end;
		if p2.type ~= "PartyAddIncomingInvite" then
			if p2.type == "PartyRemoveIncomingInvite" then
				local v1 = {};
				for v2, v3 in pairs(p1) do
					v1[v2] = v3;
				end;
				local v4 = {};
				local v5 = {};
				local v6 = 0;
				local v7, v8, v9 = ipairs(p1.incomingInvites);
				while true do
					v7(v8, v9);
					if not v7 then
						break;
					end;
					if v8.fromPlayer.userId ~= p2.userId == true then
						v6 = v6 + 1;
						v5[v6] = v8;
					end;				
				end;
				table.move(v5, 1, #v5, #v4 + 1, v4);
				v1.incomingInvites = v4;
				return v1;
			else
				return p1;
			end;
		end;
		local v10 = {};
		local l__incomingInvites__11 = p1.incomingInvites;
		table.move(l__incomingInvites__11, 1, #l__incomingInvites__11, #v10 + 1, v10);
		local v12 = {};
		local v13 = 0;
		local v14, v15, v16 = ipairs(v10);
		while true do
			v14(v15, v16);
			if not v14 then
				break;
			end;
			if v15.fromPlayer.userId ~= p2.invite.fromPlayer.userId == true then
				v13 = v13 + 1;
				v12[v13] = v15;
			end;		
		end;
		local v17 = { p2.invite };
		table.move(v12, 1, #v12, #v17 + 1, v17);
		local v18 = {};
		for v19, v20 in pairs(p1) do
			v18[v19] = v20;
		end;
		v18.incomingInvites = v17;
		return v18;
	end
};
