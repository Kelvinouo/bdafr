
-- Decompiled with the Synapse X Luau decompiler.

local v1 = _G[script];
local l__OfflinePlayerUtil__2 = v1.import(script, v1.getModule(script, "@easy-games", "game-core").out).OfflinePlayerUtil;
local l__Players__3 = v1.import(script, v1.getModule(script, "@rbxts", "services")).Players;
local v4 = {};
if l__Players__3.LocalPlayer then
	local v5 = l__OfflinePlayerUtil__2.getOfflinePlayer(l__Players__3.LocalPlayer);
else
	v5 = {
		name = "SnickTrix", 
		userId = 22641473, 
		displayName = "SnickTrix"
	};
end;
v4.leader = v5;
v4.members = {};
v4.queueData = nil;
v4.queueState = v1.import(script, script.Parent.Parent.Parent.Parent.Parent, "shared", "party", "queue-state").QueueState.NONE;
v4.outgoingInviteUserIds = {};
return {
	PartyReducer = function(p1, p2)
		if p1 == nil then
			p1 = v4;
		end;
		if p2.type ~= "PartyUpdateAll" then
			return p1;
		end;
		local v6 = {};
		for v7, v8 in pairs(p1) do
			v6[v7] = v8;
		end;
		v6.leader = p2.party.leader;
		local v9 = {};
		local l__members__10 = p2.party.members;
		table.move(l__members__10, 1, #l__members__10, #v9 + 1, v9);
		v6.members = v9;
		v6.queueData = p2.party.queueData;
		v6.queueState = p2.party.queueState;
		local v11 = {};
		local l__outgoingInviteUserIds__12 = p2.party.outgoingInviteUserIds;
		table.move(l__outgoingInviteUserIds__12, 1, #l__outgoingInviteUserIds__12, #v11 + 1, v11);
		v6.outgoingInviteUserIds = v11;
		return v6;
	end
};

