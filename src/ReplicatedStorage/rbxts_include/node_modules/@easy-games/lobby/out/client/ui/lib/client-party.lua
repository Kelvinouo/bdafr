-- Decompiled with the Synapse X Luau decompiler.

local v1 = _G[script];
local v2 = setmetatable({}, {
	__tostring = function()
		return "ClientParty";
	end
});
v2.__index = v2;
function v2.new(...)
	local v3 = setmetatable({}, v2);
	return v3:constructor(...) and v3;
end;
function v2.constructor(p1, p2)
	p1.partyDto = p2;
end;
function v2.getParytDto(p3)
	return p3.partyDto;
end;
local l__PartyRole__1 = v1.import(script, script.Parent.Parent.Parent.Parent, "shared", "party", "party-role").PartyRole;
function v2.getPartyRole(p4, p5)
	if p4.partyDto.leader.userId == p5.userId then
		return l__PartyRole__1.LEADER;
	end;
	local v4 = nil;
	local v5, v6, v7 = ipairs(p4.partyDto.members);
	while true do
		v5(v6, v7);
		if not v5 then
			break;
		end;
		v7 = v5;
		if v6.userId == p5.userId == true then
			v4 = v6;
			break;
		end;	
	end;
	if v4 then
		return l__PartyRole__1.MEMBER;
	end;
	return l__PartyRole__1.NONE;
end;
function v2.isInParty(p6, p7)
	return p6:getPartyRole(p7) ~= l__PartyRole__1.NONE;
end;
function v2.isLeader(p8, p9)
	return p8:getPartyRole(p9) == l__PartyRole__1.LEADER;
end;
function v2.getPlayers(p10)
	local v8 = { p10.partyDto.leader };
	local l__members__9 = p10.partyDto.members;
	table.move(l__members__9, 1, #l__members__9, #v8 + 1, v8);
	return v8;
end;
local l__OfflinePlayerUtil__2 = v1.import(script, v1.getModule(script, "@easy-games", "game-core").out).OfflinePlayerUtil;
function v2.getOnlinePlayers(p11)
	local v10 = {};
	local v11 = 0;
	local v12, v13, v14 = ipairs((p11:getPlayers()));
	while true do
		v12(v13, v14);
		if not v12 then
			break;
		end;
		v14 = v12;
		local v15 = l__OfflinePlayerUtil__2.getPlayer(v13);
		if v15 ~= nil then
			v11 = v11 + 1;
			v10[v11] = v15;
		end;	
	end;
	return v10;
end;
return {
	ClientParty = v2
};
