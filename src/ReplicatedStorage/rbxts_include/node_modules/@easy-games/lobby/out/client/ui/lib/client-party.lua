-- Decompiled with the Synapse X Luau decompiler.

local v1 = _G[script];
local v2 = setmetatable({}, {
	__tostring = function()
		return "ClientParty";
	end
});
v2.__index = v2;
function v2.new(...)
	local v3 = setmetatable({}, v2);
	return v3:constructor(...) and v3;
end;
function v2.constructor(p1, p2)
	p1.partyDto = p2;
end;
function v2.getParytDto(p3)
	return p3.partyDto;
end;
local l__PartyRole__1 = v1.import(script, script.Parent.Parent.Parent.Parent, "shared", "party", "party-role").PartyRole;
function v2.getPartyRole(p4, p5)
	if p4.partyDto.leader.userId == p5.userId then
		return l__PartyRole__1.LEADER;
	end;
	local l__members__4 = p4.partyDto.members;
	local function v5(p6)
		return p6.userId == p5.userId;
	end;
	local v6 = nil;
	for v7, v8 in ipairs(l__members__4) do
		if v5(v8, v7 - 1, l__members__4) == true then
			v6 = v8;
			break;
		end;
	end;
	if v6 then
		return l__PartyRole__1.MEMBER;
	end;
	return l__PartyRole__1.NONE;
end;
function v2.isInParty(p7, p8)
	return p7:getPartyRole(p8) ~= l__PartyRole__1.NONE;
end;
function v2.isLeader(p9, p10)
	return p9:getPartyRole(p10) == l__PartyRole__1.LEADER;
end;
function v2.getPlayers(p11)
	local v9 = { p11.partyDto.leader };
	local l__members__10 = p11.partyDto.members;
	table.move(l__members__10, 1, #l__members__10, #v9 + 1, v9);
	return v9;
end;
local l__OfflinePlayerUtil__2 = v1.import(script, v1.getModule(script, "@easy-games", "game-core").out).OfflinePlayerUtil;
function v2.getOnlinePlayers(p12)
	local v11 = p12:getPlayers();
	local function v12(p13)
		return l__OfflinePlayerUtil__2.getPlayer(p13);
	end;
	local v13 = {};
	local v14 = 0;
	for v15, v16 in ipairs(v11) do
		local v17 = v12(v16, v15 - 1, v11);
		if v17 ~= nil then
			v14 = v14 + 1;
			v13[v14] = v17;
		end;
	end;
	return v13;
end;
return {
	ClientParty = v2
};
