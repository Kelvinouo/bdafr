-- Decompiled with the Synapse X Luau decompiler.

local v1 = _G[script];
local l__DeviceUtil__1 = v1.import(script, v1.getModule(script, "@easy-games", "game-core").out).DeviceUtil;
local l__createNetworkingEvent__2 = v1.import(script, v1.getModule(script, "@flamework", "networking").out.events.createNetworkingEvent).createNetworkingEvent;
local l__t__3 = v1.import(script, v1.getModule(script, "@rbxts", "t").lib.ts).t;
return {
	LobbyEvents = (function()
		if l__DeviceUtil__1.isHoarceKat() then
			return {
				client = {}, 
				server = {}
			};
		end;
		return l__createNetworkingEvent__2("@easy-games/lobby:shared/event/lobby-events@getEvents.Events", {
			inviteToParty = { l__t__3.interface({
					player = l__t__3.instanceIsA("Player")
				}) }, 
			removeFromParty = { l__t__3.interface({
					player = l__t__3.instanceIsA("Player")
				}) }, 
			joinParty = { l__t__3.interface({
					leader = l__t__3.instanceIsA("Player")
				}) }, 
			leaveParty = {}, 
			requestPartyInfo = {}, 
			lobbyPlayerConnect = { l__t__3.interface({
					party = l__t__3.optional(l__t__3.interface({
						leaderUserId = l__t__3.number, 
						partySize = l__t__3.number
					}))
				}) }, 
			joinQueue = { l__t__3.interface({
					queueType = l__t__3.string
				}) }, 
			leaveQueue = {}, 
			replicateClientData = { l__t__3.interface({
					region = l__t__3.string, 
					device = l__t__3.union(l__t__3.literal("computer-windows"), l__t__3.literal("computer-other"), l__t__3.literal("mobile"), l__t__3.literal("xbox"), l__t__3.literal("unknown")), 
					locale = l__t__3.string, 
					voiceChatEnabled = l__t__3.boolean
				}) }
		}, {
			partyInfoEvent = { l__t__3.interface({
					party = l__t__3.interface({
						leader = l__t__3.interface({
							displayName = l__t__3.string, 
							name = l__t__3.string, 
							userId = l__t__3.number
						}), 
						members = l__t__3.array(l__t__3.interface({
							displayName = l__t__3.string, 
							name = l__t__3.string, 
							userId = l__t__3.number
						})), 
						queueData = l__t__3.optional(l__t__3.interface({
							ticketId = l__t__3.string, 
							queueType = l__t__3.string, 
							joinTime = l__t__3.number, 
							pollAttempts = l__t__3.number, 
							lastPollTime = l__t__3.number
						})), 
						queueState = l__t__3.union(l__t__3.literal(0), l__t__3.literal(1), l__t__3.literal(2), l__t__3.literal(3)), 
						outgoingInviteUserIds = l__t__3.array(l__t__3.number)
					})
				}) }, 
			receivedPartyInvite = { l__t__3.interface({
					invite = l__t__3.interface({
						fromPlayer = l__t__3.interface({
							name = l__t__3.string, 
							userId = l__t__3.number
						}), 
						time = l__t__3.number
					})
				}) }
		});
	end)()
};
