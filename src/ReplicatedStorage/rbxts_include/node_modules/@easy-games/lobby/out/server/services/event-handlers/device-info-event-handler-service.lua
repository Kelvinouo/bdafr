-- Script Hash: a1f657b02cf7f1b265aef4389cc38948b87220cb75b0bd45436415acfa9465733796fecb6784bb7045387d2dcf3cd9d9
-- Decompiled with the Synapse X Luau decompiler.

local v1 = _G[script];
local l__Reflect__2 = v1.import(script, v1.getModule(script, "@flamework", "core").out).Reflect;
local v3 = v1.import(script, v1.getModule(script, "@flamework", "core").out);
local v4 = v1.import(script, v1.getModule(script, "@rbxts", "services"));
local v5 = setmetatable({}, {
	__tostring = function()
		return "DeviceInfoEventHandlerService";
	end
});
v5.__index = v5;
function v5.new(...)
	local v6 = setmetatable({}, v5);
	return v6:constructor(...) and v6;
end;
function v5.constructor(p1, p2)
	p1.playerDataService = p2;
end;
function v5.onInit(p3)
	p3:connectEvents();
end;
local l__LobbyServerEvents__1 = v1.import(script, script.Parent.Parent.Parent, "events", "events").LobbyServerEvents;
local l__LocalizationService__2 = v4.LocalizationService;
local l__AnalyticsService__3 = v4.AnalyticsService;
function v5.connectEvents(p4)
	l__LobbyServerEvents__1.replicateClientData:connect(function(p5, p6)
		if p4.playerDataService:getDeviceInfo(p5.UserId) then
			return nil;
		end;
		local u4 = nil;
		v1.try(function()
			u4 = l__LocalizationService__2:GetCountryRegionForPlayerAsync(p5);
		end, function(p7)
			warn("Failed to get country code for player. Error:", p7);
			u4 = "US";
		end);
		p6.locale = u4;
		local v7 = p4.playerDataService:convertCountryToServerRegion(u4);
		l__AnalyticsService__3:FireCustomEvent(p5, "Player_Region", {
			region = v7
		});
		print("[DataReplication] Player " .. tostring(p5) .. " server region is " .. v7);
		p6.region = v7;
		p4.playerDataService:setDeviceInfo(p5.UserId, p6);
	end);
end;
l__Reflect__2.defineMetadata(v5, "identifier", "@easy-games/lobby:server/services/event-handlers/device-info-event-handler-service@DeviceInfoEventHandlerService");
l__Reflect__2.defineMetadata(v5, "flamework:parameters", { "@easy-games/lobby:server/services/device-info-service@DeviceInfoService" });
l__Reflect__2.defineMetadata(v5, "flamework:implements", { "$:flamework@OnInit" });
l__Reflect__2.decorate(v5, "$:flamework@Service", v3.Service, { {} });
l__Reflect__2.decorate(v5, "$:flamework@External", v3.External, {});
return {
	DeviceInfoEventHandlerService = v5
};
