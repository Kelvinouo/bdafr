-- Decompiled with the Synapse X Luau decompiler.

local v1 = _G[script];
local v2 = setmetatable({}, {
	__tostring = function()
		return "LobbyServer";
	end
});
v2.__index = v2;
function v2.new(...)
	local v3 = setmetatable({}, v2);
	return v3:constructor(...) and v3;
end;
local l__LobbyServerConfig__1 = v1.import(script, script.Parent, "config", "lobby-server-config").LobbyServerConfig;
local u2 = v1.import(script, script.Parent.Parent, "shared", "sound", "sound-configuration").LobbyDefaultSoundConfiguration;
function v2.constructor(p1, p2, p3, p4, p5, p6)
	l__LobbyServerConfig__1.playFabConfig = p2;
	l__LobbyServerConfig__1.queueMeta = p3;
	local v4 = {};
	for v5, v6 in pairs(u2) do
		v4[v5] = v6;
	end;
	if type(p4) == "table" then
		for v7, v8 in pairs(p4) do
			v4[v7] = v8;
		end;
	end;
	l__LobbyServerConfig__1.soundConfiguration = v4;
	local v9 = p5;
	if v9 == nil then
		v9 = {};
	end;
	l__LobbyServerConfig__1.lobbyPlaceIds = v9;
	l__LobbyServerConfig__1.analytics = p6;
end;
local u3 = v1.import(script, v1.getModule(script, "@rbxts", "string-utils"));
local u4 = v1.import(script, v1.getModule(script, "@rbxts", "object-utils"));
function v2.getFlameworkDependencies(p7)
	local v10 = {};
	local v11, v12, v13 = ipairs(script.Parent:FindFirstChild("services"):GetDescendants());
	while true do
		v11(v12, v13);
		if not v11 then
			break;
		end;
		v13 = v11;
		if v12:IsA("ModuleScript") and u3.includes(v12.Name, "service") then
			local v14, v15, v16 = ipairs(u4.values(require(v12)));
			while true do
				v14(v15, v16);
				if not v14 then
					break;
				end;
				v16 = v14;
				v10[#v10 + 1] = v15;			
			end;
		end;	
	end;
	return v10;
end;
return {
	LobbyServer = v2
};
