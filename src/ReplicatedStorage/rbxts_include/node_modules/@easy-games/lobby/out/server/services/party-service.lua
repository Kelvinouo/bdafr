-- Script Hash: 9b878213726a3bfdf8eaf59253cf59cb94116d4efc76cdc93a16cc45ed263628fac57f10490c7d03cd74e49ba4496d6e
-- Decompiled with the Synapse X Luau decompiler.

local v1 = _G[script];
local l__Reflect__2 = v1.import(script, v1.getModule(script, "@flamework", "core").out).Reflect;
local v3 = v1.import(script, v1.getModule(script, "@flamework", "core").out);
local v4 = setmetatable({}, {
	__tostring = function()
		return "PartyService";
	end
});
v4.__index = v4;
function v4.new(...)
	local v5 = setmetatable({}, v4);
	return v5:constructor(...) and v5;
end;
function v4.constructor(p1, p2, p3)
	p1.queueService = p2;
	p1.matchmakingService = p3;
	p1.parties = {};
	p1.waitingPlayers = {};
end;
local l__PlayerAdded__1 = v1.import(script, v1.getModule(script, "@easy-games", "game-core").out).PlayerAdded;
local l__Players__2 = v1.import(script, v1.getModule(script, "@rbxts", "services")).Players;
function v4.onStart(p4)
	l__PlayerAdded__1(function(p5)
		local l__waitingPlayers__6 = p4.waitingPlayers;
		local u3 = p4:createParty(p5);
		local function v7(p6, p7)
			if p6.leaderUserId == p5.UserId then
				local v8 = l__Players__2:GetPlayerByUserId(p7);
				if v8 and os.time() - p6.time <= 30 then
					p4:joinParty(v8, u3);
					p4.waitingPlayers[p7] = nil;
				end;
			end;
		end;
		for v9, v10 in pairs(l__waitingPlayers__6) do
			v7(v10, v9, l__waitingPlayers__6);
		end;
	end);
	l__Players__2.PlayerRemoving:Connect(function(p8)
		return p4:onPlayerDisconnect(p8);
	end);
	p4.matchmakingService:registerPartyProducer(function()
		return p4:getParties();
	end);
end;
function v4.onPlayerDisconnect(p9, p10)
	local v11 = p9:getPartyForPlayer(p10);
	if v11 then
		p9:removePlayerFromParty(p10, v11, false);
	end;
end;
local l__Party__4 = v1.import(script, script.Parent.Parent, "lib", "party").Party;
function v4.joinParty(p11, p12, p13)
	if not (#p13:getPlayers() < l__Party__4.MAX_SIZE) then
		return false;
	end;
	local v12 = p11:getPartyForPlayer(p12);
	if v12 then
		p11:removePlayerFromParty(p12, v12, false);
		v12:sendPartyInfoEvent();
	end;
	p13:addPlayer(p12);
	if p13:getQueueData() then
		p11.queueService:leaveQueue(p13);
	end;
	p13:sendPartyInfoEvent();
	return true;
end;
function v4.removePlayerFromParty(p14, p15, p16, p17)
	if p16:getQueueData() then
		p14.queueService:leaveQueue(p16, not p17);
	end;
	p16:removePlayer(p15);
	p16:cancelInvite(p15.UserId);
	p16:sendPartyInfoEvent();
	if #p16:getPlayers() == 0 or p16:getLeader() == p15 then
		p14:disbandParty(p16);
	end;
	if p17 then
		p14:createParty(p15):sendPartyInfoEvent();
	end;
end;
function v4.createParty(p18, p19)
	local v13 = l__Party__4.new(p19);
	local l__parties__14 = p18.parties;
	l__parties__14[#l__parties__14 + 1] = v13;
	return v13;
end;
function v4.disbandParty(p20, p21)
	print("disbanding party!");
	for v15, v16 in ipairs(p21:getMembers()) do
		p20:removePlayerFromParty(v16, p21, true);
	end;
	table.remove(p20.parties, (table.find(p20.parties, p21) and 0) - 1 + 1);
end;
function v4.getPartyForPlayer(p22, p23)
	local l__parties__17 = p22.parties;
	local function v18(p24)
		return table.find(p24:getPlayers(), p23) ~= nil;
	end;
	for v19, v20 in ipairs(l__parties__17) do
		if v18(v20, v19 - 1, l__parties__17) == true then
			return v20;
		end;
	end;
	return nil;
end;
function v4.getPartyByLeader(p25, p26)
	local l__parties__21 = p25.parties;
	local function v22(p27)
		return p27:getLeader().UserId == p26;
	end;
	for v23, v24 in ipairs(l__parties__21) do
		if v22(v24, v23 - 1, l__parties__21) == true then
			return v24;
		end;
	end;
	return nil;
end;
function v4.getParties(p28)
	return p28.parties;
end;
function v4.getWaitingPlayers(p29)
	return p29.waitingPlayers;
end;
function v4.setWaitingPlayer(p30, p31, p32)
	p30.waitingPlayers[p31] = {
		leaderUserId = p32, 
		time = os.time()
	};
end;
l__Reflect__2.defineMetadata(v4, "identifier", "@easy-games/lobby:server/services/party-service@PartyService");
l__Reflect__2.defineMetadata(v4, "flamework:parameters", { "@easy-games/lobby:server/services/queue-service@QueueService", "@easy-games/lobby:server/services/matchmaking-service@MatchmakingService" });
l__Reflect__2.defineMetadata(v4, "flamework:implements", { "$:flamework@OnStart" });
l__Reflect__2.decorate(v4, "$:flamework@Service", v3.Service, { {} });
l__Reflect__2.decorate(v4, "$:flamework@External", v3.External, {});
return {
	PartyService = v4
};
