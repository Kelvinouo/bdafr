-- Decompiled with the Synapse X Luau decompiler.

local v1 = _G[script];
local l__Reflect__2 = v1.import(script, v1.getModule(script, "@flamework", "core").out).Reflect;
local v3 = v1.import(script, v1.getModule(script, "@flamework", "core").out);
local v4 = setmetatable({}, {
	__tostring = function()
		return "PartyService";
	end
});
v4.__index = v4;
function v4.new(...)
	local v5 = setmetatable({}, v4);
	return v5:constructor(...) and v5;
end;
function v4.constructor(p1, p2, p3)
	p1.queueService = p2;
	p1.matchmakingService = p3;
	p1.parties = {};
	p1.waitingPlayers = {};
	p1.inviteExpireLists = {};
end;
local l__WatchPlayer__1 = v1.import(script, v1.getModule(script, "@easy-games", "game-core").out).WatchPlayer;
local l__Players__2 = v1.import(script, v1.getModule(script, "@rbxts", "services")).Players;
function v4.onStart(p4)
	l__WatchPlayer__1(function(p5)
		print("[PARTY] TEST PRINT");
		local l__waitingPlayers__6 = p4.waitingPlayers;
		local u3 = p4:createParty(p5);
		local function v7(p6, p7)
			if p6.leaderUserId == p5.UserId then
				local v8 = l__Players__2:GetPlayerByUserId(p7);
				if v8 and os.time() - p6.time <= 30 then
					p4:joinParty(v8, u3);
					p4.waitingPlayers[p7] = nil;
				end;
			end;
		end;
		for v9, v10 in pairs(l__waitingPlayers__6) do
			v7(v10, v9, l__waitingPlayers__6);
		end;
	end);
	l__Players__2.PlayerRemoving:Connect(function(p8)
		return p4:onPlayerDisconnect(p8);
	end);
	p4.matchmakingService:registerPartyProducer(function()
		return p4:getParties();
	end);
end;
local u4 = v1.import(script, v1.getModule(script, "@rbxts", "object-utils"));
function v4.onPlayerDisconnect(p9, p10)
	local v11 = p9:getPartyForPlayer(p10);
	if v11 then
		p9:removePlayerFromParty(p10, v11, false);
	end;
	local v12 = u4.entries(p9.inviteExpireLists);
	local function v13(p11)
		local v14 = p11[1];
		local v15 = p11[2];
		local v16 = string.find(v14, (tostring(p10.UserId)));
		if v16 ~= 0 and v16 == v16 and v16 then
			print("[PARTY] Cleaning up:", v14);
			p9.inviteExpireLists[v14] = nil;
		end;
	end;
	local v17, v18, v19 = ipairs(v12);
	while true do
		v17(v18, v19);
		if not v17 then
			break;
		end;
		v19 = v17;
		v13(v18, v17 - 1, v12);	
	end;
end;
local l__Party__5 = v1.import(script, script.Parent.Parent, "lib", "party").Party;
function v4.joinParty(p12, p13, p14)
	if not (#p14:getPlayers() < l__Party__5.MAX_SIZE) then
		return false;
	end;
	local v20 = p12:getPartyForPlayer(p13);
	if v20 then
		p12:removePlayerFromParty(p13, v20, false);
		v20:sendPartyInfoEvent();
	end;
	p14:addPlayer(p13);
	if p14:getQueueData() then
		p12.queueService:leaveQueue(p14);
	end;
	p14:sendPartyInfoEvent();
	return true;
end;
function v4.removePlayerFromParty(p15, p16, p17, p18)
	if p17:getQueueData() then
		p15.queueService:leaveQueue(p17, not p18);
	end;
	p17:removePlayer(p16);
	p17:cancelInvite(p16.UserId);
	p17:sendPartyInfoEvent();
	if #p17:getPlayers() == 0 or p17:getLeader() == p16 then
		p15:disbandParty(p17);
	end;
	if p18 then
		p15:createParty(p16):sendPartyInfoEvent();
	end;
end;
function v4.createParty(p19, p20)
	local v21 = l__Party__5.new(p20);
	local l__parties__22 = p19.parties;
	l__parties__22[#l__parties__22 + 1] = v21;
	return v21;
end;
function v4.disbandParty(p21, p22)
	local v23, v24, v25 = ipairs(p22:getMembers());
	while true do
		v23(v24, v25);
		if not v23 then
			break;
		end;
		v25 = v23;
		p21:removePlayerFromParty(v24, p22, true);	
	end;
	table.remove(p21.parties, (table.find(p21.parties, p22) and 0) - 1 + 1);
end;
function v4.getPartyForPlayer(p23, p24)
	local v26, v27, v28 = ipairs(p23.parties);
	while true do
		v26(v27, v28);
		if not v26 then
			break;
		end;
		v28 = v26;
		if table.find(v27:getPlayers(), p24) ~= nil == true then
			return v27;
		end;	
	end;
	return nil;
end;
function v4.getPartyByLeader(p25, p26)
	local v29, v30, v31 = ipairs(p25.parties);
	while true do
		v29(v30, v31);
		if not v29 then
			break;
		end;
		v31 = v29;
		if v30:getLeader().UserId == p26 == true then
			return v30;
		end;	
	end;
	return nil;
end;
function v4.getParties(p27)
	return p27.parties;
end;
function v4.getWaitingPlayers(p28)
	return p28.waitingPlayers;
end;
function v4.setWaitingPlayer(p29, p30, p31)
	p29.waitingPlayers[p30] = {
		leaderUserId = p31, 
		time = os.time()
	};
end;
l__Reflect__2.defineMetadata(v4, "identifier", "@easy-games/lobby:server/services/party-service@PartyService");
l__Reflect__2.defineMetadata(v4, "flamework:parameters", { "@easy-games/lobby:server/services/queue-service@QueueService", "@easy-games/lobby:server/services/matchmaking-service@MatchmakingService" });
l__Reflect__2.defineMetadata(v4, "flamework:implements", { "$:flamework@OnStart" });
l__Reflect__2.decorate(v4, "$:flamework@Service", v3.Service, { {} });
l__Reflect__2.decorate(v4, "$:flamework@External", v3.External, {});
return {
	PartyService = v4
};
