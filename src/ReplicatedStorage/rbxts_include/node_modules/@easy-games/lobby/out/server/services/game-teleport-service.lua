-- Decompiled with the Synapse X Luau decompiler.

local v1 = _G[script];
local l__Reflect__2 = v1.import(script, v1.getModule(script, "@flamework", "core").out).Reflect;
local v3 = v1.import(script, v1.getModule(script, "@flamework", "core").out);
local v4 = setmetatable({}, {
	__tostring = function()
		return "GameTeleportService";
	end
});
v4.__index = v4;
function v4.new(...)
	local v5 = setmetatable({}, v4);
	return v5:constructor(...) and v5;
end;
function v4.constructor(p1, p2)
	p1.lobbyServerService = p2;
	p1.Name = "GameTeleportService";
end;
function v4.onStart(p3)

end;
function v4.teleportPartyToPlace(p4, p5, p6, p7)
	local v6 = p7;
	if v6 ~= nil then
		v6 = v6.teleportData;
	end;
	local v7 = v6;
	if v7 == nil then
		v7 = p4:generateTeleportData(p6);
	end;
	local v8 = p7;
	if v8 ~= nil then
		v8 = v8.teleportOptions;
	end;
	local v9 = v8;
	if v9 == nil then
		v9 = Instance.new("TeleportOptions");
	end;
	v9:SetTeleportData(v7);
	return p4:teleportRetry(p5, p6:getPlayers(), v9);
end;
function v4.teleportToPlace(p8, p9, p10, p11, p12)
	local v10 = p12;
	if v10 ~= nil then
		v10 = v10.teleportData;
	end;
	local v11 = v10;
	if v11 == nil then
		local v12 = p11;
		if v12 == nil then
			v12 = p10;
		end;
		v11 = p8:generateTeleportData(v12);
	end;
	local v13 = Instance.new("TeleportOptions");
	v13:SetTeleportData(v11);
	return p8:teleportRetry(p9, { p10 }, v13);
end;
local l__TeleportService__1 = v1.import(script, v1.getModule(script, "@rbxts", "services")).TeleportService;
v4.teleportRetry = v1.async(function(p13, p14, p15, p16)
	local v14, v15 = v1.try(function()
		return v1.TRY_RETURN, { v1.Promise.retry(v1.async(function()
				return l__TeleportService__1:TeleportAsync(p14, p15, p16);
			end), v4.MAX_TELEPORT_RETRIES) };
	end, function(p17)
		warn(p17);
		return v1.TRY_RETURN, { nil };
	end);
	if not v14 then
		return;
	end;
	return unpack(v15);
end);
local l__Party__2 = v1.import(script, script.Parent.Parent, "lib", "party").Party;
function v4.generateTeleportData(p18, p19)
	if not v1.instanceof(p19, l__Party__2) then
		return {
			party = {
				leaderUserId = p19.UserId, 
				partySize = 1
			}
		};
	end;
	local v16 = {};
	local v17 = {};
	local v18 = p19:getLeader();
	if v18 ~= nil then
		v18 = v18.UserId;
	end;
	v17.leaderUserId = v18;
	v17.partySize = #p19:getPlayers();
	v16.party = v17;
	return v16;
end;
function v4.getGamePlaceIdForQueueType(p20, p21)
	local v19 = p20.lobbyServerService:getQueueMeta(p21);
	local l__placeId__20 = v19.placeId;
	if l__placeId__20 ~= 0 and l__placeId__20 == l__placeId__20 and l__placeId__20 then
		return v19.placeId;
	end;
	return game.PlaceId;
end;
v4.MAX_TELEPORT_RETRIES = 5;
l__Reflect__2.defineMetadata(v4, "identifier", "@easy-games/lobby:server/services/game-teleport-service@GameTeleportService");
l__Reflect__2.defineMetadata(v4, "flamework:parameters", { "@easy-games/lobby:server/services/lobby-server-service@LobbyServerService" });
l__Reflect__2.defineMetadata(v4, "flamework:implements", { "$:flamework@OnStart" });
l__Reflect__2.decorate(v4, "$:flamework@Service", v3.Service, {});
l__Reflect__2.decorate(v4, "$:flamework@External", v3.External, {});
return {
	GameTeleportService = v4
};
