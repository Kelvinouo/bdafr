-- Decompiled with the Synapse X Luau decompiler.

local v1 = _G[script];
local l__Reflect__2 = v1.import(script, v1.getModule(script, "@flamework", "core").out).Reflect;
local v3 = setmetatable({}, {
	__tostring = function()
		return "GameTeleportService";
	end
});
v3.__index = v3;
function v3.new(...)
	local v4 = setmetatable({}, v3);
	return v4:constructor(...) and v4;
end;
function v3.constructor(p1, p2)
	p1.lobbyServerService = p2;
	p1.Name = "GameTeleportService";
end;
function v3.onStart(p3)

end;
function v3.teleportPartyToPlace(p4, p5, p6, p7)
	local v5 = p7;
	if v5 ~= nil then
		v5 = v5.teleportData;
	end;
	local v6 = v5;
	if v6 == nil then
		v6 = p4:generateTeleportData(p6);
	end;
	local v7 = p7;
	if v7 ~= nil then
		v7 = v7.teleportOptions;
	end;
	local v8 = v7;
	if v8 == nil then
		v8 = Instance.new("TeleportOptions");
	end;
	v8:SetTeleportData(v6);
	p4:teleportRetry(p5, p6:getPlayers(), v8);
end;
function v3.teleportToPlace(p8, p9, p10, p11, p12)
	local v9 = p12;
	if v9 ~= nil then
		v9 = v9.teleportData;
	end;
	local v10 = v9;
	if v10 == nil then
		local v11 = p11;
		if v11 == nil then
			v11 = p10;
		end;
		v10 = p8:generateTeleportData(v11);
	end;
	local v12 = Instance.new("TeleportOptions");
	v12:SetTeleportData(v10);
	p8:teleportRetry(p9, { p10 }, v12);
end;
local l__TeleportService__1 = v1.import(script, v1.getModule(script, "@rbxts", "services")).TeleportService;
v3.teleportRetry = v1.async(function(p13, p14, p15, p16)
	local v13, v14 = v1.try(function()
		return v1.TRY_RETURN, { v1.Promise.retry(v1.async(function()
				return l__TeleportService__1:TeleportAsync(p14, p15, p16);
			end), v3.MAX_TELEPORT_RETRIES) };
	end, function(p17)
		warn(p17);
		return v1.TRY_RETURN, { nil };
	end);
	if not v13 then
		return;
	end;
	return unpack(v14);
end);
local l__Party__2 = v1.import(script, script.Parent.Parent, "lib", "party").Party;
function v3.generateTeleportData(p18, p19)
	if not v1.instanceof(p19, l__Party__2) then
		return {
			party = {
				leaderUserId = p19.UserId
			}
		};
	end;
	local v15 = {};
	local v16 = {};
	local v17 = p19:getLeader();
	if v17 ~= nil then
		v17 = v17.UserId;
	end;
	v16.leaderUserId = v17;
	v15.party = v16;
	return v15;
end;
function v3.getGamePlaceIdForQueueType(p20, p21)
	local v18 = p20.lobbyServerService:getQueueMeta(p21);
	local l__placeId__19 = v18.placeId;
	if l__placeId__19 ~= 0 and l__placeId__19 == l__placeId__19 and l__placeId__19 then
		return v18.placeId;
	end;
	return game.PlaceId;
end;
v3.MAX_TELEPORT_RETRIES = 5;
l__Reflect__2.defineMetadata(v3, "identifier", "@easy-games/lobby:server/services/game-teleport-service@GameTeleportService");
l__Reflect__2.defineMetadata(v3, "flamework:isExternal", true);
l__Reflect__2.defineMetadata(v3, "flamework:dependencies", { "@easy-games/lobby:server/services/lobby-server-service@LobbyServerService" });
l__Reflect__2.defineMetadata(v3, "flamework:implements", { "$:flamework@OnStart" });
l__Reflect__2.defineMetadata(v3, "flamework:decorators", { "$:flamework@Service" });
l__Reflect__2.defineMetadata(v3, "flamework:decorators.$:flamework@Service", {
	type = "Service"
});
return {
	GameTeleportService = v3
};
