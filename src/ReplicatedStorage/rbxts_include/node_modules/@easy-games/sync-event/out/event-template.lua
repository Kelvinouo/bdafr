-- Script Hash: 070c16f9aecef963ee4d6103073e154487edc3d3606dd8c05995c08ee15eaa789d2ec12e189ba07a3f0c5f73c13ac241
-- Decompiled with the Synapse X Luau decompiler.

local v1 = _G[script];
local v2 = setmetatable({}, {
	__tostring = function()
		return "EventConnection";
	end
});
v2.__index = v2;
function v2.new(...)
	local v3 = setmetatable({}, v2);
	return v3:constructor(...) and v3;
end;
function v2.constructor(p1, p2)
	p1.destroyFunction = p2;
end;
function v2.Destroy(p3)
	p3.destroyFunction();
end;
local v4 = {
	constructor = function(p4, p5, p6)
		if p6 == nil then
			p6 = true;
		end;
		p4.eventClass = p5;
		p4.pcallCallbacks = p6;
	end, 
	constructEvent = function(p7, p8)
		local v5 = 0;
		for v6, v7 in pairs(p8) do
			v5 = math.max(v6, v5);
		end;
		local v8 = 0;
		local v9 = false;
		while true do
			if v9 then
				v8 = v8 + 1;
			else
				v9 = true;
			end;
			if not (v8 < v5) then
				break;
			end;
			if p8[v8 + 1] == nil then
				p8[v8 + 1] = "__UNDEFINED_EVENT_PARAMETER";
			end;		
		end;
		local v10 = p7.eventClass.new(unpack(p8));
		for v11, v12 in pairs(v10) do
			if v12 == "__UNDEFINED_EVENT_PARAMETER" then
				v10[v11] = nil;
			end;
		end;
		return v10;
	end
};
local l__SyncEventConfig__1 = v1.import(script, script.Parent, "sync-event-config").SyncEventConfig;
local l__RunService__2 = v1.import(script, v1.getModule(script, "@rbxts", "services")).RunService;
function v4.wrapCallback(p9, p10, p11)
	local v13 = function(p12)
		return p12();
	end;
	if p9.pcallCallbacks then
		v13 = function(p13)
			xpcall(function()
				p13();
			end, function(p14)
				warn(debug.traceback(p14, 3));
			end);
		end;
	end;
	if l__SyncEventConfig__1.INFINITE_YIELD_ALERT > 0 then
		local u3 = false;
		task.delay(l__SyncEventConfig__1.INFINITE_YIELD_ALERT, function()
			if not u3 then
				warn(p9:formatLogs("Infinite yield warning! Callback running for over " .. tostring(l__SyncEventConfig__1.INFINITE_YIELD_ALERT) .. " seconds:"));
				warn(p9:formatLogs(p10));
			end;
		end);
	end;
	local v14 = os.clock();
	if l__SyncEventConfig__1.DEBUG_YIELDING_CALLBACK then
		local u4 = false;
		task.spawn(function()
			l__RunService__2.Heartbeat:Wait();
			u4 = true;
		end);
	end;
	v13(p11);
	if false then
		print(p9:formatLogs("Callback yielded!"));
		print(p9:formatLogs(p10));
	end;
	if l__SyncEventConfig__1.DEBUG_CALLBACK_TIME_THRESHOLD >= 0 and l__SyncEventConfig__1.DEBUG_CALLBACK_TIME_THRESHOLD < os.clock() - v14 then
		print(p9:formatLogs("Callback lasted for " .. tostring(os.clock() - v14) .. ":"));
		print(p9:formatLogs(p10));
	end;
end;
function v4.getCallingThreadInfo(p15, p16)
	if p16 == nil then
		p16 = 0;
	end;
	local v15 = { debug.info(coroutine.running(), 3 + p16, "sl") };
	return v15[1] .. ":" .. tostring(v15[2]);
end;
function v4.formatLogs(p17, p18)
	return "[SYNC-EVENT][" .. tostring(p17.eventClass) .. "] " .. p18;
end;
return {
	EventConnection = v2, 
	EventTemplate = v4
};
