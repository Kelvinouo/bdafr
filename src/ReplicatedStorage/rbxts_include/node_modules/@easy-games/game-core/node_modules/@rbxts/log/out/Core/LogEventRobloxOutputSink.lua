-- Decompiled with the Synapse X Luau decompiler.

local v1 = _G[script];
local v2 = v1.import(script, v1.getModule(script, "@rbxts", "message-templates").out);
local v3 = setmetatable({}, {
	__tostring = function()
		return "LogEventRobloxOutputSink";
	end
});
v3.__index = v3;
function v3.new(...)
	local v4 = setmetatable({}, v3);
	return v4:constructor(...) and v4;
end;
function v3.constructor(p1, p2)
	p1.options = p2;
end;
local l__LogLevel__1 = v1.import(script, script.Parent).LogLevel;
local u2 = v2.PlainTextMessageTemplateRenderer;
local l__MessageTemplateParser__3 = v2.MessageTemplateParser;
function v3.Emit(p3, p4)
	local v5 = nil;
	local l__options__6 = p3.options;
	local v7 = l__options__6.TagFormat;
	if v7 == nil then
		v7 = "short";
	end;
	if l__LogLevel__1.Error <= p4.Level and l__options__6.ErrorsTreatedAsExceptions then
		return nil;
	end;
	local v8 = DateTime.fromIsoDate(p4.Timestamp);
	if v8 ~= nil then
		v8 = v8:FormatLocalTime("HH:mm:ss", "en-us");
	end;
	local v9 = nil;
	local l__Level__10 = p4.Level;
	if l__Level__10 == l__LogLevel__1.Verbose then
		if v7 == "short" then
			local v11 = "VRB";
		else
			v11 = "VERBOSE";
		end;
		v9 = v11;
	elseif l__Level__10 == l__LogLevel__1.Debugging then
		if v7 == "short" then
			local v12 = "DBG";
		else
			v12 = "DEBUG";
		end;
		v9 = v12;
	elseif l__Level__10 == l__LogLevel__1.Information then
		if v7 == "short" then
			local v13 = "INF";
		else
			v13 = "INFO";
		end;
		v9 = v13;
	elseif l__Level__10 == l__LogLevel__1.Warning then
		if v7 == "short" then
			local v14 = "WRN";
		else
			v14 = "WARNING";
		end;
		v9 = v14;
	elseif l__Level__10 == l__LogLevel__1.Error then
		if v7 == "short" then
			local v15 = "ERR";
		else
			v15 = "ERROR";
		end;
		v9 = v15;
	elseif l__Level__10 == l__LogLevel__1.Fatal then
		if v7 == "short" then
			local v16 = "FTL";
		else
			v16 = "FATAL";
		end;
		v9 = v16;
	end;
	v5 = "[" .. v9 .. "] " .. u2.new(l__MessageTemplateParser__3.GetTokens(p4.Template)):Render(p4);
	if l__LogLevel__1.Warning <= p4.Level then
		warn(v5);
		return;
	end;
	print(v5);
end;
return {
	LogEventRobloxOutputSink = v3
};
