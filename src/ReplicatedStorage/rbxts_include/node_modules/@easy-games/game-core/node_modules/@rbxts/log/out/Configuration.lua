
-- Decompiled with the Synapse X Luau decompiler.

local v1 = _G[script];
local v2 = setmetatable({}, {
	__tostring = function()
		return "LogConfiguration";
	end
});
v2.__index = v2;
function v2.new(...)
	local v3 = setmetatable({}, v2);
	return v3:constructor(...) and v3;
end;
local l__RunService__1 = game:GetService("RunService");
local l__LogLevel__2 = v1.import(script, script.Parent, "Core").LogLevel;
function v2.constructor(p1, p2)
	p1.logger = p2;
	p1.sinks = {};
	p1.enrichers = {};
	p1.logLevel = l__RunService__1:IsStudio() and l__LogLevel__2.Debugging or l__LogLevel__2.Information;
end;
function v2.WriteTo(p3, p4, p5)
	if p5 ~= nil then
		p5(p4);
	end;
	local l__sinks__4 = p3.sinks;
	l__sinks__4[#l__sinks__4 + 1] = p4;
	return p3;
end;
local l__LogEventCallbackSink__3 = v1.import(script, script.Parent, "Core", "LogEventCallbackSink").LogEventCallbackSink;
function v2.WriteToCallback(p6, p7, p8)
	local v5 = l__LogEventCallbackSink__3.new(p7);
	if p8 ~= nil then
		p8(v5);
	end;
	local l__sinks__6 = p6.sinks;
	l__sinks__6[#l__sinks__6 + 1] = v5;
	return p6;
end;
function v2.Enrich(p9, p10)
	if type(p10) == "function" then
		return p9;
	end;
	local l__enrichers__7 = p9.enrichers;
	l__enrichers__7[#l__enrichers__7 + 1] = p10;
	return p9;
end;
local l__LogEventPropertyEnricher__4 = v1.import(script, script.Parent, "Core", "LogEventPropertyEnricher").LogEventPropertyEnricher;
function v2.EnrichWithProperty(p11, p12, p13, p14)
	local v8 = l__LogEventPropertyEnricher__4.new(p12, p13);
	if p14 ~= nil then
		p14(v8);
	end;
	local l__enrichers__9 = p11.enrichers;
	l__enrichers__9[#l__enrichers__9 + 1] = v8;
	return p11;
end;
function v2.SetMinLogLevel(p15, p16)
	p15.logLevel = p16;
	return p15;
end;
function v2.Create(p17)
	p17.logger:_setSinks(p17.sinks);
	p17.logger:_setEnrichers(p17.enrichers);
	p17.logger:_setMinLogLevel(p17.logLevel);
	return p17.logger;
end;
return {
	LogConfiguration = v2
};

