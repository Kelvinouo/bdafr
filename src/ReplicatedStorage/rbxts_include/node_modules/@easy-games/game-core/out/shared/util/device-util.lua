-- Script Hash: e983d01279cc981e5d6a9de6e75557fdf8d154992bf6fa2d0030ae4e19d5f62d8c26b22c6c30d1217d9fbbc4baf6fb3f
-- Decompiled with the Synapse X Luau decompiler.

local v1 = _G[script];
local v2 = v1.import(script, v1.getModule(script, "@rbxts", "services"));
local v3 = {};
local l__RunService__1 = v2.RunService;
local l__UserInputService__2 = v2.UserInputService;
local u3 = nil;
local l__Workspace__4 = v2.Workspace;
u3 = function()
	local l__CurrentCamera__4 = l__Workspace__4.CurrentCamera;
	if not l__CurrentCamera__4 then
		return false;
	end;
	return l__CurrentCamera__4.ViewportSize.Y < 450;
end;
v3.isSmallScreen = u3;
local u5 = (function()
	if l__RunService__1:IsStudio() and l__UserInputService__2.TouchEnabled then
		return true;
	end;
	if l__UserInputService__2.MouseEnabled and l__UserInputService__2.KeyboardEnabled and not u3() then
		return false;
	end;
	return l__UserInputService__2.TouchEnabled;
end)();
function v3.isMobileControls()
	return u5;
end;
function v3.isGamepadControls()
	return l__UserInputService__2.GamepadEnabled and not l__UserInputService__2.MouseEnabled;
end;
local l__Players__6 = v2.Players;
function v3.isHoarceKat()
	local v5 = false;
	if l__Players__6.LocalPlayer == nil then
		v5 = l__RunService__1:IsClient();
	end;
	return v5;
end;
local l__GuiService__7 = v2.GuiService;
local l__DeviceType__8 = v1.import(script, script.Parent.Parent.Parent, "types", "metric-types").DeviceType;
function v3.guessCurrentDeviceType()
	if l__UserInputService__2.MouseEnabled and l__UserInputService__2.KeyboardEnabled then
		if l__GuiService__7.IsWindows then
			return l__DeviceType__8.ComputerWindows;
		else
			return l__DeviceType__8.ComputerOther;
		end;
	end;
	if l__UserInputService__2.TouchEnabled and not l__UserInputService__2.KeyboardEnabled then
		return l__DeviceType__8.Mobile;
	end;
	if l__UserInputService__2.GamepadEnabled and l__GuiService__7:IsTenFootInterface() then
		return l__DeviceType__8.Xbox;
	end;
	return l__DeviceType__8.Unknown;
end;
return {
	DeviceUtil = v3
};
