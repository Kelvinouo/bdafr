-- Decompiled with the Synapse X Luau decompiler.

local v1 = _G[script];
local l__BaseComponent__2 = v1.import(script, v1.getModule(script, "@flamework", "components").out).BaseComponent;
local v3 = setmetatable({}, {
	__tostring = function()
		return "GameComponent";
	end, 
	__index = l__BaseComponent__2
});
v3.__index = v3;
function v3.constructor(p1, ...)
	l__BaseComponent__2.constructor(p1, ...);
end;
local u1 = v1.import(script, v1.getModule(script, "@rbxts", "object-utils"));
function v3.onStart(p2)
	local v4, v5, v6 = ipairs(u1.entries(p2.attributes));
	while true do
		v4(v5, v6);
		if not v4 then
			break;
		end;
		v6 = v4;
		local v7 = v5[1];
		if p2.instance:GetAttribute(v7) == nil then
			p2:setAttribute(v7, v5[2]);
		end;	
	end;
end;
function v3.watchAttribute(p3, p4, p5)
	task.spawn(function()
		p5(p3.attributes[p4]);
	end);
	local v8 = p3.instance:GetAttributeChangedSignal(p4):Connect(function(p6)
		p5(p3.instance:GetAttribute(p4));
	end);
	p3.maid:GiveTask(v8);
	return v8;
end;
function v3.waitForAttribute(p7, p8, p9)
	local v9, v10 = p7:getAttributeAsync(p8, p9):await();
	if v9 then
		return v10;
	end;
	return nil;
end;
function v3.getAttributeAsync(p10, p11, p12)
	local v11 = v1.Promise.new(function(p13)
		local v12 = p10.instance:GetAttribute(p11);
		if v12 ~= 0 and v12 == v12 and v12 ~= "" and v12 then
			p13(v12);
			return nil;
		end;
		local u2 = nil;
		u2 = p10.instance:GetAttributeChangedSignal(p11):Connect(function(p14)
			local v13 = p10.instance:GetAttribute(p11);
			u2:Disconnect();
			p13(v13);
		end);
	end);
	if p12 ~= nil and p12 > 0 then
		v11 = v11:timeout(p12);
	end;
	return v11;
end;
return {
	GameComponent = v3
};
