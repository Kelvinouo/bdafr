-- Decompiled with the Synapse X Luau decompiler.

local v1 = _G[script];
local l__BaseComponent__2 = v1.import(script, v1.getModule(script, "@flamework", "components").out).BaseComponent;
local v3 = setmetatable({}, {
	__tostring = function()
		return "GameComponent";
	end, 
	__index = l__BaseComponent__2
});
v3.__index = v3;
local u1 = l__BaseComponent__2;
function v3.constructor(p1, ...)
	u1.constructor(p1, ...);
end;
local u2 = v1.import(script, v1.getModule(script, "@rbxts", "object-utils"));
function v3.onStart(p2)
	for v4, v5 in ipairs(u2.entries(p2.attributes)) do
		local v6 = v5[1];
		if p2.instance:GetAttribute(v6) == nil then
			p2:setAttribute(v6, v5[2]);
		end;
	end;
end;
function v3.watchAttribute(p3, p4, p5)
	task.spawn(function()
		p5(p3.attributes[p4]);
	end);
	local v7 = p3.instance:GetAttributeChangedSignal(p4):Connect(function(p6)
		p5(p3.instance:GetAttribute(p4));
	end);
	p3.maid:GiveTask(v7);
	return v7;
end;
function v3.waitForAttribute(p7, p8, p9)
	local v8, v9 = p7:getAttributeAsync(p8, p9):await();
	if v8 then
		return v9;
	end;
	return nil;
end;
function v3.getAttributeAsync(p10, p11, p12)
	local v10 = v1.Promise.new(function(p13)
		local v11 = p10.instance:GetAttribute(p11);
		if v11 ~= 0 and v11 == v11 and v11 ~= "" and v11 then
			p13(v11);
			return nil;
		end;
		local u3 = nil;
		u3 = p10.instance:GetAttributeChangedSignal(p11):Connect(function(p14)
			local v12 = p10.instance:GetAttribute(p11);
			u3:Disconnect();
			p13(v12);
		end);
	end);
	if p12 ~= nil and p12 > 0 then
		v10 = v10:timeout(p12);
	end;
	return v10;
end;
u1 = {
	GameComponent = v3
};
return u1;
