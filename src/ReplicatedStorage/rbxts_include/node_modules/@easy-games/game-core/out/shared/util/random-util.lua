-- Decompiled with the Synapse X Luau decompiler.

local v1 = {
	fromList = function(...)
		local v2 = { ... };
		return v2[math.floor(math.random() * #v2) + 1];
	end
};
local function v3(p1, p2)
	if p2 < 1 then
		return {};
	end;
	local v4 = {};
	local v5 = table.create(#p1);
	for v6, v7 in ipairs(p1) do
		v5[v6] = v7;
	end;
	local v8 = 0;
	local v9 = false;
	while true do
		if v9 then
			v8 = v8 + 1;
		else
			v9 = true;
		end;
		if not (v8 < math.min(p2, #p1)) then
			break;
		end;
		local v10 = table.remove(v5, math.floor(math.random() * #v5) + 1);
		if v10 ~= 0 and v10 == v10 and v10 ~= "" and v10 then
			table.insert(v4, v10);
		end;	
	end;
	return v4;
end;
v1.randomArraySelectN = v3;
function v1.shuffleArray(p3)
	return v3(p3, #p3);
end;
return {
	RandomUtil = v1
};
