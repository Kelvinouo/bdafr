
-- Decompiled with the Synapse X Luau decompiler.

local v1 = setmetatable({}, {
	__tostring = function()
		return "GameQueryUtil";
	end
});
v1.__index = v1;
function v1.new(...)
	local v2 = setmetatable({}, v1);
	return v2:constructor(...) and v2;
end;
function v1.constructor(p1)

end;
function v1.isQueryIgnored(p2, p3)
	if not p3:IsA("BasePart") then
		return false;
	end;
	return p3:GetAttribute("gamecore_GameQueryIgnore") == true;
end;
function v1.setQueryIgnored(p4, p5, p6)
	if p6 == nil then
		p6 = true;
	end;
	if not p5:IsA("BasePart") then
		return nil;
	end;
	if p6 then
		local v3 = true;
	else
		v3 = nil;
	end;
	p5:SetAttribute("gamecore_GameQueryIgnore", v3);
end;
function v1.raycast(p7, p8, p9, p10, p11)
	local v4 = nil;
	debug.profilebegin("game-query-raycast");
	if not p10 then
		p10 = RaycastParams.new();
	end;
	local v5 = {};
	local v6 = p10.FilterDescendantsInstances;
	table.move(v6, 1, #v6, #v5 + 1, v5);
	while true do
		local v7 = {};
		table.move(v5, 1, #v5, #v7 + 1, v7);
		p10.FilterDescendantsInstances = v7;
		v4 = game.Workspace:Raycast(p8, p9, p10);
		if v4 then
			if not p7:isQueryIgnored(v4.Instance) then
				local v8 = p11;
				if v8 ~= nil then
					v8 = v8.ignorePart;
				end;
				if not v8 or not p11.ignorePart(v4.Instance) then
					break;
				end;
			end;
			if p10.FilterType == Enum.RaycastFilterType.Blacklist then
				table.insert(v5, v4.Instance);
			else
				local v9 = p10.FilterDescendantsInstances;
				local function v10(p12)
					local v11 = v4;
					if v11 ~= nil then
						v11 = v11.Instance:IsDescendantOf(p12);
					end;
					local v12 = v11;
					if not v12 then
						local v13 = v4;
						if v13 ~= nil then
							v13 = v13.Instance;
						end;
						v12 = v13 == p12;
					end;
					return v12;
				end;
				local v14 = -1;
				for v15, v16 in ipairs(v9) do
					if v10(v16, v15 - 1, v9) == true then
						v14 = v15 - 1;
						break;
					end;
				end;
				table.remove(v5, v14 + 1);
			end;
		end;
		if v4 == nil then
			break;
		end;	
	end;
	debug.profileend();
	return v4;
end;
return {
	GameQueryUtil = v1
};

