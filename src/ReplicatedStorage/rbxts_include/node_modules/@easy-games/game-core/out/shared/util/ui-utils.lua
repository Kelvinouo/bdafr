-- Decompiled with the Synapse X Luau decompiler.

local v1 = _G[script];
local v2 = v1.import(script, v1.getModule(script, "@rbxts", "services"));
local function u1(p1, p2)
	local v3 = nil;
	if p2 == nil then
		p2 = 1;
	end;
	local l__Parent__4 = p1.Parent;
	if not l__Parent__4 then
		warn("Missing parent container in getUIGridStyleLayoutLength()");
		return -1;
	end;
	if p1:IsA("UIGridLayout") then
		local v5 = p1:FindFirstAncestorWhichIsA("ScrollingFrame");
		if v5 ~= nil then
			v5 = v5.ScrollingDirection.Name;
		end;
		if v5 == "Y" then
			local v6 = "Y";
		else
			v6 = "X";
		end;
	else
		local l__Value__7 = p1.FillDirection.Value;
		if l__Value__7 ~= 0 and l__Value__7 == l__Value__7 and l__Value__7 then
			v6 = "Y";
		else
			v6 = "X";
		end;
	end;
	v3 = v6;
	local v8 = 0;
	if p1:IsA("UIListLayout") then
		local v9 = l__Parent__4:GetChildren();
		local u2 = v8;
		local u3 = 0;
		local u4 = p1.Padding.Offset + l__Parent__4.AbsoluteSize[v3] * p1.Padding.Scale;
		local function v10(p3, p4)
			if p3:IsA("GuiObject") then
				if p3.AbsoluteSize[v3] >= 0 then
					if p3.AutomaticSize.Name ~= "None" then
						p3.AutomaticSize = Enum.AutomaticSize.None;
						local l__AbsoluteSize__11 = p3.AbsoluteSize;
						p3.AutomaticSize = Enum.AutomaticSize[v3];
						u2 = u2 + p3.AbsoluteSize[v3];
					else
						u2 = u2 + p3.AbsoluteSize[v3];
					end;
				end;
				u3 = u3 + u4;
			end;
		end;
		local v12 = {};
		local v13 = 0;
		for v14, v15 in ipairs(v9) do
			local v16 = v10(v15, v14 - 1, v9);
			if v16 ~= nil then
				v13 = v13 + 1;
				v12[v13] = v16;
			end;
		end;
		u2 = u2 / p2;
		u2 = u2 + (u3 - u4);
	elseif p1:IsA("UIGridLayout") then
		v8 = p1.AbsoluteContentSize[v3] / p2;
	end;
	return v8;
end;
local u5 = v1.import(script, v1.getModule(script, "@rbxts", "maid").Maid);
local function u6(p5)
	local v17 = {};
	local v18 = p5;
	while not v18:IsA("LayerCollector") or v18.Name ~= "Hoarcekat" do
		local v19 = v18:FindFirstChildOfClass("UIScale");
		if v19 then
			table.insert(v17, v19);
		end;
		if not v18.Parent then
			break;
		end;
		v18 = v18.Parent;	
	end;
	return v17;
end;
local function u7(p6)
	local v20 = nil;
	local v21 = table.create(#p6);
	for v22, v23 in ipairs(p6) do
		v21[v22] = v23.Scale;
	end;
	v20 = 1;
	for v24 = 1, #v21 do
		v20 = v20 * v21[v24];
	end;
	return local v25;
end;
local u8 = {};
local u9 = v1.import(script, v1.getModule(script, "@rbxts", "make"));
local l__ContentProvider__10 = v2.ContentProvider;
local v26 = setmetatable({}, {
	__tostring = function()
		return "UIUtil";
	end
});
v26.__index = v26;
function v26.new(...)
	local v27 = setmetatable({}, v26);
	return v27:constructor(...) and v27;
end;
function v26.constructor(p7)

end;
local l__DeviceUtil__11 = v1.import(script, script.Parent, "device-util").DeviceUtil;
function v26.getActionBarPosition(p8)
	if l__DeviceUtil__11.isSmallScreen() then
		return UDim2.fromScale(0.5, 0.74);
	end;
	return UDim2.fromScale(0.5, 0.85);
end;
function v26.getTopBarPosition(p9)
	return UDim2.fromScale(0.5, 0.02);
end;
function v26.getActionMobileButtonPosition(p10)
	if not l__DeviceUtil__11.isSmallScreen() then
		return UDim2.fromScale(0.75, 0.7);
	end;
	return UDim2.fromScale(0.81, 0.7);
end;
local l__GuiService__12 = v2.GuiService;
local l__Players__13 = v2.Players;
function v26.selectGui(p11, p12)
	if p12 == nil then
		l__GuiService__12.SelectedObject = nil;
		return nil;
	end;
	local l__PlayerGui__28 = l__Players__13.LocalPlayer:WaitForChild("PlayerGui");
	if p12:IsDescendantOf(l__PlayerGui__28) then
		l__GuiService__12.SelectedObject = p12;
		return;
	end;
	local u14 = u5.new();
	u14:GiveTask(l__PlayerGui__28.DescendantAdded:Connect(function(p13)
		if p13 == p12 then
			l__GuiService__12.SelectedObject = p12;
			u14:DoCleaning();
		end;
	end));
end;
local l__TweenService__15 = v2.TweenService;
function v26.setContainerTransparency(p14, p15, p16, p17, p18)
	local u16 = u5.new();
	local function v29(p19, p20)
		local u17 = nil;
		local v30 = p18;
		if v30 ~= nil then
			v30 = v30.exclude;
		end;
		if v30 and table.find(p18.exclude, p19.Name) ~= nil then
			return nil;
		end;
		local v31 = p19:IsA("GuiObject");
		if v31 then
			local v32 = p18;
			if v32 ~= nil then
				v32 = v32.ignoreTextBackgrounds;
			end;
			v31 = not v32 or not p19:IsA("TextLabel");
			if v31 then
				local v33 = p18;
				if v33 ~= nil then
					v33 = v33.ignoreImageBackgrounds;
				end;
				v31 = not v33 or not p19:IsA("ImageLabel");
			end;
		end;
		if v31 then
			local l__BackgroundTransparency__18 = p19.BackgroundTransparency;
			u16:GiveTask(function()
				local v34 = p17;
				if v34 ~= nil then
					v34 = v34.onCleanUpTweenInfo;
				end;
				if not v34 then
					p19.BackgroundTransparency = l__BackgroundTransparency__18;
					return;
				end;
				l__TweenService__15:Create(p19, p17.onCleanUpTweenInfo, {
					BackgroundTransparency = l__BackgroundTransparency__18
				}):Play();
			end);
			local v35 = p17;
			if v35 ~= nil then
				v35 = v35.onSetTweenInfo;
			end;
			if v35 then
				l__TweenService__15:Create(p19, p17.onSetTweenInfo, {
					BackgroundTransparency = p20
				}):Play();
			else
				p19.BackgroundTransparency = p20;
			end;
		elseif p19:IsA("UIStroke") then
			local l__Transparency__19 = p19.Transparency;
			u16:GiveTask(function()
				local v36 = p17;
				if v36 ~= nil then
					v36 = v36.onCleanUpTweenInfo;
				end;
				if not v36 then
					p19.Transparency = l__Transparency__19;
					return;
				end;
				l__TweenService__15:Create(p19, p17.onCleanUpTweenInfo, {
					Transparency = l__Transparency__19
				}):Play();
			end);
			local v37 = p17;
			if v37 ~= nil then
				v37 = v37.onSetTweenInfo;
			end;
			if v37 then
				l__TweenService__15:Create(p19, p17.onSetTweenInfo, {
					Transparency = p20
				}):Play();
			else
				p19.Transparency = p20;
			end;
		end;
		if p19:IsA("ImageLabel") then
			local l__ImageTransparency__20 = p19.ImageTransparency;
			u16:GiveTask(function()
				local v38 = p17;
				if v38 ~= nil then
					v38 = v38.onCleanUpTweenInfo;
				end;
				if not v38 then
					p19.ImageTransparency = l__ImageTransparency__20;
					return;
				end;
				l__TweenService__15:Create(p19, p17.onCleanUpTweenInfo, {
					ImageTransparency = l__ImageTransparency__20
				}):Play();
			end);
			local v39 = p17;
			if v39 ~= nil then
				v39 = v39.onSetTweenInfo;
			end;
			if v39 then
				l__TweenService__15:Create(p19, p17.onSetTweenInfo, {
					ImageTransparency = p20
				}):Play();
			else
				p19.ImageTransparency = p20;
			end;
		end;
		if p19:IsA("TextLabel") then
			u17 = p19;
			local l__TextTransparency__21 = p19.TextTransparency;
			u16:GiveTask(function()
				local v40 = p17;
				if v40 ~= nil then
					v40 = v40.onCleanUpTweenInfo;
				end;
				if not v40 then
					u17.TextTransparency = l__TextTransparency__21;
					return;
				end;
				l__TweenService__15:Create(u17, p17.onCleanUpTweenInfo, {
					TextTransparency = l__TextTransparency__21
				}):Play();
			end);
			local v41 = p17;
			if v41 ~= nil then
				v41 = v41.onSetTweenInfo;
			end;
			if not v41 then
				u17.TextTransparency = p20;
				return;
			end;
		else
			return;
		end;
		l__TweenService__15:Create(u17, p17.onSetTweenInfo, {
			TextTransparency = p20
		}):Play();
	end;
	v29(p15, p16);
	for v42, v43 in ipairs((p15:GetDescendants())) do
		v29(v43, p16);
	end;
	local v44 = p17;
	if v44 ~= nil then
		v44 = v44.durationTillCleanUp;
	end;
	if v44 ~= 0 and v44 == v44 and v44 then
		task.delay(p17.durationTillCleanUp, function()
			u16:DoCleaning();
		end);
	end;
	return u16;
end;
return {
	GetUIScaleAncestors = u6, 
	CalcTotalUIScale = u7, 
	DynamicCalcContainerSize = function(p21, p22, p23)
		if p23 == nil then
			p23 = 0;
		end;
		p22 = p22 or p21:FindFirstChildWhichIsA("UIGridStyleLayout");
		if not p22 then
			warn("Missing UIGridStyleLayout Child");
			return nil;
		end;
		local l__Value__45 = p22.FillDirection.Value;
		if l__Value__45 ~= 0 and l__Value__45 == l__Value__45 and l__Value__45 then
			local v46 = "Y";
		else
			v46 = "X";
		end;
		local u22 = p21.Parent:FindFirstChildOfClass("UIScale");
		local function v47()
			local v48 = u1(p22);
			if u22 then
				v48 = v48 / u22.Scale;
			end;
			if v46 == "X" then
				p21.Size = UDim2.new(0, v48 + p23, p21.Size.X.Scale, p21.Size.X.Offset);
				return;
			end;
			if v46 == "Y" then
				p21.Size = UDim2.new(p21.Size.X.Scale, p21.Size.X.Offset, 0, v48 + p23);
			end;
		end;
		v47();
		local u23 = p22:GetPropertyChangedSignal("AbsoluteContentSize"):Connect(v47);
		return function()
			u23:Disconnect();
		end;
	end, 
	DynamicCalcCanvasSize = function(p24, p25, p26)
		local v49 = u5.new();
		if not p24 then
			warn("Missing ScrollFrame Ref");
			return nil;
		end;
		local v50 = p24:FindFirstChildWhichIsA("UIGridStyleLayout");
		if not v50 then
			warn("Missing UIGridStyleLayout Child");
			return nil;
		end;
		if v50:IsA("UIGridLayout") then
			if p24.ScrollingDirection.Name == "Y" then
				local v51 = "Y";
			else
				v51 = "X";
			end;
		else
			local l__Value__52 = v50.FillDirection.Value;
			if l__Value__52 ~= 0 and l__Value__52 == l__Value__52 and l__Value__52 then
				v51 = "Y";
			else
				v51 = "X";
			end;
		end;
		local u24 = u6(v50);
		local u25 = 1;
		local u26 = p24:FindFirstChildWhichIsA("UISizeConstraint");
		local u27 = 0;
		local function v53(p27, p28)
			if p28 == nil then
				p28 = 0;
			end;
			if v51 == "X" then
				p24.CanvasSize = UDim2.new(0, p27 + p28, 0, p24.AbsoluteSize.Y / u25);
			elseif v51 == "Y" then
				p24.CanvasSize = UDim2.new(0, p24.AbsoluteSize.X / u25, 0, p27 + p28);
			end;
			p25(p24);
		end;
		u25 = u7(u24);
		u27 = u1(v50, u25);
		(function()
			local v54 = p24:FindFirstChildWhichIsA("UIPadding");
			if not v54 then
				return nil;
			end;
			if v51 == "X" then
				local v55 = v54;
				if v55 ~= nil then
					v55 = v55.PaddingLeft.Offset;
				end;
				local v56 = v54;
				if v56 ~= nil then
					v56 = v56.PaddingLeft.Scale;
				end;
				local v57 = v54;
				if v57 ~= nil then
					v57 = v57.PaddingRight.Offset;
				end;
				local v58 = v54;
				if v58 ~= nil then
					v58 = v58.PaddingRight.Scale;
				end;
				u27 = u27 + (v55 + v56 * u27 + (v57 + v58 * u27));
				return;
			end;
			local v59 = v54;
			if v59 ~= nil then
				v59 = v59.PaddingTop.Offset;
			end;
			local v60 = v54;
			if v60 ~= nil then
				v60 = v60.PaddingTop.Scale;
			end;
			local v61 = v54;
			if v61 ~= nil then
				v61 = v61.PaddingBottom.Offset;
			end;
			local v62 = v54;
			if v62 ~= nil then
				v62 = v62.PaddingBottom.Scale;
			end;
			u27 = u27 + (v59 + v60 * u27 + (v61 + v62 * u27));
		end)();
		if u26 and u26.MaxSize[v51] < u27 then
			u27 = u26.MaxSize[v51];
		end;
		local v63 = p26;
		if v63 ~= nil then
			v63 = v63.additionalSpace;
		end;
		v53(u27, v63);
		if v50:IsA("UIGridLayout") then
			local u28 = true;
			v49:GiveTask(v50:GetPropertyChangedSignal("AbsoluteContentSize"):Connect(function()
				if u28 then
					u28 = false;
					return;
				end;
				u27 = u1(v50, u25);
				v53(u27);
			end));
		end;
		return v49;
	end, 
	preloadImages = function(p29)
		v1.Promise.defer(function()
			local v64 = {};
			local v65 = 0;
			local v66, v67, v68 = ipairs(p29);
			while true do
				local v69, v70 = v66(v67, v68);
				if not v69 then
					break;
				end;
				if u8[v70] == nil == true then
					v65 = v65 + 1;
					v64[v65] = v70;
				end;			
			end;
			local v71 = table.create(#v64);
			for v72, v73 in ipairs(v64) do
				u8[v73] = true;
				v71[v72] = u9("ImageLabel", {
					Image = v73
				});
			end;
			l__ContentProvider__10:PreloadAsync(v71);
		end);
	end, 
	UIUtil = v26
};
