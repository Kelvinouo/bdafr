-- Decompiled with the Synapse X Luau decompiler.

local v1 = _G[script];
local u1 = {
	BLANK_CHARACTER = " \226\128\142", 
	fromNow = function(p1, p2)
		local v2 = p2.seconds;
		if v2 == nil then
			v2 = true;
		end;
		local v3 = p2.minutes;
		if v3 == nil then
			v3 = true;
		end;
		local v4 = p2.hours;
		if v4 == nil then
			v4 = true;
		end;
		local v5 = p2.days;
		if v5 == nil then
			v5 = true;
		end;
		local v6 = p2.weeks;
		if v6 == nil then
			v6 = true;
		end;
		local v7 = p2.seperator;
		if v7 == nil then
			v7 = " ";
		end;
		local v8 = p2.hideIfZero;
		if v8 == nil then
			v8 = false;
		end;
		local v9 = p2.upperCase;
		if v9 == nil then
			v9 = false;
		end;
		local v10 = p2.long;
		if v10 == nil then
			v10 = false;
		end;
		local v11 = p2.maxLength;
		if v11 == nil then
			v11 = math.huge;
		end;
		local u2 = math.max(0, p1 - os.time());
		local u3 = 0;
		local u4 = "";
		if v6 then
			if u2 < 0 then
				local v12 = nil;
			else
				local v13 = math.floor(u2 / 60 / 60 / 24 / 7);
				u2 = u2 - v13 * 604800;
				v12 = v13;
			end;
			if v10 then
				local v14 = " weeks";
			else
				v14 = "w";
			end;
			local v15 = tostring(v12) .. v14;
			if (not v8 or v12 ~= 0 and v12 == v12 and not (not v12)) and not (v11 <= u3) then
				u4 = u4 .. v15 .. v7;
				u3 = u3 + 1;
			end;
		end;
		if v5 then
			if u2 < 0 then
				local v16 = nil;
			else
				local v17 = math.floor(u2 / 60 / 60 / 24);
				u2 = u2 - v17 * 86400;
				v16 = v17;
			end;
			if v10 then
				local v18 = " days";
			else
				v18 = "d";
			end;
			local v19 = tostring(v16) .. v18;
			if (not v8 or v16 ~= 0 and v16 == v16 and not (not v16)) and not (v11 <= u3) then
				u4 = u4 .. v19 .. v7;
				u3 = u3 + 1;
			end;
		end;
		if v4 then
			if u2 < 0 then
				local v20 = nil;
			else
				local v21 = math.floor(u2 / 60 / 60);
				u2 = u2 - v21 * 3600;
				v20 = v21;
			end;
			if v10 then
				local v22 = " hours";
			else
				v22 = "h";
			end;
			local v23 = tostring(v20) .. v22;
			if (not v8 or v20 ~= 0 and v20 == v20 and not (not v20)) and not (v11 <= u3) then
				u4 = u4 .. v23 .. v7;
				u3 = u3 + 1;
			end;
		end;
		if v3 then
			if u2 < 0 then
				local v24 = nil;
			else
				local v25 = math.floor(u2 / 60);
				u2 = u2 - v25 * 60;
				v24 = v25;
			end;
			if v10 then
				local v26 = " minutes";
			else
				v26 = "m";
			end;
			local v27 = tostring(v24) .. v26;
			if (not v8 or v24 ~= 0 and v24 == v24 and not (not v24)) and not (v11 <= u3) then
				u4 = u4 .. v27 .. v7;
				u3 = u3 + 1;
			end;
		end;
		if v2 then
			if u2 < 0 then
				local v28 = nil;
			else
				local v29 = math.floor(u2);
				u2 = u2 - v29;
				v28 = v29;
			end;
			if v10 then
				local v30 = " seconds";
			else
				v30 = "s";
			end;
			local v31 = tostring(v28) .. v30;
			if (not v8 or v28 ~= 0 and v28 == v28 and not (not v28)) and not (v11 <= u3) then
				u4 = u4 .. v31 .. v7;
				u3 = u3 + 1;
			end;
		end;
		if v9 then
			local v32 = string.upper(u4);
		else
			v32 = u4;
		end;
		return v32;
	end, 
	formatCountdownTime = function(p3, p4)
		local v33 = {};
		if type(p4) == "table" then
			for v34, v35 in pairs(p4) do
				v33[v34] = v35;
			end;
		end;
		local v36 = v33.minutes;
		if v36 == nil then
			v36 = true;
		end;
		local v37 = math.floor(p3 / 86400);
		local v38 = tostring(v37) .. "";
		local v39 = p4;
		if v39 ~= nil then
			v39 = v39.days;
		end;
		if v39 then
			p3 = p3 - v37 * 86400;
		end;
		local v40 = math.floor(p3 / 3600);
		local v41 = tostring(v40) .. "";
		local v42 = p4;
		if v42 ~= nil then
			v42 = v42.hours;
		end;
		if v42 then
			p3 = p3 - v40 * 3600;
		end;
		local v43 = math.floor(p3 / 60);
		local v44 = tostring(v43) .. "";
		if v36 then
			p3 = p3 - v43 * 60;
		end;
		local v45 = p4;
		if v45 ~= nil then
			v45 = v45.decimalPoints;
		end;
		local v46 = v45;
		if v46 ~= 0 and v46 == v46 and v46 then
			local v47 = p4;
			if v47 ~= nil then
				v47 = v47.decimalPoints;
			end;
			v46 = v47 > 0;
		end;
		if v46 ~= 0 and v46 == v46 and v46 then
			local v48 = u1.roundNumber(p3 % 60, p4.decimalPoints);
		else
			v48 = tostring(math.floor(p3 % 60)) .. "";
		end;
		if #v38 == 0 then
			v38 = "00";
		else
			local v49 = #v38 == 1;
			if v49 then
				local v50 = p4;
				if v50 ~= nil then
					v50 = v50.disablePadding;
				end;
				v49 = not v50;
			end;
			if v49 then
				v38 = "0" .. v38;
			end;
		end;
		if #v41 == 0 then
			v41 = "00";
		else
			local v51 = #v41 == 1;
			if v51 then
				local v52 = p4;
				if v52 ~= nil then
					v52 = v52.disablePadding;
				end;
				v51 = not v52;
			end;
			if v51 then
				v41 = "0" .. v41;
			end;
		end;
		if #v44 == 0 then
			v44 = "00";
		else
			local v53 = #v44 == 1;
			if v53 then
				local v54 = p4;
				if v54 ~= nil then
					v54 = v54.disablePadding;
				end;
				v53 = not v54;
			end;
			if v53 then
				v44 = "0" .. v44;
			end;
		end;
		if #v48 == 0 then
			v48 = "00";
		else
			local v55 = #v48 == 1;
			if v55 then
				local v56 = p4;
				if v56 ~= nil then
					v56 = v56.disablePadding;
				end;
				v55 = not v56;
			end;
			if v55 then
				v48 = "0" .. v48;
			end;
		end;
		local v57 = p4;
		if v57 ~= nil then
			v57 = v57.seperator;
		end;
		local v58 = v57;
		if v58 == nil then
			v58 = ":";
		end;
		local v59 = v48;
		if v36 then
			v59 = v44 .. v58 .. v59;
		end;
		local v60 = p4;
		if v60 ~= nil then
			v60 = v60.hours;
		end;
		if v60 then
			v59 = v41 .. v58 .. v59;
		end;
		local v61 = p4;
		if v61 ~= nil then
			v61 = v61.days;
		end;
		if v61 then
			v59 = v38 .. v58 .. v59;
		end;
		return v59;
	end, 
	capitalizeFirstLetter = function(p5)
		if #p5 <= 1 then
			return string.upper(p5);
		end;
		return string.upper(string.sub(p5, 1, 1)) .. string.lower(string.sub(p5, 2));
	end, 
	formatNumberShorthand = function(p6)
		if p6 < 1000 then
			return tostring(p6) .. "";
		end;
		if p6 < 1000000 then
			return tostring(math.floor(p6 / 1000 * 10) / 10) .. "k";
		end;
		if p6 < 1000000000 then
			return tostring(math.floor(p6 / 1000000 * 10) / 10) .. "M";
		end;
		return tostring(math.floor(p6 / 1000000000 * 10) / 10) .. "B";
	end, 
	formatNumberWithCommas = function(p7)
		local v62 = tostring(p7);
		return string.reverse((string.gsub(string.reverse(v62), "...", "%0,", (math.floor((#v62 - 1) / 3)))));
	end
};
local u5 = v1.import(script, v1.getModule(script, "@rbxts", "string-utils"));
u1.fuzzySearch = v1.async(function(p8, p9)
	local v63 = string.lower(p8);
	local u6 = {};
	local v64 = {};
	local v65 = 0;
	local v66, v67, v68 = ipairs(p9);
	while true do
		v66(v67, v68);
		if not v66 then
			break;
		end;
		if table.find(u6, v67) == nil == true then
			v65 = v65 + 1;
			v64[v65] = v67;
		end;	
	end;
	local v69 = {};
	local v70 = 0;
	local v71, v72, v73 = ipairs(v64);
	while true do
		v71(v72, v73);
		if not v71 then
			break;
		end;
		if string.lower(v72) == v63 == true then
			v70 = v70 + 1;
			v69[v70] = v72;
		end;	
	end;
	local v74, v75, v76 = ipairs(v69);
	while true do
		v74(v75, v76);
		if not v74 then
			break;
		end;
		v76 = v74;
		table.insert(u6, v75);	
	end;
	local v77 = {};
	local v78 = 0;
	local v79, v80, v81 = ipairs(p9);
	while true do
		v79(v80, v81);
		if not v79 then
			break;
		end;
		if table.find(u6, v80) == nil == true then
			v78 = v78 + 1;
			v77[v78] = v80;
		end;	
	end;
	local v82 = {};
	local v83 = 0;
	local v84, v85, v86 = ipairs(v77);
	while true do
		v84(v85, v86);
		if not v84 then
			break;
		end;
		v86 = v84;
		if u5.startsWith(string.lower(v85), v63) == true then
			v83 = v83 + 1;
			v82[v83] = v85;
		end;	
	end;
	local v87, v88, v89 = ipairs(v82);
	while true do
		v87(v88, v89);
		if not v87 then
			break;
		end;
		v89 = v87;
		table.insert(u6, v88);	
	end;
	local v90 = {};
	local v91 = 0;
	local v92, v93, v94 = ipairs(p9);
	while true do
		v92(v93, v94);
		if not v92 then
			break;
		end;
		if table.find(u6, v93) == nil == true then
			v91 = v91 + 1;
			v90[v91] = v93;
		end;	
	end;
	local v95 = {};
	local v96 = 0;
	local v97, v98, v99 = ipairs(v90);
	while true do
		v97(v98, v99);
		if not v97 then
			break;
		end;
		v99 = v97;
		if u5.includes(string.lower(v98), v63) == true then
			v96 = v96 + 1;
			v95[v96] = v98;
		end;	
	end;
	local v100, v101, v102 = ipairs(v95);
	while true do
		v100(v101, v102);
		if not v100 then
			break;
		end;
		v102 = v100;
		table.insert(u6, v101);	
	end;
	return u6;
end);
function u1.roundNumber(p10, p11)
	return string.format("%." .. tostring(p11) .. "f", p10);
end;
function u1.formatPercentage(p12, p13, p14)
	local v103 = p14;
	if v103 == nil then
		v103 = 2;
	end;
	return u1.roundNumber(p12 / p13 * 100, v103) .. "%";
end;
function u1.lastIndexOf(p15, p16)
	local v104 = 0;
	local v105 = true;
	while true do
		if v104 ~= 0 and v104 == v104 and v104 then
			local v106 = v104 + 1;
		else
			v106 = v104;
		end;
		local v107 = select(2, string.find(p15, p16, v106));
		if v107 ~= 0 and v107 == v107 and v107 then
			v104 = v107;
		else
			v105 = false;
		end;
		if not v105 then
			break;
		end;	
	end;
	return v104;
end;
return {
	StringUtil = u1
};
