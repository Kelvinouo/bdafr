-- Script Hash: da735408e3677888c8dbe235e6a0f7203a58310983782a4dc31180ab1eb14ae41a5e08e5bd450dab46d42584871f2234
-- Decompiled with the Synapse X Luau decompiler.

local v1 = _G[script];
local v2 = {
	BLANK_CHARACTER = " \226\128\142", 
	fromNow = function(p1, p2)
		local v3 = p2.seconds;
		if v3 == nil then
			v3 = true;
		end;
		local v4 = p2.minutes;
		if v4 == nil then
			v4 = true;
		end;
		local v5 = p2.hours;
		if v5 == nil then
			v5 = true;
		end;
		local v6 = p2.days;
		if v6 == nil then
			v6 = true;
		end;
		local v7 = p2.weeks;
		if v7 == nil then
			v7 = true;
		end;
		local v8 = p2.seperator;
		if v8 == nil then
			v8 = " ";
		end;
		local v9 = p2.hideIfZero;
		if v9 == nil then
			v9 = false;
		end;
		local v10 = p2.upperCase;
		if v10 == nil then
			v10 = false;
		end;
		local v11 = p2.long;
		if v11 == nil then
			v11 = false;
		end;
		local v12 = p2.maxLength;
		if v12 == nil then
			v12 = math.huge;
		end;
		local u1 = math.max(0, p1 - os.time());
		local u2 = 0;
		local u3 = "";
		local function v13(p3, p4)
			if v9 and (p4 == 0 or p4 ~= p4 or not p4) then
				return nil;
			end;
			if v12 <= u2 then
				return nil;
			end;
			u3 = u3 .. p3 .. v8;
			u2 = u2 + 1;
		end;
		if v7 then
			local v14 = (function()
				if u1 < 0 then
					return nil;
				end;
				local v15 = math.floor(u1 / 60 / 60 / 24 / 7);
				u1 = u1 - v15 * 604800;
				return v15;
			end)();
			if v11 then
				local v16 = " weeks";
			else
				v16 = "w";
			end;
			v13(tostring(v14) .. v16, v14);
		end;
		if v6 then
			local v17 = (function()
				if u1 < 0 then
					return nil;
				end;
				local v18 = math.floor(u1 / 60 / 60 / 24);
				u1 = u1 - v18 * 86400;
				return v18;
			end)();
			if v11 then
				local v19 = " days";
			else
				v19 = "d";
			end;
			v13(tostring(v17) .. v19, v17);
		end;
		if v5 then
			local v20 = (function()
				if u1 < 0 then
					return nil;
				end;
				local v21 = math.floor(u1 / 60 / 60);
				u1 = u1 - v21 * 3600;
				return v21;
			end)();
			if v11 then
				local v22 = " hours";
			else
				v22 = "h";
			end;
			v13(tostring(v20) .. v22, v20);
		end;
		if v4 then
			local v23 = (function()
				if u1 < 0 then
					return nil;
				end;
				local v24 = math.floor(u1 / 60);
				u1 = u1 - v24 * 60;
				return v24;
			end)();
			if v11 then
				local v25 = " minutes";
			else
				v25 = "m";
			end;
			v13(tostring(v23) .. v25, v23);
		end;
		if v3 then
			local v26 = (function()
				if u1 < 0 then
					return nil;
				end;
				local v27 = math.floor(u1);
				u1 = u1 - v27;
				return v27;
			end)();
			if v11 then
				local v28 = " seconds";
			else
				v28 = "s";
			end;
			v13(tostring(v26) .. v28, v26);
		end;
		if v10 then
			local v29 = string.upper(u3);
		else
			v29 = u3;
		end;
		return v29;
	end
};
function v2.formatCountdownTime(p5, p6)
	local v30 = {};
	if type(p6) == "table" then
		for v31, v32 in pairs(p6) do
			v30[v31] = v32;
		end;
	end;
	local v33 = v30.minutes;
	if v33 == nil then
		v33 = true;
	end;
	local v34 = math.floor(p5 / 86400);
	local v35 = tostring(v34) .. "";
	local v36 = p6;
	if v36 ~= nil then
		v36 = v36.days;
	end;
	if v36 then
		p5 = p5 - v34 * 86400;
	end;
	local v37 = math.floor(p5 / 3600);
	local v38 = tostring(v37) .. "";
	local v39 = p6;
	if v39 ~= nil then
		v39 = v39.hours;
	end;
	if v39 then
		p5 = p5 - v37 * 3600;
	end;
	local v40 = math.floor(p5 / 60);
	local v41 = tostring(v40) .. "";
	if v33 then
		p5 = p5 - v40 * 60;
	end;
	local v42 = p6;
	if v42 ~= nil then
		v42 = v42.decimalPoints;
	end;
	local v43 = v42;
	if v43 ~= 0 and v43 == v43 and v43 then
		local v44 = p6;
		if v44 ~= nil then
			v44 = v44.decimalPoints;
		end;
		v43 = v44 > 0;
	end;
	if v43 ~= 0 and v43 == v43 and v43 then
		local v45 = v2.roundNumber(p5 % 60, p6.decimalPoints);
	else
		v45 = tostring(math.floor(p5 % 60)) .. "";
	end;
	if #v35 == 0 then
		v35 = "00";
	else
		local v46 = #v35 == 1;
		if v46 then
			local v47 = p6;
			if v47 ~= nil then
				v47 = v47.disablePadding;
			end;
			v46 = not v47;
		end;
		if v46 then
			v35 = "0" .. v35;
		end;
	end;
	if #v38 == 0 then
		v38 = "00";
	else
		local v48 = #v38 == 1;
		if v48 then
			local v49 = p6;
			if v49 ~= nil then
				v49 = v49.disablePadding;
			end;
			v48 = not v49;
		end;
		if v48 then
			v38 = "0" .. v38;
		end;
	end;
	if #v41 == 0 then
		v41 = "00";
	else
		local v50 = #v41 == 1;
		if v50 then
			local v51 = p6;
			if v51 ~= nil then
				v51 = v51.disablePadding;
			end;
			v50 = not v51;
		end;
		if v50 then
			v41 = "0" .. v41;
		end;
	end;
	if #v45 == 0 then
		v45 = "00";
	else
		local v52 = #v45 == 1;
		if v52 then
			local v53 = p6;
			if v53 ~= nil then
				v53 = v53.disablePadding;
			end;
			v52 = not v53;
		end;
		if v52 then
			v45 = "0" .. v45;
		end;
	end;
	local v54 = p6;
	if v54 ~= nil then
		v54 = v54.seperator;
	end;
	local v55 = v54;
	if v55 == nil then
		v55 = ":";
	end;
	local v56 = v45;
	if v33 then
		v56 = v41 .. v55 .. v56;
	end;
	local v57 = p6;
	if v57 ~= nil then
		v57 = v57.hours;
	end;
	if v57 then
		v56 = v38 .. v55 .. v56;
	end;
	local v58 = p6;
	if v58 ~= nil then
		v58 = v58.days;
	end;
	if v58 then
		v56 = v35 .. v55 .. v56;
	end;
	return v56;
end;
function v2.capitalizeFirstLetter(p7)
	if #p7 <= 1 then
		return string.upper(p7);
	end;
	return string.upper(string.sub(p7, 1, 1)) .. string.lower(string.sub(p7, 2));
end;
function v2.formatNumberShorthand(p8)
	if p8 < 1000 then
		return tostring(p8) .. "";
	end;
	if p8 < 1000000 then
		return tostring(math.floor(p8 / 1000 * 10) / 10) .. "k";
	end;
	if p8 < 1000000000 then
		return tostring(math.floor(p8 / 1000000 * 10) / 10) .. "M";
	end;
	return tostring(math.floor(p8 / 1000000000 * 10) / 10) .. "B";
end;
function v2.formatNumberWithCommas(p9)
	local v59 = tostring(p9);
	return string.reverse((string.gsub(string.reverse(v59), "...", "%0,", (math.floor((#v59 - 1) / 3)))));
end;
local u4 = v1.import(script, v1.getModule(script, "@rbxts", "string-utils"));
v2.fuzzySearch = v1.async(function(p10, p11)
	local u5 = {};
	local function v60(p12)
		return table.find(u5, p12) == nil;
	end;
	local v61 = {};
	local v62 = 0;
	for v63, v64 in ipairs(p11) do
		if v60(v64, v63 - 1, p11) == true then
			v62 = v62 + 1;
			v61[v62] = v64;
		end;
	end;
	local u6 = string.lower(p10);
	local function v65(p13)
		return string.lower(p13) == u6;
	end;
	local v66 = {};
	local v67 = 0;
	for v68, v69 in ipairs(v61) do
		if v65(v69, v68 - 1, v61) == true then
			v67 = v67 + 1;
			v66[v67] = v69;
		end;
	end;
	local function v70(p14)
		table.insert(u5, p14);
		return #u5;
	end;
	for v71, v72 in ipairs(v66) do
		v70(v72, v71 - 1, v66);
	end;
	local function v73(p15)
		return table.find(u5, p15) == nil;
	end;
	local v74 = {};
	local v75 = 0;
	for v76, v77 in ipairs(p11) do
		if v73(v77, v76 - 1, p11) == true then
			v75 = v75 + 1;
			v74[v75] = v77;
		end;
	end;
	local function v78(p16)
		return u4.startsWith(string.lower(p16), u6);
	end;
	local v79 = {};
	local v80 = 0;
	for v81, v82 in ipairs(v74) do
		if v78(v82, v81 - 1, v74) == true then
			v80 = v80 + 1;
			v79[v80] = v82;
		end;
	end;
	local function v83(p17)
		table.insert(u5, p17);
		return #u5;
	end;
	for v84, v85 in ipairs(v79) do
		v83(v85, v84 - 1, v79);
	end;
	local function v86(p18)
		return table.find(u5, p18) == nil;
	end;
	local v87 = {};
	local v88 = 0;
	for v89, v90 in ipairs(p11) do
		if v86(v90, v89 - 1, p11) == true then
			v88 = v88 + 1;
			v87[v88] = v90;
		end;
	end;
	local function v91(p19)
		return u4.includes(string.lower(p19), u6);
	end;
	local v92 = {};
	local v93 = 0;
	for v94, v95 in ipairs(v87) do
		if v91(v95, v94 - 1, v87) == true then
			v93 = v93 + 1;
			v92[v93] = v95;
		end;
	end;
	local function v96(p20)
		table.insert(u5, p20);
		return #u5;
	end;
	for v97, v98 in ipairs(v92) do
		v96(v98, v97 - 1, v92);
	end;
	return u5;
end);
function v2.roundNumber(p21, p22)
	return string.format("%." .. tostring(p22) .. "f", p21);
end;
function v2.formatPercentage(p23, p24, p25)
	local v99 = p25;
	if v99 == nil then
		v99 = 2;
	end;
	return v2.roundNumber(p23 / p24 * 100, v99) .. "%";
end;
return {
	StringUtil = v2
};
