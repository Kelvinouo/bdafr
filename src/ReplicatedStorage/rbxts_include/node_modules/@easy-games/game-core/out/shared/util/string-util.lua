-- Decompiled with the Synapse X Luau decompiler.

local v1 = _G[script];
local v2 = {
	BLANK_CHARACTER = " \226\128\142", 
	fromNow = function(p1, p2)
		local v3 = p2.seconds;
		if v3 == nil then
			v3 = true;
		end;
		local v4 = p2.minutes;
		if v4 == nil then
			v4 = true;
		end;
		local v5 = p2.hours;
		if v5 == nil then
			v5 = true;
		end;
		local v6 = p2.days;
		if v6 == nil then
			v6 = true;
		end;
		local v7 = p2.weeks;
		if v7 == nil then
			v7 = true;
		end;
		local v8 = p2.seperator;
		if v8 == nil then
			v8 = " ";
		end;
		local v9 = p2.hideIfZero;
		if v9 == nil then
			v9 = false;
		end;
		local v10 = p2.upperCase;
		if v10 == nil then
			v10 = false;
		end;
		local v11 = p2.long;
		if v11 == nil then
			v11 = false;
		end;
		local v12 = p2.maxLength;
		if v12 == nil then
			v12 = math.huge;
		end;
		local u1 = math.max(0, p1 - os.time());
		local u2 = 0;
		local u3 = "";
		if v7 then
			if u1 < 0 then
				local v13 = nil;
			else
				local v14 = math.floor(u1 / 60 / 60 / 24 / 7);
				u1 = u1 - v14 * 604800;
				v13 = v14;
			end;
			if v11 then
				local v15 = " weeks";
			else
				v15 = "w";
			end;
			local v16 = tostring(v13) .. v15;
			if (not v9 or v13 ~= 0 and v13 == v13 and not (not v13)) and not (v12 <= u2) then
				u3 = u3 .. v16 .. v8;
				u2 = u2 + 1;
			end;
		end;
		if v6 then
			if u1 < 0 then
				local v17 = nil;
			else
				local v18 = math.floor(u1 / 60 / 60 / 24);
				u1 = u1 - v18 * 86400;
				v17 = v18;
			end;
			if v11 then
				local v19 = " days";
			else
				v19 = "d";
			end;
			local v20 = tostring(v17) .. v19;
			if (not v9 or v17 ~= 0 and v17 == v17 and not (not v17)) and not (v12 <= u2) then
				u3 = u3 .. v20 .. v8;
				u2 = u2 + 1;
			end;
		end;
		if v5 then
			if u1 < 0 then
				local v21 = nil;
			else
				local v22 = math.floor(u1 / 60 / 60);
				u1 = u1 - v22 * 3600;
				v21 = v22;
			end;
			if v11 then
				local v23 = " hours";
			else
				v23 = "h";
			end;
			local v24 = tostring(v21) .. v23;
			if (not v9 or v21 ~= 0 and v21 == v21 and not (not v21)) and not (v12 <= u2) then
				u3 = u3 .. v24 .. v8;
				u2 = u2 + 1;
			end;
		end;
		if v4 then
			if u1 < 0 then
				local v25 = nil;
			else
				local v26 = math.floor(u1 / 60);
				u1 = u1 - v26 * 60;
				v25 = v26;
			end;
			if v11 then
				local v27 = " minutes";
			else
				v27 = "m";
			end;
			local v28 = tostring(v25) .. v27;
			if (not v9 or v25 ~= 0 and v25 == v25 and not (not v25)) and not (v12 <= u2) then
				u3 = u3 .. v28 .. v8;
				u2 = u2 + 1;
			end;
		end;
		if v3 then
			if u1 < 0 then
				local v29 = nil;
			else
				local v30 = math.floor(u1);
				u1 = u1 - v30;
				v29 = v30;
			end;
			if v11 then
				local v31 = " seconds";
			else
				v31 = "s";
			end;
			local v32 = tostring(v29) .. v31;
			if (not v9 or v29 ~= 0 and v29 == v29 and not (not v29)) and not (v12 <= u2) then
				u3 = u3 .. v32 .. v8;
				u2 = u2 + 1;
			end;
		end;
		if v10 then
			local v33 = string.upper(u3);
		else
			v33 = u3;
		end;
		return v33;
	end
};
function v2.formatCountdownTime(p3, p4)
	local v34 = {};
	if type(p4) == "table" then
		for v35, v36 in pairs(p4) do
			v34[v35] = v36;
		end;
	end;
	local v37 = v34.minutes;
	if v37 == nil then
		v37 = true;
	end;
	local v38 = math.floor(p3 / 86400);
	local v39 = tostring(v38) .. "";
	local v40 = p4;
	if v40 ~= nil then
		v40 = v40.days;
	end;
	if v40 then
		p3 = p3 - v38 * 86400;
	end;
	local v41 = math.floor(p3 / 3600);
	local v42 = tostring(v41) .. "";
	local v43 = p4;
	if v43 ~= nil then
		v43 = v43.hours;
	end;
	if v43 then
		p3 = p3 - v41 * 3600;
	end;
	local v44 = math.floor(p3 / 60);
	local v45 = tostring(v44) .. "";
	if v37 then
		p3 = p3 - v44 * 60;
	end;
	local v46 = p4;
	if v46 ~= nil then
		v46 = v46.decimalPoints;
	end;
	local v47 = v46;
	if v47 ~= 0 and v47 == v47 and v47 then
		local v48 = p4;
		if v48 ~= nil then
			v48 = v48.decimalPoints;
		end;
		v47 = v48 > 0;
	end;
	if v47 ~= 0 and v47 == v47 and v47 then
		local v49 = v2.roundNumber(p3 % 60, p4.decimalPoints);
	else
		v49 = tostring(math.floor(p3 % 60)) .. "";
	end;
	if #v39 == 0 then
		v39 = "00";
	else
		local v50 = #v39 == 1;
		if v50 then
			local v51 = p4;
			if v51 ~= nil then
				v51 = v51.disablePadding;
			end;
			v50 = not v51;
		end;
		if v50 then
			v39 = "0" .. v39;
		end;
	end;
	if #v42 == 0 then
		v42 = "00";
	else
		local v52 = #v42 == 1;
		if v52 then
			local v53 = p4;
			if v53 ~= nil then
				v53 = v53.disablePadding;
			end;
			v52 = not v53;
		end;
		if v52 then
			v42 = "0" .. v42;
		end;
	end;
	if #v45 == 0 then
		v45 = "00";
	else
		local v54 = #v45 == 1;
		if v54 then
			local v55 = p4;
			if v55 ~= nil then
				v55 = v55.disablePadding;
			end;
			v54 = not v55;
		end;
		if v54 then
			v45 = "0" .. v45;
		end;
	end;
	if #v49 == 0 then
		v49 = "00";
	else
		local v56 = #v49 == 1;
		if v56 then
			local v57 = p4;
			if v57 ~= nil then
				v57 = v57.disablePadding;
			end;
			v56 = not v57;
		end;
		if v56 then
			v49 = "0" .. v49;
		end;
	end;
	local v58 = p4;
	if v58 ~= nil then
		v58 = v58.seperator;
	end;
	local v59 = v58;
	if v59 == nil then
		v59 = ":";
	end;
	local v60 = v49;
	if v37 then
		v60 = v45 .. v59 .. v60;
	end;
	local v61 = p4;
	if v61 ~= nil then
		v61 = v61.hours;
	end;
	if v61 then
		v60 = v42 .. v59 .. v60;
	end;
	local v62 = p4;
	if v62 ~= nil then
		v62 = v62.days;
	end;
	if v62 then
		v60 = v39 .. v59 .. v60;
	end;
	return v60;
end;
function v2.capitalizeFirstLetter(p5)
	if #p5 <= 1 then
		return string.upper(p5);
	end;
	return string.upper(string.sub(p5, 1, 1)) .. string.lower(string.sub(p5, 2));
end;
function v2.formatNumberShorthand(p6)
	if p6 < 1000 then
		return tostring(p6) .. "";
	end;
	if p6 < 1000000 then
		return tostring(math.floor(p6 / 1000 * 10) / 10) .. "k";
	end;
	if p6 < 1000000000 then
		return tostring(math.floor(p6 / 1000000 * 10) / 10) .. "M";
	end;
	return tostring(math.floor(p6 / 1000000000 * 10) / 10) .. "B";
end;
function v2.formatNumberWithCommas(p7)
	local v63 = tostring(p7);
	return string.reverse((string.gsub(string.reverse(v63), "...", "%0,", (math.floor((#v63 - 1) / 3)))));
end;
local u4 = v1.import(script, v1.getModule(script, "@rbxts", "string-utils"));
v2.fuzzySearch = v1.async(function(p8, p9)
	local v64 = string.lower(p8);
	local u5 = {};
	local v65 = {};
	local v66 = 0;
	local v67, v68, v69 = ipairs(p9);
	while true do
		local v70, v71 = v67(v68, v69);
		if not v70 then
			break;
		end;
		if table.find(u5, v71) == nil == true then
			v66 = v66 + 1;
			v65[v66] = v71;
		end;	
	end;
	local v72 = {};
	local v73 = 0;
	local v74, v75, v76 = ipairs(v65);
	while true do
		local v77, v78 = v74(v75, v76);
		if not v77 then
			break;
		end;
		if string.lower(v78) == v64 == true then
			v73 = v73 + 1;
			v72[v73] = v78;
		end;	
	end;
	for v79, v80 in ipairs(v72) do
		table.insert(u5, v80);
	end;
	local v81 = {};
	local v82 = 0;
	local v83, v84, v85 = ipairs(p9);
	while true do
		local v86, v87 = v83(v84, v85);
		if not v86 then
			break;
		end;
		if table.find(u5, v87) == nil == true then
			v82 = v82 + 1;
			v81[v82] = v87;
		end;	
	end;
	local v88 = {};
	local v89 = 0;
	for v90, v91 in ipairs(v81) do
		if u4.startsWith(string.lower(v91), v64) == true then
			v89 = v89 + 1;
			v88[v89] = v91;
		end;
	end;
	for v92, v93 in ipairs(v88) do
		table.insert(u5, v93);
	end;
	local v94 = {};
	local v95 = 0;
	local v96, v97, v98 = ipairs(p9);
	while true do
		local v99, v100 = v96(v97, v98);
		if not v99 then
			break;
		end;
		if table.find(u5, v100) == nil == true then
			v95 = v95 + 1;
			v94[v95] = v100;
		end;	
	end;
	local v101 = {};
	local v102 = 0;
	for v103, v104 in ipairs(v94) do
		if u4.includes(string.lower(v104), v64) == true then
			v102 = v102 + 1;
			v101[v102] = v104;
		end;
	end;
	for v105, v106 in ipairs(v101) do
		table.insert(u5, v106);
	end;
	return u5;
end);
function v2.roundNumber(p10, p11)
	return string.format("%." .. tostring(p11) .. "f", p10);
end;
function v2.formatPercentage(p12, p13, p14)
	local v107 = p14;
	if v107 == nil then
		v107 = 2;
	end;
	return v2.roundNumber(p12 / p13 * 100, v107) .. "%";
end;
return {
	StringUtil = v2
};
