-- Decompiled with the Synapse X Luau decompiler.

local v1 = _G[script];
local v2 = v1.import(script, v1.getModule(script, "@rbxts", "roact").src);
local v3 = v1.import(script, v1.getModule(script, "@rbxts", "services"));
local v4 = v2.Component:extend("DropdownComponent");
local u1 = v1.import(script, v1.getModule(script, "@rbxts", "maid").Maid);
local l__preloadImages__2 = v1.import(script, script.Parent.Parent.Parent.Parent.Parent, "shared", "util", "ui-utils").preloadImages;
local l__ImageId__3 = v1.import(script, script.Parent.Parent.Parent.Parent.Parent, "shared", "images", "image-id").ImageId;
local l__TextService__4 = v3.TextService;
function v4.init(p1, p2)
	p1.maid = u1.new();
	p1.textSize = 13;
	p1.textFont = Enum.Font.Roboto;
	p1.rootUiRef = v2.createRef();
	p1:setState({
		expanded = false, 
		selectedItem = p2.DefaultItem or v2.None
	});
	l__preloadImages__2({ l__ImageId__3.CARET_UP });
	local v5 = {};
	local l__Items__6 = p2.Items;
	table.move(l__Items__6, 1, #l__Items__6, #v5 + 1, v5);
	if p2.DefaultItem == nil then
		table.insert(v5, {
			text = p2.PlaceholderText, 
			value = p2.PlaceholderText
		});
	end;
	local v7 = table.create(#v5);
	local v8, v9, v10 = ipairs(v5);
	while true do
		v8(v9, v10);
		if not v8 then
			break;
		end;
		v10 = v8;
		v7[v8] = l__TextService__4:GetTextSize(v9.text, p1.textSize, p1.textFont, Vector2.new()).X;	
	end;
	if #v7 == 0 then
		error("Attempted to call `ReadonlyArray.reduce()` on an empty array without an initialValue.");
	end;
	local v11 = v7[1];
	for v12 = 2, #v7 do
		local v13 = v7[v12];
		if v11 <= v13 then
			local v14 = v13;
		else
			v14 = v11;
		end;
	end;
	p1.biggestItemWidth = 46 + v14;
end;
local l__Players__5 = v3.Players;
local l__UserInputService__6 = v3.UserInputService;
function v4.didMount(p3)
	local v15 = l__Players__5.LocalPlayer;
	if v15 ~= nil then
		v15 = v15:FindFirstChildOfClass("PlayerGui");
	end;
	if not v15 or p3.props.OnSurfaceGui then
		return nil;
	end;
	local u7 = p3.rootUiRef:getValue();
	p3.maid:GiveTask(l__UserInputService__6.InputBegan:Connect(function(p4)
		if p4.UserInputType ~= Enum.UserInputType.MouseButton1 then
			return nil;
		end;
		local v16 = {};
		local v17 = 0;
		local v18, v19, v20 = ipairs((v15:GetGuiObjectsAtPosition(p4.Position.X, p4.Position.Y)));
		while true do
			v18(v19, v20);
			if not v18 then
				break;
			end;
			local v21 = true;
			if v19 ~= u7 then
				v21 = v19:IsDescendantOf(u7);
			end;
			if v21 == true then
				v17 = v17 + 1;
				v16[v17] = v19;
			end;		
		end;
		if #v16 > 0 then
			return nil;
		end;
		p3:setState({
			expanded = false
		});
	end));
end;
local l__GameTheme__8 = v1.import(script, script.Parent.Parent.Parent.Parent.Parent, "shared", "ui", "game-theme").GameTheme;
local l__AutoCanvasScrollingFrame__9 = v1.import(script, script.Parent, "auto-canvas-scrolling-frame").AutoCanvasScrollingFrame;
function v4.render(p5)
	local l__selectedItem__10 = p5.state.selectedItem;
	local v22 = {};
	local v23 = 0;
	local v24, v25, v26 = ipairs(p5.props.Items);
	while true do
		v24(v25, v26);
		if not v24 then
			break;
		end;
		if v25 ~= l__selectedItem__10 == true then
			v23 = v23 + 1;
			v22[v23] = v25;
		end;	
	end;
	local v27 = {};
	for v28, v29 in pairs(p5.props) do
		v27[v28] = v29;
	end;
	v27.PlaceholderText = nil;
	v27.DefaultItem = nil;
	v27.OnSurfaceGui = nil;
	v27.Items = nil;
	v27.OnItemSelected = nil;
	v27.CornerRadius = nil;
	v27.ButtonColor = nil;
	v27.MenuSize = nil;
	v27.MaxItemsPerDisplay = nil;
	local v30 = {
		Size = UDim2.fromOffset(p5.biggestItemWidth, 28), 
		BackgroundColor3 = p5.props.ButtonColor or l__GameTheme__8.interactionPrimary, 
		BorderSizePixel = 0, 
		ZIndex = 100, 
		Text = ""
	};
	v30[v2.Event.Activated] = function()
		p5:setState({
			expanded = not p5.state.expanded
		});
	end;
	v30[v2.Ref] = p5.rootUiRef;
	for v31, v32 in pairs(v27) do
		v30[v31] = v32;
	end;
	local v33 = { v2.createElement("UICorner", {
			CornerRadius = p5.props.CornerRadius or UDim.new(0, 5)
		}) };
	local v34 = {
		Size = UDim2.fromScale(1, 1), 
		BorderSizePixel = 0, 
		BackgroundTransparency = 1
	};
	local v35 = { v2.createElement("UIListLayout", {
			FillDirection = "Horizontal", 
			HorizontalAlignment = "Center", 
			VerticalAlignment = "Center", 
			Padding = UDim.new(0, 4), 
			SortOrder = "LayoutOrder"
		}) };
	local v36 = #v35;
	local v37 = {
		Size = UDim2.new(1, -46, 1, 0), 
		BackgroundTransparency = 1, 
		TextColor3 = Color3.new(1, 1, 1), 
		RichText = true, 
		Font = Enum.Font.RobotoMono
	};
	local v38 = p5.state.selectedItem;
	if v38 ~= nil then
		v38 = v38.text;
	end;
	local v39 = v38;
	if v39 == "" or not v39 then
		v39 = p5.props.PlaceholderText;
	end;
	v37.Text = "<b>" .. tostring(v39) .. "</b>";
	v37.TextSize = 12;
	if p5.state.selectedItem then
		local v40 = 0;
	else
		v40 = 0.5;
	end;
	v37.TextTransparency = v40;
	v37.ZIndex = 101;
	v37.LayoutOrder = 1;
	v35[v36 + 1] = v2.createElement("TextLabel", v37);
	local v41 = {
		Size = UDim2.new(0, 12, 0, 10), 
		SizeConstraint = "RelativeYY", 
		ScaleType = "Fit"
	};
	if p5.state.expanded then
		local v42 = l__ImageId__3.CARET_UP;
	else
		v42 = l__ImageId__3.CARET_DOWN;
	end;
	v41.Image = v42;
	v41.BackgroundTransparency = 1;
	v41.ZIndex = 101;
	v41.LayoutOrder = 2;
	v35[v36 + 2] = v2.createElement("ImageLabel", v41);
	v33.DropdownInput = v2.createElement("Frame", v34, v35);
	if p5.state.expanded then
		local function v43(p6, p7)
			local v44 = {
				LayoutOrder = p7, 
				Size = UDim2.new(1, 0, 0, 24), 
				BackgroundColor3 = p5.props.ButtonColor or l__GameTheme__8.interactionPrimary, 
				BorderSizePixel = 0, 
				TextColor3 = Color3.new(1, 1, 1), 
				RichText = true, 
				Font = Enum.Font.RobotoMono, 
				Text = "<b>" .. p6.text .. "</b>", 
				TextSize = 12, 
				Active = true
			};
			v44[v2.Event.Activated] = function()
				p5:setState({
					expanded = false, 
					selectedItem = p6
				});
				p5.props.OnItemSelected(p6.value);
			end;
			v44.ZIndex = 103;
			local v45 = {};
			if p7 == 0 or p7 == #v22 - 1 then
				local v46 = v2.createElement("UICorner", {
					CornerRadius = UDim.new(0, 5)
				});
			else
				v46 = nil;
			end;
			if v46 then
				v45[#v45 + 1] = v46;
			end;
			return v2.createFragment({
				[p6.value] = v2.createElement("TextButton", v44, v45)
			});
		end;
		local v47 = table.create(#v22);
		local v48, v49, v50 = ipairs(v22);
		while true do
			v48(v49, v50);
			if not v48 then
				break;
			end;
			v50 = v48;
			v47[v48] = v43(v49, v48 - 1, v22);		
		end;
		local v51 = {
			WaitForAbsoluteSize = true
		};
		local v52 = {
			Position = UDim2.new(0, 0, 1, 2)
		};
		local v53 = p5.props.MenuSize;
		if not v53 then
			if p5.props.MaxItemsPerDisplay ~= nil then
				local v54 = 0;
			else
				v54 = 1;
			end;
			if p5.props.MaxItemsPerDisplay ~= nil then
				local v55 = p5.props.MaxItemsPerDisplay * 24;
			else
				v55 = 0;
			end;
			v53 = UDim2.new(1, 0, v54, v55);
		end;
		v52.Size = v53;
		v52.ScrollBarThickness = 4;
		v52.BackgroundColor3 = p5.props.ButtonColor or l__GameTheme__8.interactionPrimary;
		v52.BackgroundTransparency = 0;
		v52.BorderSizePixel = 0;
		v52.Active = true;
		v52.ZIndex = 102;
		v52.LayoutOrder = 1;
		v51.ScrollingFrameProps = v52;
		local v56 = { v2.createElement("UICorner", {
				CornerRadius = UDim.new(0, 5)
			}), v2.createElement("UIListLayout", {
				FillDirection = Enum.FillDirection.Vertical, 
				VerticalAlignment = Enum.VerticalAlignment.Top, 
				SortOrder = Enum.SortOrder.LayoutOrder, 
				Padding = UDim.new()
			}) };
		local v57 = #v56;
		local v58, v59, v60 = ipairs(v47);
		while true do
			v58(v59, v60);
			if not v58 then
				break;
			end;
			v60 = v58;
			v56[v57 + v58] = v59;		
		end;
		local v61 = v2.createFragment({
			DropdownList = v2.createElement(l__AutoCanvasScrollingFrame__9, v51, v56)
		});
	else
		v61 = nil;
	end;
	if v61 then
		v33[#v33 + 1] = v61;
	end;
	return v2.createFragment({
		Dropdown = v2.createElement("TextButton", v30, v33)
	});
end;
function v4.willUnmount(p8)
	p8.maid:DoCleaning();
end;
v4.defaultProps = {
	MaxItemsPerDisplay = 6
};
return {
	DropdownComponent = v4
};
