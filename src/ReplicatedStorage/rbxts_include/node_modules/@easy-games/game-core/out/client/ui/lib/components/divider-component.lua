-- Decompiled with the Synapse X Luau decompiler.

local v1 = _G[script];
local u1 = v1.import(script, v1.getModule(script, "@rbxts", "roact").src);
local l__GameTheme__2 = v1.import(script, script.Parent.Parent.Parent.Parent.Parent, "shared", "ui", "game-theme").GameTheme;
return {
	DividerComponent = function(p1)
		local v2 = p1.LengthScale;
		if v2 == nil then
			v2 = 1;
		end;
		local v3 = p1.Thickness;
		if v3 == nil then
			v3 = 1;
		end;
		local v4 = p1.Margin;
		if v4 == nil then
			v4 = 6;
		end;
		local v5 = p1.BarPosition;
		if v5 == nil then
			v5 = {
				AnchorPoint = Vector2.new(0.5, 0.5), 
				Position = UDim2.fromScale(0.5, 0.5)
			};
		end;
		local v6 = p1.AutomaticSize;
		if v6 == nil then
			v6 = Enum.AutomaticSize.None;
		end;
		local v7 = p1.MinSize;
		if v7 == nil then
			v7 = Vector2.new(0, 0);
		end;
		local v8 = p1.MaxSize;
		if v8 == nil then
			v8 = Vector2.new(math.huge, math.huge);
		end;
		if p1.Direction == "Y" then
			local v9 = p1.Size or UDim2.new(0, 12 + v4, v2, 0);
		else
			v9 = p1.Size or UDim2.new(v2, 0, 0, 12 + v4);
		end;
		if p1.Direction == "Y" then
			local v10 = UDim2.new(0, v3, v2, 0);
		else
			v10 = UDim2.new(v2, 0, 0, v3);
		end;
		local v11 = { u1.createElement("UISizeConstraint", {
				MinSize = v7, 
				MaxSize = v8
			}) };
		local v12 = {
			AnchorPoint = v5.AnchorPoint, 
			Position = v5.Position, 
			Size = v10, 
			AutomaticSize = v6, 
			BorderSizePixel = 0
		};
		local v13 = p1.BarColor;
		if v13 ~= nil then
			v13 = v13.Color;
		end;
		local v14 = v13;
		if v14 == nil then
			v14 = Color3.new(1, 1, 1);
		end;
		v12.BackgroundColor3 = v14;
		local v15 = p1.BarColor;
		if v15 ~= nil then
			v15 = v15.Transparency;
		end;
		local v16 = v15;
		if v16 == nil then
			v16 = 0.6;
		end;
		v12.BackgroundTransparency = v16;
		if p1.Text ~= nil then
			local v17 = {
				AnchorPoint = Vector2.new(0.5, 0.5), 
				Position = UDim2.fromScale(0.5, 0.5), 
				AutomaticSize = Enum.AutomaticSize.XY
			};
			local v18 = p1.TextLabel;
			if v18 ~= nil then
				v18 = v18.BackgroundColor;
			end;
			v17.BackgroundColor3 = v18 or l__GameTheme__2.backgroundSecondary;
			v17.BorderSizePixel = 0;
			v17.Text = "<b>" .. p1.Text .. "</b>";
			v17.RichText = true;
			v17.TextSize = 12;
			v17.Font = Enum.Font.RobotoMono;
			local v19 = p1.TextLabel;
			if v19 ~= nil then
				v19 = v19.Color;
			end;
			local v20 = v19;
			if v20 == nil then
				v20 = Color3.new(1, 1, 1);
			end;
			v17.TextColor3 = v20;
			local v21 = p1.TextLabel;
			if v21 ~= nil then
				v21 = v21.Transparency;
			end;
			local v22 = v21;
			if v22 == nil then
				v22 = 0.6;
			end;
			v17.TextTransparency = v22;
			local v23 = u1.createElement("TextLabel", v17, { u1.createElement("UIPadding", {
					PaddingLeft = UDim.new(0, 8), 
					PaddingRight = UDim.new(0, 8)
				}) });
		else
			v23 = nil;
		end;
		local v24 = {};
		if v23 then
			v24[#v24 + 1] = v23;
		end;
		v11[#v11 + 1] = u1.createElement("Frame", v12, v24);
		return u1.createFragment({
			DividerComponent = u1.createElement("Frame", {
				AnchorPoint = p1.AnchorPoint, 
				Position = p1.Position, 
				Size = v9, 
				BackgroundTransparency = 1, 
				LayoutOrder = p1.LayoutOrder
			}, v11)
		});
	end
};
