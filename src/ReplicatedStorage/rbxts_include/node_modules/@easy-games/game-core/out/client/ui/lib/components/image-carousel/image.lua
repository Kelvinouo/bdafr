-- Decompiled with the Synapse X Luau decompiler.

local v1 = _G[script];
local v2 = v1.import(script, v1.getModule(script, "@rbxts", "flipper").src);
local v3 = v1.import(script, v1.getModule(script, "@rbxts", "roact").src);
local v4 = v3.Component:extend("CarouselImage");
local l__SingleMotor__1 = v2.SingleMotor;
local l__BindingFromMotor__2 = v1.import(script, script.Parent.Parent.Parent.Parent.Parent.Parent, "shared", "util", "binding-util").BindingFromMotor;
function v4.init(p1, p2)
	p1.scaleMotor = l__SingleMotor__1.new(0.95);
	p1.scaleBinding = l__BindingFromMotor__2(p1.scaleMotor);
	p1:setScale(p2.CurrentIndex == p2.Index);
end;
local l__Spring__3 = v2.Spring;
function v4.setScale(p3, p4)
	if p4 then
		local v5 = 1;
	else
		v5 = 0.95;
	end;
	p3.scaleMotor:setGoal(l__Spring__3.new(v5, {
		frequency = 8, 
		dampingRatio = 1
	}));
end;
function v4.didUpdate(p5, p6)
	if p6.CurrentIndex == p5.props.CurrentIndex then
		return nil;
	end;
	p5:setScale(p5.props.CurrentIndex == p5.props.Index);
end;
function v4.render(p7)
	local v6 = {};
	local v7 = {
		Size = UDim2.fromScale(0, 1), 
		BackgroundTransparency = 0, 
		LayoutOrder = p7.props.Index, 
		BorderSizePixel = 0, 
		Image = p7.props.TarmacData.Image, 
		ImageRectOffset = p7.props.TarmacData.ImageRectOffset, 
		ImageRectSize = p7.props.TarmacData.ImageRectSize, 
		AutoButtonColor = p7.props.CurrentIndex ~= p7.props.Index
	};
	v7[v3.Event.Activated] = function()
		return p7.props.PageRef:getValue():JumpToIndex(p7.props.Index);
	end;
	v6[p7.props.Index] = v3.createElement("ImageButton", v7, { v3.createElement("UIScale", {
			Scale = p7.scaleBinding
		}), v3.createElement("UICorner", {
			CornerRadius = UDim.new(0, 6)
		}), v3.createElement("UIAspectRatioConstraint", {
			AspectRatio = p7.props.AspectRatio, 
			AspectType = Enum.AspectType.ScaleWithParentSize, 
			DominantAxis = Enum.DominantAxis.Height
		}) });
	return v3.createFragment(v6);
end;
return {
	CarouselImage = v4
};
