
-- Decompiled with the Synapse X Luau decompiler.

local u1 = {
	notifications = {}
};
return {
	NotificationReducer = function(p1, p2)
		if p1 == nil then
			p1 = u1;
		end;
		if p2.type == "AddNotification" then
			local v1 = {};
			for v2, v3 in pairs(p1) do
				v1[v2] = v3;
			end;
			local v4 = { p2.notification };
			local l__notifications__5 = p1.notifications;
			table.move(l__notifications__5, 1, #l__notifications__5, #v4 + 1, v4);
			v1.notifications = v4;
			return v1;
		end;
		if p2.type ~= "RemoveNotification" then
			return p1;
		end;
		local v6 = {};
		for v7, v8 in pairs(p1) do
			v6[v7] = v8;
		end;
		local l__notifications__9 = p1.notifications;
		local function v10(p3)
			return p3.uniqueId ~= p2.notificationId;
		end;
		local v11 = {};
		local v12 = 0;
		for v13, v14 in ipairs(l__notifications__9) do
			if v10(v14, v13 - 1, l__notifications__9) == true then
				v12 = v12 + 1;
				v11[v12] = v14;
			end;
		end;
		v6.notifications = v11;
		return v6;
	end
};

