-- Decompiled with the Synapse X Luau decompiler.

local v1 = _G[script];
local v2 = v1.import(script, v1.getModule(script, "@rbxts", "roact").src);
local v3 = v1.import(script, v1.getModule(script, "@rbxts", "services"));
local v4 = {};
local v5 = setmetatable({}, {
	__index = v4
});
v5.TAP = 0;
v4[0] = "TAP";
v5.HOLD = 1;
v4[1] = "HOLD";
local v6 = {};
local v7 = setmetatable({}, {
	__index = v6
});
v7.NORMAL = 0;
v6[0] = "NORMAL";
v7.FREE_MOVING_HOLD = 1;
v6[1] = "FREE_MOVING_HOLD";
local v8 = v2.Component:extend("MobileButton");
local u1 = v1.import(script, v1.getModule(script, "@rbxts", "maid").Maid);
function v8.init(p1)
	p1.ref = v2.createRef();
	p1.maid = u1.new();
end;
local l__UserInputService__2 = v3.UserInputService;
function v8.didMount(p2)
	local v9 = p2.props.PressMode;
	if v9 == nil then
		v9 = v7.NORMAL;
	end;
	local v10 = p2.ref:getValue();
	if v9 == v7.NORMAL then
		p2.maid:GiveTask(v10.InputBegan:Connect(function(p3)
			if p3.UserInputState == Enum.UserInputState.Begin then
				local l__OnPressDown__11 = p2.props.OnPressDown;
				if l__OnPressDown__11 ~= nil then
					l__OnPressDown__11(p3);
				end;
			end;
		end));
		p2.maid:GiveTask(v10.InputEnded:Connect(function(p4)
			local l__OnPressUp__12 = p2.props.OnPressUp;
			if l__OnPressUp__12 ~= nil then
				l__OnPressUp__12();
			end;
		end));
	end;
	if v9 == v7.FREE_MOVING_HOLD then
		p2.maid:GiveTask(l__UserInputService__2.TouchStarted:Connect(function(p5, p6)
			if p6 then
				return nil;
			end;
			if (Vector2.new(p5.Position.X, p5.Position.Y) - (v10.AbsolutePosition + Vector2.new(v10.AbsoluteSize.X / 2, v10.AbsoluteSize.Y / 2))).Magnitude <= v10.AbsoluteSize.X / 2 then
				local l__OnPressDown__13 = p2.props.OnPressDown;
				if l__OnPressDown__13 ~= nil then
					l__OnPressDown__13(p5);
				end;
				p5:GetPropertyChangedSignal("UserInputState"):Connect(function()
					if p5.UserInputState == Enum.UserInputState.End then
						local l__OnPressUp__14 = p2.props.OnPressUp;
						if l__OnPressUp__14 ~= nil then
							l__OnPressUp__14();
						end;
					end;
				end);
			end;
		end));
	end;
end;
function v8.willUnmount(p7)
	p7.maid:DoCleaning();
end;
local l__DeviceUtil__3 = v1.import(script, script.Parent.Parent.Parent.Parent.Parent.Parent, "shared", "util", "device-util").DeviceUtil;
local l__TweenService__4 = v3.TweenService;
function v8.render(p8)
	local v15 = p8.props.HighlightType;
	if v15 == nil then
		v15 = v5.TAP;
	end;
	local v16 = p8.props.PressMode;
	if v16 == nil then
		v16 = v7.NORMAL;
	end;
	local v17 = UDim2.fromScale(0.15, 0.15);
	if not l__DeviceUtil__3.isSmallScreen() then
		v17 = UDim2.fromScale(0.11, 0.11);
	end;
	if p8.props.Size ~= nil then
		v17 = p8.props.Size;
	end;
	local v18 = true;
	if v16 == v7.FREE_MOVING_HOLD then
		v18 = false;
	end;
	local v19 = {
		[v2.Ref] = p8.ref, 
		Image = p8.props.Image, 
		Size = v17, 
		AnchorPoint = Vector2.new(0.5, 0.5), 
		Position = p8.props.Position
	};
	local v20 = p8.props.BackgroundTransparency;
	if v20 == nil then
		v20 = 1;
	end;
	v19.BackgroundTransparency = v20;
	v19.BackgroundColor3 = p8.props.BackgroundColor;
	v19.BorderSizePixel = 0;
	v19.Active = v18;
	v19[v2.Event.MouseButton1Down] = function(p9)
		if v15 == v5.HOLD then
			l__TweenService__4:Create(p9, TweenInfo.new(0.06), {
				ImageTransparency = 0
			}):Play();
		end;
	end;
	v19[v2.Event.MouseButton1Up] = function(p10)
		if v15 == v5.HOLD then
			l__TweenService__4:Create(p10, TweenInfo.new(0.06), {
				ImageTransparency = 0.5
			}):Play();
		end;
	end;
	v19[v2.Event.MouseButton1Click] = function()
		local l__OnClick__21 = p8.props.OnClick;
		if l__OnClick__21 ~= nil then
			l__OnClick__21();
		end;
	end;
	v19[v2.Event.TouchTap] = function(p11)
		if v15 == v5.TAP then
			l__TweenService__4:Create(p11, TweenInfo.new(0.06), {
				ImageTransparency = 0.5
			}):Play();
			wait(0.06);
			l__TweenService__4:Create(p11, TweenInfo.new(0.06), {
				ImageTransparency = 0
			}):Play();
		end;
	end;
	local v22 = { v2.createElement("UIAspectRatioConstraint", {
			AspectRatio = 1, 
			DominantAxis = "Height"
		}) };
	local v23 = #v22;
	local v24 = p8.props[v2.Children];
	if v24 then
		local v25, v26, v27 = pairs(v24);
		while true do
			local v28 = nil;
			local v29 = nil;
			v29, v28 = v25(v26, v27);
			if not v29 then
				break;
			end;
			v27 = v29;
			if type(v29) == "number" then
				v22[v23 + v29] = v28;
			else
				v22[v29] = v28;
			end;		
		end;
	end;
	return v2.createElement("ImageButton", v19, v22);
end;
return {
	MobileButtonHighlightType = v5, 
	PressMode = v7, 
	MobileButton = v8
};
