-- Decompiled with the Synapse X Luau decompiler.

local v1 = _G[script];
local v2 = setmetatable({}, {
	__tostring = function()
		return "SpriteSheetPlayer";
	end
});
v2.__index = v2;
function v2.new(...)
	local v3 = setmetatable({}, v2);
	return v3:constructor(...) and v3;
end;
local u1 = v1.import(script, v1.getModule(script, "@rbxts", "signal"));
function v2.constructor(p1, p2, p3)
	p1.imageLabel = p2;
	p1.spriteSheet = p3;
	p1.Completed = u1.new();
	p1.playing = false;
	p1.paused = false;
	p1.currentFrame = 0;
	p1.composition = {};
	p2.ImageRectSize = Vector2.new(p3.imageWidth / p3.columns, p3.imageHeight / p3.rows);
	p2.Image = p3.image;
	local v4 = 0;
	local v5 = false;
	while true do
		if v5 then
			v4 = v4 + 1;
		else
			v5 = true;
		end;
		if not (v4 < p1.spriteSheet.sprites) then
			break;
		end;
		table.insert(p1.composition, (Vector2.new(v4 % 5, (math.floor(v4 / p1.spriteSheet.columns)))));	
	end;
	if p1.spriteSheet.config then
		local v6 = p1.spriteSheet.config.looped;
		if v6 == nil then
			v6 = true;
		end;
		p1.spriteSheet.config.looped = v6;
	end;
end;
local l__RunService__2 = v1.import(script, v1.getModule(script, "@rbxts", "services")).RunService;
function v2.play(p4)
	if p4.playing then
		return nil;
	end;
	p4.playing = true;
	p4.paused = false;
	p4.imageLabel.ImageTransparency = 0;
	if p4.connection then
		return p4.connection;
	end;
	task.spawn(function()
		local v7 = p4.spriteSheet.config;
		if v7 ~= nil then
			v7 = v7.framesPerSecond;
		end;
		if v7 ~= 0 and v7 == v7 and v7 then
			local v8 = p4.spriteSheet.config;
			if v8 ~= nil then
				v8 = v8.framesPerSecond;
			end;
			local v9 = 1 / v8;
		else
			v9 = 0.041666666666666664;
		end;
		local u3 = false;
		local u4 = 0;
		local u5 = 0;
		p4.connection = l__RunService__2.Heartbeat:Connect(function(p5)
			if not p4.playing or p4.paused then
				return nil;
			end;
			if u3 then
				return nil;
			end;
			u4 = u4 + p5;
			if v9 <= u4 then
				u4 = 0;
				p4.imageLabel.ImageRectOffset = p4.composition[p4.currentFrame + 1] * p4.imageLabel.ImageRectSize;
				p4.currentFrame = p4.currentFrame + 1;
				p4.currentFrame = p4.currentFrame % p4.spriteSheet.sprites;
				if p4.currentFrame == 0 then
					u5 = u5 + 1;
					local v10 = p4.spriteSheet.config;
					if v10 ~= nil then
						v10 = v10.numLoops;
					end;
					local v11 = v10 ~= nil;
					if v11 then
						local v12 = p4.spriteSheet.config;
						if v12 ~= nil then
							v12 = v12.numLoops;
						end;
						v11 = v12 <= u5;
					end;
					if v11 then
						p4:disconnect();
						p4:complete();
					end;
					local v13 = p4.spriteSheet.config;
					if v13 ~= nil then
						v13 = v13.looped;
					end;
					local v14 = v13 == false and p4.connection;
					if v14 then
						p4:disconnect();
						p4:complete();
					end;
					local v15 = p4.spriteSheet.config;
					if v15 ~= nil then
						v15 = v15.looped;
					end;
					local v16 = v15;
					if v16 then
						local v17 = p4.spriteSheet.config;
						if v17 ~= nil then
							v17 = v17.loopDelay;
						end;
						v16 = v17 ~= nil;
					end;
					if v16 then
						u3 = true;
						p4.imageLabel.ImageTransparency = 1;
						task.wait(p4.spriteSheet.config.loopDelay);
						u3 = false;
						p4.imageLabel.ImageTransparency = 0;
					end;
				end;
			end;
		end);
	end);
	return p4.connection;
end;
function v2.pause(p6)
	p6.playing = false;
	p6.paused = true;
end;
function v2.stop(p7)
	p7.playing = false;
	p7.imageLabel.ImageRectOffset = p7.composition[1] * p7.imageLabel.ImageRectSize;
	p7.currentFrame = 0;
end;
function v2.disconnect(p8)
	p8.playing = false;
	p8.imageLabel.ImageTransparency = 1;
	local l__connection__18 = p8.connection;
	if l__connection__18 ~= nil then
		l__connection__18:Disconnect();
	end;
	p8.connection = nil;
	p8.imageLabel.ImageRectOffset = p8.composition[1] * p8.imageLabel.ImageRectSize;
	p8.currentFrame = 0;
end;
function v2.complete(p9)
	p9.Completed:Fire();
end;
return {
	SpriteSheetPlayer = v2
};
