-- Decompiled with the Synapse X Luau decompiler.

local v1 = _G[script];
local v2 = setmetatable({}, {
	__tostring = function()
		return "SpriteSheetPlayer";
	end
});
v2.__index = v2;
function v2.new(...)
	local v3 = setmetatable({}, v2);
	return v3:constructor(...) and v3;
end;
function v2.constructor(p1, p2, p3)
	p1.image = p2;
	p1.spriteSheet = p3;
	p1.composition = {};
	p1.currentFrame = 0;
	p1.playing = false;
	p1.paused = false;
	p2.ImageRectSize = Vector2.new(p3.imageWidth / p3.columns, p3.imageHeight / p3.rows);
	local v4 = 0;
	local v5 = false;
	while true do
		if v5 then
			v4 = v4 + 1;
		else
			v5 = true;
		end;
		if not (v4 < p1.spriteSheet.sprites) then
			break;
		end;
		table.insert(p1.composition, (Vector2.new(v4 % 5, (math.floor(v4 / p1.spriteSheet.columns)))));	
	end;
end;
local l__RunService__1 = v1.import(script, v1.getModule(script, "@rbxts", "services")).RunService;
function v2.play(p4)
	p4.playing = true;
	p4.paused = false;
	if p4.connection then
		return p4.connection;
	end;
	task.spawn(function()
		local v6 = p4.spriteSheet.config;
		if v6 ~= nil then
			v6 = v6.framesPerSecond;
		end;
		if v6 ~= 0 and v6 == v6 and v6 then
			local v7 = p4.spriteSheet.config;
			if v7 ~= nil then
				v7 = v7.framesPerSecond;
			end;
			local v8 = 1 / v7;
		else
			v8 = 0.041666666666666664;
		end;
		local u2 = 0;
		p4.connection = l__RunService__1.Heartbeat:Connect(function(p5)
			if not p4.playing or p4.paused then
				return nil;
			end;
			u2 = u2 + p5;
			if v8 <= u2 then
				u2 = 0;
				p4.image.ImageRectOffset = p4.composition[p4.currentFrame + 1] * p4.image.ImageRectSize;
				p4.currentFrame = p4.currentFrame + 1;
				p4.currentFrame = p4.currentFrame % p4.spriteSheet.sprites;
				local v9 = p4.currentFrame == 0;
				if v9 then
					local v10 = p4.spriteSheet.config;
					if v10 ~= nil then
						v10 = v10.looped;
					end;
					v9 = v10 == false and p4.connection;
				end;
				if v9 then
					p4.connection:Disconnect();
				end;
				local v11 = p4.currentFrame == 0;
				if v11 then
					local v12 = p4.spriteSheet.config;
					if v12 ~= nil then
						v12 = v12.looped;
					end;
					v11 = v12 and p4.spriteSheet.config.delayTime;
				end;
				if v11 ~= 0 and v11 == v11 and v11 then
					task.wait(p4.spriteSheet.config.delayTime);
				end;
			end;
		end);
		return p4.connection;
	end);
	return p4.connection;
end;
function v2.pause(p6)
	p6.playing = false;
	p6.paused = true;
end;
function v2.stop(p7)
	p7.playing = false;
	p7.image.ImageRectOffset = p7.composition[1] * p7.image.ImageRectSize;
end;
function v2.disconnect(p8)
	local l__connection__13 = p8.connection;
	if l__connection__13 ~= nil then
		l__connection__13:Disconnect();
	end;
end;
return {
	SpriteSheetPlayer = v2
};
