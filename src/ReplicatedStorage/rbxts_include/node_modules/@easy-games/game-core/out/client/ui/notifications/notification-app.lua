-- Decompiled with the Synapse X Luau decompiler.

local v1 = _G[script];
local v2 = v1.import(script, v1.getModule(script, "@rbxts", "roact").src);
local v3 = v1.import(script, v1.getModule(script, "@rbxts", "roact-rodux").src);
local v4 = v2.Component:extend("NotificationAppComponent");
function v4.init(p1)
	p1.frameRef = v2.createRef();
	p1.notifs = {};
end;
function v4.didMount(p2)

end;
local l__GameCoreClientConfig__1 = v1.import(script, script.Parent.Parent.Parent, "config", "game-core-config").GameCoreClientConfig;
local l__NotificationCard__2 = v1.import(script, script.Parent, "components", "notification-card").NotificationCard;
local l__StoreProvider__3 = v3.StoreProvider;
local u4 = v1.import(script, v1.getModule(script, "@rbxts", "object-utils"));
function v4.didUpdate(p3, p4)
	if p4.Notifications.notifications ~= p3.props.Notifications.notifications then
		for v5, v6 in ipairs(p3.props.Notifications.notifications) do
			if p3.notifs[v6.uniqueId] == nil then
				local v7 = {};
				for v8, v9 in pairs(v6.componentProps) do
					v7[v8] = v9;
				end;
				v7.uniqueId = v6.uniqueId;
				local v10 = {};
				local v11 = {};
				local v12 = {};
				for v13, v14 in pairs(v7) do
					v12[v13] = v14;
				end;
				v11[#v11 + 1] = v2.createElement(v6.component, v12);
				v10[#v10 + 1] = v2.createElement(l__NotificationCard__2, {
					notificationRequest = v6
				}, v11);
				p3.notifs[v6.uniqueId] = v2.mount(v2.createElement(l__StoreProvider__3, {
					store = l__GameCoreClientConfig__1.Store
				}, v10), p3.frameRef:getValue());
			end;
		end;
		local v15, v16, v17 = ipairs(u4.keys(p3.notifs));
		while true do
			local v18, v19 = v15(v16, v17);
			if not v18 then
				break;
			end;
			local v20 = false;
			for v21, v22 in ipairs(p3.props.Notifications.notifications) do
				if v22.uniqueId == v19 then
					v20 = true;
					break;
				end;
			end;
			if not v20 then
				local v23 = p3.notifs[v19];
				if v23 then
					v2.unmount(v23);
				end;
				p3.notifs[v19] = nil;
			end;		
		end;
	end;
end;
function v4.willUnmount(p5)

end;
local l__DeviceUtil__5 = v1.import(script, script.Parent.Parent.Parent.Parent, "shared", "util", "device-util").DeviceUtil;
function v4.render(p6)
	local v24 = {
		ResetOnSpawn = false
	};
	local l__ScreenGUIProps__25 = p6.props.ScreenGUIProps;
	if type(l__ScreenGUIProps__25) == "table" then
		for v26, v27 in pairs(l__ScreenGUIProps__25) do
			v24[v26] = v27;
		end;
	end;
	local v28 = {};
	for v29, v30 in pairs(v24) do
		v28[v29] = v30;
	end;
	local v31 = {};
	local v32 = {
		[v2.Ref] = p6.frameRef
	};
	if l__DeviceUtil__5.isSmallScreen() then
		local v33 = 0.18;
	else
		v33 = 0.16;
	end;
	v32.Size = UDim2.fromScale(v33, 0.5);
	v32.AnchorPoint = Vector2.new(1, 1);
	if l__DeviceUtil__5.isSmallScreen() then
		local v34 = 0.75;
	else
		v34 = 0.96;
	end;
	if l__DeviceUtil__5.isSmallScreen() then
		local v35 = 0.5;
	else
		v35 = 0.7;
	end;
	v32.Position = UDim2.fromScale(v34, v35);
	v32.BackgroundTransparency = 1;
	v32.BorderSizePixel = 0;
	v31[1] = v2.createElement("Frame", v32);
	return v2.createElement("ScreenGui", v28, v31);
end;
return {
	NotificationApp = v3.connect(function(p7, p8)
		local v36 = {};
		for v37, v38 in pairs(p8) do
			v36[v37] = v38;
		end;
		v36.Notifications = p7.Notifications;
		return v36;
	end, function(p9)
		return {};
	end)(v4)
};
