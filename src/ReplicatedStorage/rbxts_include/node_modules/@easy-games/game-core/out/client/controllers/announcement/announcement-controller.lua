-- Decompiled with the Synapse X Luau decompiler.

local v1 = _G[script];
local l__Reflect__2 = v1.import(script, v1.getModule(script, "@flamework", "core").out).Reflect;
local v3 = v1.import(script, v1.getModule(script, "@flamework", "core").out);
local v4 = setmetatable({}, {
	__tostring = function()
		return "AnnouncementController";
	end
});
v4.__index = v4;
function v4.new(...)
	local v5 = setmetatable({}, v4);
	return v5:constructor(...) and v5;
end;
function v4.constructor(p1)
	p1.announcements = {};
end;
local l__GameCoreNetEvents__1 = v1.import(script, script.Parent.Parent.Parent.Parent, "shared", "game-core-networking").GameCoreNetEvents;
local l__GameCoreClientSyncEvents__2 = v1.import(script, script.Parent.Parent.Parent, "game-core-client-events").GameCoreClientSyncEvents;
function v4.onStart(p2)
	l__GameCoreNetEvents__1.client.announcementEvent:connect(function(p3)
		p2:sendNewAnnouncement(p3);
	end);
	l__GameCoreClientSyncEvents__2.AnnouncementEnd:connect(function(p4)
		p2:handleAnnouncementEnd();
	end);
end;
function v4.sendNewAnnouncement(p5, p6)
	if p6.important and p5.currentAnnouncementTree then
		table.insert(p5.announcements, 1, p6);
		p5:endAnnouncement(true);
		return nil;
	end;
	if not p5.currentAnnouncement then
		p5:announce(p6);
		return;
	end;
	p5:enqueueAnnouncement(p6);
end;
local u3 = v1.import(script, v1.getModule(script, "@rbxts", "roact").src);
function v4.endAnnouncement(p7, p8)
	if not p7.currentAnnouncementTree then
		return nil;
	end;
	if not p7.currentAnnouncement then
		return nil;
	end;
	if not p8 and p7.currentAnnouncement.important then
		return nil;
	end;
	u3.unmount(p7.currentAnnouncementTree);
	l__GameCoreClientSyncEvents__2.AnnouncementEnd:fire(p7.currentAnnouncement);
	p7.currentAnnouncementTree = nil;
	p7.currentAnnouncement = nil;
end;
function v4.handleAnnouncementEnd(p9)
	local v6 = p9:dequeueAnnouncement();
	if v6 then
		p9:announce(v6);
	end;
end;
local l__Players__4 = v1.import(script, v1.getModule(script, "@rbxts", "services")).Players;
local l__match__5 = v1.import(script, v1.getModule(script, "@rbxts", "variant").out).match;
local l__TextAnnouncementBordered__6 = v1.import(script, script.Parent, "ui", "text-announcement-bordered").TextAnnouncementBordered;
local l__TextAnnouncement__7 = v1.import(script, script.Parent, "ui", "text-announcement").TextAnnouncement;
local l__CenterImageAnnouncement__8 = v1.import(script, script.Parent, "ui", "center-image-announcement").CenterImageAnnouncement;
local l__CountdownAnnouncement__9 = v1.import(script, script.Parent, "ui", "countdown-announcement").CountdownAnnouncement;
function v4.announce(p10, p11)
	l__GameCoreClientSyncEvents__2.AnnouncementBegan:fire(p11);
	p10.currentAnnouncement = p11;
	local v7 = {};
	local l__PlayerGui__10 = l__Players__4.LocalPlayer:WaitForChild("PlayerGui");
	function v7.text(p12)
		local l__variant__8 = p12.variant;
		if l__variant__8 == "bordered" then
			return u3.mount(u3.createElement(l__TextAnnouncementBordered__6, {
				Announcement = p12
			}), l__PlayerGui__10);
		end;
		if l__variant__8 == "textWithBG" then
			return u3.mount(u3.createElement(l__TextAnnouncement__7, {
				Announcement = p12
			}), l__PlayerGui__10);
		end;
		return u3.mount(u3.createElement(l__TextAnnouncement__7, {
			Announcement = p12
		}), l__PlayerGui__10);
	end;
	function v7.image(p13)
		return u3.mount(u3.createElement(l__CenterImageAnnouncement__8, {
			Announcement = p13
		}), l__PlayerGui__10);
	end;
	function v7.countdown(p14)
		return u3.mount(u3.createElement(l__CountdownAnnouncement__9, {
			Announcement = p14
		}), l__PlayerGui__10);
	end;
	function v7.default(p15)
		return u3.mount(u3.createElement(l__TextAnnouncement__7, {
			Announcement = {
				type = "text", 
				backgroundImage = p15.backgroundImage, 
				message = p15.message, 
				themeColor = p15.themeColor, 
				important = p15.important, 
				duration = p15.duration
			}
		}), l__PlayerGui__10);
	end;
	p10.currentAnnouncementTree = l__match__5(p11, v7);
end;
function v4.dequeueAnnouncement(p16)
	if #p16.announcements == 0 then
		return nil;
	end;
	return table.remove(p16.announcements, 1);
end;
function v4.enqueueAnnouncement(p17, p18)
	table.insert(p17.announcements, p18);
end;
l__Reflect__2.defineMetadata(v4, "identifier", "@easy-games/game-core:client/controllers/announcement/announcement-controller@AnnouncementController");
l__Reflect__2.defineMetadata(v4, "flamework:implements", { "$:flamework@OnStart" });
l__Reflect__2.decorate(v4, "$:flamework@Controller", v3.Controller, { {} });
l__Reflect__2.decorate(v4, "$:flamework@External", v3.External, {});
return {
	AnnouncementController = v4
};
