-- Decompiled with the Synapse X Luau decompiler.

local v1 = _G[script];
local v2 = v1.import(script, v1.getModule(script, "@rbxts", "services"));
local v3 = {};
local u1 = v1.import(script, v1.getModule(script, "@rbxts", "maid").Maid);
local l__Flamework__2 = v1.import(script, v1.getModule(script, "@flamework", "core").out).Flamework;
function v3.constructor(p1, p2, p3, p4)
	p1.indicatorId = p2;
	p1.boundaryUi = p3;
	p1.config = p4;
	p1.maid = u1.new();
	p1.ui = p1:createUi();
	p1.maid:GiveTask(p1.ui);
	p1.maid:GiveTask(function()
		return l__Flamework__2.resolveDependency("@easy-games/game-core:client/controllers/indicators/world-indicator-controller@WorldIndicatorController"):removeIndicator(p2);
	end);
	if typeof(p4.attachTo) == "Instance" then
		p4.attachTo.Destroying:Connect(function()
			return p1.maid:DoCleaning();
		end);
	end;
end;
function v3.slidePoints(p5, p6, p7)
	local v4 = math.atan2(p7.Y, p7.X);
	local l__Magnitude__5 = (p6 / 2).Magnitude;
	local l__Magnitude__6 = p7.Magnitude;
	return Vector2.new(math.cos(v4) * l__Magnitude__5, math.sin(v4) * l__Magnitude__5), Vector2.new(math.cos(v4) * l__Magnitude__6, math.sin(v4) * l__Magnitude__6);
end;
function v3.snapMethod(p8, p9, p10, p11, p12, p13, p14)
	local v7 = nil;
	v7 = math.clamp(math.abs(p9[p14] - p12) / math.abs(p10[p14] - p12), 0, 1);
	if p11[p13] < p10[p13] then
		local v8 = p11[p13];
		local v9 = p10[p13];
		local v10 = math.clamp((1 - v7) * v8 + v7 * v9, v8, v9);
	else
		local v11 = p10[p13];
		local v12 = p11[p13];
		v10 = math.clamp((1 - v7) * v12 + v7 * v11, v11, v12);
	end;
	if p13 == "X" then
		return Vector2.new(v10, p12);
	end;
	return Vector2.new(p12, v10);
end;
function v3.screenBoundaryMethod(p15, p16, p17)
	local v13 = Vector2.new(p16.Width, p16.Height);
	local v14 = v13.Y / v13.X;
	local v15 = (p16.Min + p16.Max) / 2;
	local v16 = p17 - v15;
	local v17, v18 = v3:slidePoints(v13, v16);
	local v19 = v17 + v15;
	local v20 = v18 + v15;
	if v16.X * v14 <= v16.Y then
		if -v16.X * v14 <= v16.Y then
			local v21 = p17.Y <= p16.Max.Y;
			if v19.X < p16.Min.X then
				return v21, Vector2.new(p16.Min.X, p16.Max.Y);
			elseif p16.Max.X < v19.X then
				return v21, Vector2.new(p16.Max.X, p16.Max.Y);
			else
				return v21, v3:snapMethod(p17, v19, v20, p16.Max.Y, "X", "Y");
			end;
		else
			local v22 = p16.Min.X <= p17.X;
			if v19.Y < p16.Min.Y then
				return v22, Vector2.new(p16.Min.X, p16.Min.Y);
			elseif p16.Max.Y < v19.Y then
				return v22, Vector2.new(p16.Min.X, p16.Max.Y);
			else
				return v22, v3:snapMethod(p17, v19, v20, p16.Min.X, "Y", "X");
			end;
		end;
	end;
	if -v16.X * v14 <= v16.Y then
		local v23 = p17.X <= p16.Max.X;
		if v19.Y < p16.Min.Y then
			return v23, Vector2.new(p16.Max.X, p16.Min.Y);
		elseif p16.Max.Y < v19.Y then
			return v23, Vector2.new(p16.Max.X, p16.Max.Y);
		else
			return v23, v3:snapMethod(p17, v19, v20, p16.Max.X, "Y", "X");
		end;
	end;
	local v24 = p16.Min.Y <= p17.Y;
	if v19.X < p16.Min.X then
		return v24, Vector2.new(p16.Min.X, p16.Min.Y);
	end;
	if p16.Max.X < v19.X then
		return v24, Vector2.new(p16.Max.X, p16.Min.Y);
	end;
	return v24, v3:snapMethod(p17, v19, v20, p16.Min.Y, "X", "Y");
end;
function v3.centerBoundaryMethod(p18, p19, p20, p21)
	local v25 = (p19.Min + p19.Max) / 2;
	local v26 = p21 - v25;
	return v26.Magnitude < p20, v25 + v26.Unit * (p20 * math.sign(p21.Y));
end;
function v3.getIndicatorUi(p22)
	return p22.ui;
end;
function v3.getTargetPosition(p23)
	local l__attachTo__27 = p23.config.attachTo;
	if typeof(l__attachTo__27) == "Vector3" then
		return l__attachTo__27;
	end;
	if typeof(l__attachTo__27) ~= "Instance" then
		error("Unreachable");
		return;
	end;
	return l__attachTo__27.Position;
end;
local l__ConstraintType__3 = v1.import(script, script.Parent, "indicator-types").ConstraintType;
local l__Players__4 = v2.Players;
local l__MathExtras__5 = v1.import(script, script.Parent.Parent.Parent.Parent, "shared", "util", "math-util").MathExtras;
function v3.update(p24)
	local v28 = p24:getIndicatorWorldPosition();
	local v29 = v3.camera:WorldToScreenPoint(v28);
	local l__Z__30 = v29.Z;
	local v31 = Vector2.new(v29.X, v29.Y);
	local l__AbsolutePosition__32 = p24.boundaryUi.AbsolutePosition;
	local l__AbsoluteSize__33 = p24.boundaryUi.AbsoluteSize;
	if p24.config.constraintType == l__ConstraintType__3.Constrained then
		if l__Z__30 < 0 then
			v31 = l__AbsoluteSize__33 + l__AbsolutePosition__32 - v31 + l__AbsolutePosition__32;
		end;
		local v34, v35 = v3:screenBoundaryMethod(Rect.new(l__AbsolutePosition__32, l__AbsolutePosition__32 + l__AbsoluteSize__33), v31);
		if v34 and l__Z__30 >= 0 then
			v35 = v31;
		end;
		p24.boundaryUi.Visible = true;
		if l__AbsoluteSize__33.X < 0 then
			local v36 = -l__AbsoluteSize__33.X;
		else
			v36 = 0;
		end;
		if l__AbsoluteSize__33.Y < 0 then
			local v37 = -l__AbsoluteSize__33.Y;
		else
			v37 = 0;
		end;
		local v38 = Vector2.new(v36, v37);
		p24.ui.Position = UDim2.fromOffset(v35.X - l__AbsolutePosition__32.X + v38.X, v35.Y - l__AbsolutePosition__32.Y + v38.Y);
		if p24.arrow then
			p24.arrow.Visible = v31 ~= v35;
			if v31 ~= v35 then
				local v39 = v31 - v35;
				local v40 = math.deg(math.atan2(v39.Y, v39.X));
				if l__Z__30 < 0 and v34 then
					v40 = v40 + 180;
				end;
				p24.arrow.Rotation = v40;
			end;
		end;
	elseif p24.config.constraintType == l__ConstraintType__3.Hidden then
		if l__Z__30 < 0 then
			p24.ui.Visible = false;
		elseif v3:screenBoundaryMethod(Rect.new(l__AbsolutePosition__32, l__AbsolutePosition__32 + l__AbsoluteSize__33), v31) then
			p24.ui.Visible = true;
			p24.ui.Position = UDim2.fromOffset(v31.X - l__AbsolutePosition__32.X, v31.Y - l__AbsolutePosition__32.Y);
		else
			p24.ui.Visible = false;
		end;
		if p24.arrow then
			p24.arrow.Visible = false;
		end;
	elseif p24.config.constraintType == l__ConstraintType__3.Radial then
		local v41 = Vector2.new(v29.X, v29.Z);
		local v42, v43 = v3:centerBoundaryMethod(Rect.new(l__AbsolutePosition__32, l__AbsolutePosition__32 + l__AbsoluteSize__33), 150, v41);
		p24.boundaryUi.Visible = true;
		if l__AbsoluteSize__33.X < 0 then
			local v44 = -l__AbsoluteSize__33.X;
		else
			v44 = 0;
		end;
		if l__AbsoluteSize__33.Y < 0 then
			local v45 = -l__AbsoluteSize__33.Y;
		else
			v45 = 0;
		end;
		local v46 = Vector2.new(v44, v45);
		p24.ui.Position = UDim2.fromOffset(v43.X - l__AbsolutePosition__32.X + v46.X, v43.Y - l__AbsolutePosition__32.Y + v46.Y);
		if p24.arrow then
			p24.arrow.Visible = v41 ~= v43;
			if v41 ~= v43 then
				local v47 = v41 - v43;
				local v48 = math.deg(math.atan2(v47.Y, v47.X));
				if math.sign(v41.Y) == -1 then
					v48 = v48 + 180;
				end;
				p24.arrow.Rotation = v48;
			end;
		end;
	end;
	local v49 = (v3.camera.CFrame.Position - v28).Magnitude;
	local v50 = p24.config.uiConfig.distanceRelativeToPlayer;
	if v50 then
		local v51 = l__Players__4.LocalPlayer.Character;
		if v51 ~= nil then
			v51 = v51.PrimaryPart;
		end;
		v50 = v51 ~= nil;
	end;
	if v50 then
		local v52 = l__Players__4.LocalPlayer.Character;
		if v52 ~= nil then
			v52 = v52.PrimaryPart;
			if v52 ~= nil then
				v52 = (v52.CFrame.Position - v28).Magnitude;
			end;
		end;
		v49 = v52;
	end;
	local v53 = 1 - l__MathExtras__5:rangeMap(math.clamp(v49, v3.DISTANCE_AT_INVISIBLE, v3.DISTANCE_AT_FULL_VISIBILITY), { v3.DISTANCE_AT_INVISIBLE, v3.DISTANCE_AT_FULL_VISIBILITY }, { 0, 1 });
	local v54 = l__MathExtras__5:easeInQuad(v53);
	if p24.config.uiConfig.easeOutOnAppoach == nil then
		local v55 = true;
	else
		v55 = p24.config.uiConfig.easeOutOnAppoach;
	end;
	if v55 then
		local v56 = v53;
	else
		v56 = 0;
	end;
	p24:updateProperties(v49, v56, v54);
	if p24.config.onUpdateProperties then
		if v55 then
			local v57 = v53;
		else
			v57 = 0;
		end;
		p24.config.onUpdateProperties(v49, v57, v54, p24.ui, p24.config.creator);
	end;
end;
function v3.getIndicatorWorldPosition(p25)
	local l__attachTo__58 = p25.config.attachTo;
	if typeof(l__attachTo__58) == "Vector3" then
		return l__attachTo__58;
	end;
	if l__attachTo__58:IsA("Attachment") then
		return l__attachTo__58.WorldPosition;
	end;
	return l__attachTo__58.Position;
end;
local u6 = v1.import(script, v1.getModule(script, "@rbxts", "make"));
function v3.createUi(p26)
	local v59 = u6("Frame", {
		AnchorPoint = Vector2.new(0.5, 0.5), 
		Size = v3.BASE_INDICATOR_SIZE, 
		BackgroundTransparency = 1, 
		Parent = p26.boundaryUi, 
		Children = { u6("UICorner", {
				CornerRadius = UDim.new(1, 0)
			}), u6("UIAspectRatioConstraint", {
				AspectRatio = 1, 
				AspectType = Enum.AspectType.ScaleWithParentSize, 
				DominantAxis = Enum.DominantAxis.Height
			}) }
	});
	if type(p26.config.uiConfig.color3) == "function" then
		local v60 = p26.config.uiConfig.color3(0);
	else
		v60 = p26.config.uiConfig.color3;
	end;
	local v61 = {
		AnchorPoint = Vector2.new(0.5, 0.5), 
		Position = UDim2.fromScale(0.5, 0.5), 
		Size = UDim2.fromScale(1, 1), 
		BackgroundTransparency = 1, 
		Parent = v59
	};
	local v62 = {
		AnchorPoint = Vector2.new(0, 0.5), 
		Position = UDim2.fromScale(1, 0.5), 
		Size = UDim2.fromScale(1, 0.6), 
		BackgroundTransparency = 1
	};
	local v63 = p26.config.arrowImage;
	if v63 == nil then
		v63 = "rbxassetid://9192635632";
	end;
	v62.Image = v63;
	v62.ImageColor3 = v60;
	v62.Children = { u6("UIAspectRatioConstraint", {
			AspectRatio = 0.5, 
			AspectType = Enum.AspectType.ScaleWithParentSize, 
			DominantAxis = Enum.DominantAxis.Height
		}) };
	v61.Children = { u6("ImageLabel", v62) };
	p26.arrow = u6("Frame", v61);
	return p26:mountUi(v59);
end;
function v3.destroy(p27)
	p27.maid:Destroy();
end;
function v3.Destroy(p28)
	p28:destroy();
end;
v3.BASE_INDICATOR_SIZE = UDim2.fromScale(0, 0.065);
v3.DISTANCE_AT_FULL_VISIBILITY = 30;
v3.DISTANCE_AT_INVISIBLE = 15;
v3.camera = v2.Workspace.CurrentCamera;
return {
	ActiveWorldIndicator = v3
};
