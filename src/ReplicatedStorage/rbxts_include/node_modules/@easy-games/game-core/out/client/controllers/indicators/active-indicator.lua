-- Decompiled with the Synapse X Luau decompiler.

local v1 = _G[script];
local v2 = v1.import(script, v1.getModule(script, "@rbxts", "services"));
local v3 = {};
local u1 = v1.import(script, v1.getModule(script, "@rbxts", "maid").Maid);
local l__Flamework__2 = v1.import(script, v1.getModule(script, "@flamework", "core").out).Flamework;
function v3.constructor(p1, p2, p3, p4)
	p1.indicatorId = p2;
	p1.boundaryUi = p3;
	p1.config = p4;
	p1.maid = u1.new();
	p1.ui = p1:createUi();
	p1.maid:GiveTask(p1.ui);
	p1.maid:GiveTask(function()
		return l__Flamework__2.resolveDependency("@easy-games/game-core:client/controllers/indicators/world-indicator-controller@WorldIndicatorController"):removeIndicator(p2);
	end);
	if typeof(p4.attachTo) == "Instance" then
		p4.attachTo.Destroying:Connect(function()
			return p1.maid:DoCleaning();
		end);
	end;
end;
function v3.slidePoints(p5, p6, p7)
	local v4 = math.atan2(p7.Y, p7.X);
	local l__Magnitude__5 = (p6 / 2).Magnitude;
	local l__Magnitude__6 = p7.Magnitude;
	return Vector2.new(math.cos(v4) * l__Magnitude__5, math.sin(v4) * l__Magnitude__5), Vector2.new(math.cos(v4) * l__Magnitude__6, math.sin(v4) * l__Magnitude__6);
end;
function v3.snapMethod(p8, p9, p10, p11, p12, p13, p14)
	local v7 = nil;
	v7 = math.clamp(math.abs(p9[p14] - p12) / math.abs(p10[p14] - p12), 0, 1);
	if p11[p13] < p10[p13] then
		local v8 = p11[p13];
		local v9 = p10[p13];
		local v10 = math.clamp((1 - v7) * v8 + v7 * v9, v8, v9);
	else
		local v11 = p10[p13];
		local v12 = p11[p13];
		v10 = math.clamp((1 - v7) * v12 + v7 * v11, v11, v12);
	end;
	if p13 == "X" then
		return Vector2.new(v10, p12);
	end;
	return Vector2.new(p12, v10);
end;
function v3.screenBoundaryMethod(p15, p16, p17)
	local v13 = Vector2.new(p16.Width, p16.Height);
	local v14 = v13.Y / v13.X;
	local v15 = (p16.Min + p16.Max) / 2;
	local v16 = p17 - v15;
	local v17, v18 = v3:slidePoints(v13, v16);
	local v19 = v17 + v15;
	local v20 = v18 + v15;
	if v16.X * v14 <= v16.Y then
		if -v16.X * v14 <= v16.Y then
			local v21 = p17.Y <= p16.Max.Y;
			if v19.X < p16.Min.X then
				local v22 = Vector2.new(p16.Min.X, p16.Max.Y);
			elseif p16.Max.X < v19.X then
				v22 = Vector2.new(p16.Max.X, p16.Max.Y);
			else
				v22 = v3:snapMethod(p17, v19, v20, p16.Max.Y, "X", "Y");
			end;
		else
			v21 = p16.Min.X <= p17.X;
			if v19.Y < p16.Min.Y then
				v22 = Vector2.new(p16.Min.X, p16.Min.Y);
			elseif p16.Max.Y < v19.Y then
				v22 = Vector2.new(p16.Min.X, p16.Max.Y);
			else
				v22 = v3:snapMethod(p17, v19, v20, p16.Min.X, "Y", "X");
			end;
		end;
	elseif -v16.X * v14 <= v16.Y then
		v21 = p17.X <= p16.Max.X;
		if v19.Y < p16.Min.Y then
			v22 = Vector2.new(p16.Max.X, p16.Min.Y);
		elseif p16.Max.Y < v19.Y then
			v22 = Vector2.new(p16.Max.X, p16.Max.Y);
		else
			v22 = v3:snapMethod(p17, v19, v20, p16.Max.X, "Y", "X");
		end;
	else
		v21 = p16.Min.Y <= p17.Y;
		if v19.X < p16.Min.X then
			v22 = Vector2.new(p16.Min.X, p16.Min.Y);
		elseif p16.Max.X < v19.X then
			v22 = Vector2.new(p16.Max.X, p16.Min.Y);
		else
			v22 = v3:snapMethod(p17, v19, v20, p16.Min.Y, "X", "Y");
		end;
	end;
	return v21, v22;
end;
function v3.centerBoundaryMethod(p18, p19, p20, p21)
	local v23 = (p19.Min + p19.Max) / 2;
	local v24 = p21 - v23;
	return v24.Magnitude < p20, v23 + v24.Unit * (p20 * math.sign(p21.Y));
end;
function v3.getIndicatorUi(p22)
	return p22.ui;
end;
function v3.getTargetPosition(p23)
	local l__attachTo__25 = p23.config.attachTo;
	if typeof(l__attachTo__25) == "Vector3" then
		return l__attachTo__25;
	end;
	if typeof(l__attachTo__25) ~= "Instance" then
		error("Unreachable");
		return;
	end;
	return l__attachTo__25.Position;
end;
local l__ConstraintType__3 = v1.import(script, script.Parent, "indicator-types").ConstraintType;
local l__Players__4 = v2.Players;
local l__MathExtras__5 = v1.import(script, script.Parent.Parent.Parent.Parent, "shared", "util", "math-util").MathExtras;
function v3.update(p24)
	local v26 = p24:getIndicatorWorldPosition();
	local v27 = v3.camera:WorldToScreenPoint(v26);
	local l__Z__28 = v27.Z;
	local v29 = Vector2.new(v27.X, v27.Y);
	local l__AbsolutePosition__30 = p24.boundaryUi.AbsolutePosition;
	local l__AbsoluteSize__31 = p24.boundaryUi.AbsoluteSize;
	if p24.config.constraintType == l__ConstraintType__3.Constrained then
		if l__Z__28 < 0 then
			v29 = l__AbsoluteSize__31 + l__AbsolutePosition__30 - v29 + l__AbsolutePosition__30;
		end;
		local v32, v33 = v3:screenBoundaryMethod(Rect.new(l__AbsolutePosition__30, l__AbsolutePosition__30 + l__AbsoluteSize__31), v29);
		if v32 and l__Z__28 >= 0 then
			v33 = v29;
		end;
		p24.boundaryUi.Visible = true;
		if l__AbsoluteSize__31.X < 0 then
			local v34 = -l__AbsoluteSize__31.X;
		else
			v34 = 0;
		end;
		if l__AbsoluteSize__31.Y < 0 then
			local v35 = -l__AbsoluteSize__31.Y;
		else
			v35 = 0;
		end;
		local v36 = Vector2.new(v34, v35);
		p24.ui.Position = UDim2.fromOffset(v33.X - l__AbsolutePosition__30.X + v36.X, v33.Y - l__AbsolutePosition__30.Y + v36.Y);
		if p24.arrow then
			p24.arrow.Visible = v29 ~= v33;
			if v29 ~= v33 then
				local v37 = v29 - v33;
				local v38 = math.deg(math.atan2(v37.Y, v37.X));
				if l__Z__28 < 0 and v32 then
					v38 = v38 + 180;
				end;
				p24.arrow.Rotation = v38;
			end;
		end;
	elseif p24.config.constraintType == l__ConstraintType__3.Hidden then
		if l__Z__28 < 0 then
			p24.ui.Visible = false;
		elseif v3:screenBoundaryMethod(Rect.new(l__AbsolutePosition__30, l__AbsolutePosition__30 + l__AbsoluteSize__31), v29) then
			p24.ui.Visible = true;
			p24.ui.Position = UDim2.fromOffset(v29.X - l__AbsolutePosition__30.X, v29.Y - l__AbsolutePosition__30.Y);
		else
			p24.ui.Visible = false;
		end;
		if p24.arrow then
			p24.arrow.Visible = false;
		end;
	elseif p24.config.constraintType == l__ConstraintType__3.Radial then
		local v39 = Vector2.new(v27.X, v27.Z);
		local v40, v41 = v3:centerBoundaryMethod(Rect.new(l__AbsolutePosition__30, l__AbsolutePosition__30 + l__AbsoluteSize__31), 150, v39);
		p24.boundaryUi.Visible = true;
		if l__AbsoluteSize__31.X < 0 then
			local v42 = -l__AbsoluteSize__31.X;
		else
			v42 = 0;
		end;
		if l__AbsoluteSize__31.Y < 0 then
			local v43 = -l__AbsoluteSize__31.Y;
		else
			v43 = 0;
		end;
		local v44 = Vector2.new(v42, v43);
		p24.ui.Position = UDim2.fromOffset(v41.X - l__AbsolutePosition__30.X + v44.X, v41.Y - l__AbsolutePosition__30.Y + v44.Y);
		if p24.arrow then
			p24.arrow.Visible = v39 ~= v41;
			if v39 ~= v41 then
				local v45 = v39 - v41;
				local v46 = math.deg(math.atan2(v45.Y, v45.X));
				if math.sign(v39.Y) == -1 then
					v46 = v46 + 180;
				end;
				p24.arrow.Rotation = v46;
			end;
		end;
	end;
	local v47 = (v3.camera.CFrame.Position - v26).Magnitude;
	local v48 = p24.config.uiConfig.distanceRelativeToPlayer;
	if v48 then
		local v49 = l__Players__4.LocalPlayer.Character;
		if v49 ~= nil then
			v49 = v49.PrimaryPart;
		end;
		v48 = v49 ~= nil;
	end;
	if v48 then
		local v50 = l__Players__4.LocalPlayer.Character;
		if v50 ~= nil then
			v50 = v50.PrimaryPart;
			if v50 ~= nil then
				v50 = (v50.CFrame.Position - v26).Magnitude;
			end;
		end;
		v47 = v50;
	end;
	local v51 = 1 - l__MathExtras__5:rangeMap(math.clamp(v47, v3.DISTANCE_AT_INVISIBLE, v3.DISTANCE_AT_FULL_VISIBILITY), { v3.DISTANCE_AT_INVISIBLE, v3.DISTANCE_AT_FULL_VISIBILITY }, { 0, 1 });
	local v52 = l__MathExtras__5:easeInQuad(v51);
	if p24.config.uiConfig.easeOutOnAppoach == nil then
		local v53 = true;
	else
		v53 = p24.config.uiConfig.easeOutOnAppoach;
	end;
	if v53 then
		local v54 = v51;
	else
		v54 = 0;
	end;
	p24:updateProperties(v47, v54, v52);
	if p24.config.onUpdateProperties then
		if v53 then
			local v55 = v51;
		else
			v55 = 0;
		end;
		p24.config.onUpdateProperties(v47, v55, v52, p24.ui, p24.config.creator);
	end;
end;
function v3.getIndicatorWorldPosition(p25)
	local l__attachTo__56 = p25.config.attachTo;
	if typeof(l__attachTo__56) == "Vector3" then
		return l__attachTo__56;
	end;
	if l__attachTo__56:IsA("Attachment") then
		return l__attachTo__56.WorldPosition;
	end;
	return l__attachTo__56.Position;
end;
local u6 = v1.import(script, v1.getModule(script, "@rbxts", "make"));
function v3.createUi(p26)
	local v57 = u6("Frame", {
		AnchorPoint = Vector2.new(0.5, 0.5), 
		Size = v3.BASE_INDICATOR_SIZE, 
		BackgroundTransparency = 1, 
		Parent = p26.boundaryUi, 
		Children = { u6("UICorner", {
				CornerRadius = UDim.new(1, 0)
			}), u6("UIAspectRatioConstraint", {
				AspectRatio = 1, 
				AspectType = Enum.AspectType.ScaleWithParentSize, 
				DominantAxis = Enum.DominantAxis.Height
			}) }
	});
	if type(p26.config.uiConfig.color3) == "function" then
		local v58 = p26.config.uiConfig.color3(0);
	else
		v58 = p26.config.uiConfig.color3;
	end;
	p26.arrow = u6("Frame", {
		AnchorPoint = Vector2.new(0.5, 0.5), 
		Position = UDim2.fromScale(0.5, 0.5), 
		Size = UDim2.fromScale(1, 1), 
		BackgroundTransparency = 1, 
		Parent = v57, 
		Children = { u6("ImageLabel", {
				AnchorPoint = Vector2.new(0, 0.5), 
				Position = UDim2.fromScale(1, 0.5), 
				Size = UDim2.fromScale(1, 0.6), 
				BackgroundTransparency = 1, 
				Image = "rbxassetid://9192635632", 
				ImageColor3 = v58, 
				Children = { u6("UIAspectRatioConstraint", {
						AspectRatio = 0.5, 
						AspectType = Enum.AspectType.ScaleWithParentSize, 
						DominantAxis = Enum.DominantAxis.Height
					}) }
			}) }
	});
	return p26:mountUi(v57);
end;
function v3.destroy(p27)
	p27.maid:Destroy();
end;
function v3.Destroy(p28)
	p28:destroy();
end;
v3.BASE_INDICATOR_SIZE = UDim2.fromScale(0, 0.065);
v3.DISTANCE_AT_FULL_VISIBILITY = 30;
v3.DISTANCE_AT_INVISIBLE = 15;
v3.camera = v2.Workspace.CurrentCamera;
return {
	ActiveWorldIndicator = v3
};
