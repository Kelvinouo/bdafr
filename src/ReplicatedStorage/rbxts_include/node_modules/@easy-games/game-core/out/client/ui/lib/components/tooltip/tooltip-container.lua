-- Decompiled with the Synapse X Luau decompiler.

local v1 = _G[script];
local v2 = v1.import(script, v1.getModule(script, "@rbxts", "roact").src);
local v3 = v1.import(script, v1.getModule(script, "@rbxts", "services"));
local v4 = v2.Component:extend("TooltipContainer");
local l__GuiService__1 = v3.GuiService;
function v4.init(p1, p2)
	function p1.absoluteContentSizeChanged(p3)
		local v5 = nil;
		local l__MinSizeConstraint__6 = p1.props.MinSizeConstraint;
		local v7 = p1.props.Padding;
		if v7 == nil then
			v7 = 10;
		end;
		local v8 = p1.props.Padding;
		if v8 == nil then
			v8 = 10;
		end;
		v5 = p3.AbsoluteContentSize + Vector2.new(v7, v8) * 2;
		if l__MinSizeConstraint__6 == nil then
			p1:setState({
				size = v5
			});
			return;
		end;
		p1:setState({
			size = Vector2.new(math.max(l__MinSizeConstraint__6.X, v5.X), math.max(l__MinSizeConstraint__6.Y, v5.Y))
		});
	end;
	function p1.mouseEntered(p4, p5)
		p1:setState({
			active = true, 
			position = Vector3.new(p4, p5 - l__GuiService__1:GetGuiInset().Y)
		});
	end;
	function p1.hoverListener(p6)
		if p6.UserInputState == Enum.UserInputState.Change and p6.UserInputType == Enum.UserInputType.MouseMovement then
			p1:setState({
				position = p6.Position
			});
		end;
	end;
	function p1.mouseLeft()
		p1:setState({
			active = false
		});
	end;
	function p1.handleOffscreenScenario(p7)
		local v9 = p7:FindFirstAncestorWhichIsA("ScreenGui");
		if v9 ~= nil then
			v9 = v9.AbsoluteSize;
		end;
		if v9 and ((v9.X < p7.AbsolutePosition.X or v9.Y < p7.AbsolutePosition.Y) and p1.state.active) then
			p1:setState({
				active = false
			});
		end;
	end;
	p1.state = {
		active = false, 
		size = p2.MinSizeConstraint or Vector2.new(), 
		position = Vector3.new()
	};
end;
local l__Workspace__2 = v3.Workspace;
local l__GameTheme__3 = v1.import(script, script.Parent.Parent.Parent.Parent.Parent.Parent, "shared", "ui", "game-theme").GameTheme;
local l__Players__4 = v3.Players;
local l__Padding__5 = v1.import(script, script.Parent.Parent, "padding").Padding;
function v4.renderTooltip(p8)
	if not p8.state.active then
		return nil;
	end;
	local v10 = l__Workspace__2.CurrentCamera.ViewportSize - Vector2.new(0, l__GameTheme__3.topBarGuiInset);
	local l__position__11 = p8.state.position;
	local v12 = 0;
	local v13 = p8.props.PositionOffset;
	if v13 ~= nil then
		v13 = v13.X;
	end;
	local v14 = v13;
	if v14 == 0 or v14 ~= v14 or not v14 then
		v14 = 0;
	end;
	local v15 = l__position__11.X + 20 + v14;
	local v16 = 0;
	local v17 = p8.props.PositionOffset;
	if v17 ~= nil then
		v17 = v17.Y;
	end;
	local v18 = v17;
	if v18 == 0 or v18 ~= v18 or not v18 then
		v18 = 0;
	end;
	local v19 = l__position__11.Y + v18;
	local l__size__20 = p8.state.size;
	if v10.X < l__position__11.X + l__size__20.X + 20 then
		v12 = 1;
		v15 = -(v10.X - l__position__11.X) - l__size__20.X - 20;
	end;
	if v10.Y < l__position__11.Y + l__size__20.Y then
		v16 = 1;
		v19 = -(v10.Y - l__position__11.Y) - (l__size__20.Y - 20);
	end;
	local v21 = {
		target = l__Players__4.LocalPlayer:FindFirstChildOfClass("PlayerGui")
	};
	local v22 = {};
	local v23 = {};
	local v24 = {
		Size = UDim2.fromOffset(l__size__20.X, l__size__20.Y), 
		Position = UDim2.new(v12, v15, v16, v19), 
		BackgroundTransparency = 0.2, 
		BorderSizePixel = 0, 
		BackgroundColor3 = Color3.fromRGB(0, 0, 0)
	};
	local v25 = { v2.createElement("UICorner", {
			CornerRadius = UDim.new(0, 4)
		}) };
	local v26 = {
		Size = UDim2.new(1, 0, 1, 0), 
		BackgroundTransparency = 1
	};
	local v27 = {
		Layout = v2.createElement("UIListLayout", {
			Padding = UDim.new(0, 2), 
			[v2.Change.AbsoluteContentSize] = p8.absoluteContentSizeChanged
		})
	};
	local v28 = #v27;
	local v29 = {};
	local v30 = {};
	local v31 = p8.props.Padding;
	if v31 == nil then
		v31 = 10;
	end;
	v30.Horizontal = v31;
	local v32 = p8.props.Padding;
	if v32 == nil then
		v32 = 10;
	end;
	v30.Vertical = v32;
	v29.Padding = v30;
	v27.Padding = v2.createElement(l__Padding__5, v29);
	local v33 = p8.props[v2.Children];
	if v33 then
		local v34, v35, v36 = pairs(v33);
		while true do
			local v37 = nil;
			local v38 = nil;
			v38, v37 = v34(v35, v36);
			if not v38 then
				break;
			end;
			v36 = v38;
			if type(v38) == "number" then
				v27[v28 + v38] = v37;
			else
				v27[v38] = v37;
			end;		
		end;
	end;
	v25[#v25 + 1] = v2.createElement("Frame", v26, v27);
	v23[#v23 + 1] = v2.createElement("Frame", v24, v25);
	v22.TooltipContainer = v2.createElement("ScreenGui", {
		ZIndexBehavior = "Sibling", 
		DisplayOrder = 100001
	}, v23);
	return v2.createElement(v2.Portal, v21, v22);
end;
local l__RunService__6 = v3.RunService;
function v4.render(p9)
	if not l__RunService__6:IsRunning() then
		return nil;
	end;
	local v39 = {};
	v39[v2.Event.InputChanged] = function(p10, p11)
		return p9.hoverListener(p11);
	end;
	v39[v2.Event.MouseEnter] = function(p12, p13, p14)
		return p9.mouseEntered(p13, p14);
	end;
	v39[v2.Event.MouseLeave] = p9.mouseLeft;
	v39[v2.Change.AbsolutePosition] = p9.handleOffscreenScenario;
	v39.BackgroundTransparency = 1;
	v39.Size = UDim2.new(1, 0, 1, 0);
	v39.ZIndex = 1000;
	local v40 = {};
	local v41 = p9:renderTooltip();
	if v41 then
		v40[#v40 + 1] = v41;
	end;
	return v2.createFragment({
		TooltipInterest = v2.createElement("Frame", v39, v40)
	});
end;
return {
	TooltipContainer = v4
};
