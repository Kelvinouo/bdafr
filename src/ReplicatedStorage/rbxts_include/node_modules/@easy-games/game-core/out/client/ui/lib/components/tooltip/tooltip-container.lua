
-- Decompiled with the Synapse X Luau decompiler.

local v1 = _G[script];
local v2 = v1.import(script, v1.getModule(script, "@rbxts", "roact").src);
local v3 = v1.import(script, v1.getModule(script, "@rbxts", "services"));
local v4 = v2.Component:extend("TooltipContainer");
local l__GuiService__1 = v3.GuiService;
function v4.init(p1, p2)
	function p1.absoluteContentSizeChanged(p3)
		local v5 = nil;
		local l__MinSizeConstraint__6 = p1.props.MinSizeConstraint;
		local v7 = p1.props.Padding;
		if v7 == nil then
			v7 = 10;
		end;
		local v8 = p1.props.Padding;
		if v8 == nil then
			v8 = 10;
		end;
		v5 = p3.AbsoluteContentSize + Vector2.new(v7, v8) * 2;
		if l__MinSizeConstraint__6 == nil then
			p1:setState({
				size = v5
			});
			return;
		end;
		p1:setState({
			size = Vector2.new(math.max(l__MinSizeConstraint__6.X, v5.X), math.max(l__MinSizeConstraint__6.Y, v5.Y))
		});
	end;
	function p1.mouseEntered(p4, p5)
		p1:setState({
			active = true, 
			position = Vector3.new(p4, p5 - l__GuiService__1:GetGuiInset().Y)
		});
	end;
	function p1.hoverListener(p6)
		if p6.UserInputState == Enum.UserInputState.Change and p6.UserInputType == Enum.UserInputType.MouseMovement then
			p1:setState({
				position = p6.Position
			});
		end;
	end;
	function p1.mouseLeft()
		p1:setState({
			active = false
		});
	end;
	function p1.handleOffscreenScenario(p7)
		local v9 = p7:FindFirstAncestorWhichIsA("ScreenGui");
		if v9 ~= nil then
			v9 = v9.AbsoluteSize;
		end;
		if v9 and ((v9.X < p7.AbsolutePosition.X or v9.Y < p7.AbsolutePosition.Y) and p1.state.active) then
			p1:setState({
				active = false
			});
		end;
	end;
	p1.state = {
		active = false, 
		size = p2.MinSizeConstraint or Vector2.new(), 
		position = Vector3.new()
	};
end;
local l__Workspace__2 = v3.Workspace;
local l__GameTheme__3 = v1.import(script, script.Parent.Parent.Parent.Parent.Parent.Parent, "shared", "ui", "game-theme").GameTheme;
local l__Players__4 = v3.Players;
local l__Padding__5 = v1.import(script, script.Parent.Parent, "padding").Padding;
function v4.renderTooltip(p8)
	if not p8.state.active then
		return nil;
	end;
	local v10 = l__Workspace__2.CurrentCamera.ViewportSize - Vector2.new(0, l__GameTheme__3.topBarGuiInset);
	local l__position__11 = p8.state.position;
	local v12 = 0;
	local v13 = l__position__11.X + 20;
	local v14 = 0;
	local v15 = l__position__11.Y;
	local l__size__16 = p8.state.size;
	if v10.X < l__position__11.X + l__size__16.X + 20 then
		v12 = 1;
		v13 = -(v10.X - l__position__11.X) - l__size__16.X - 20;
	end;
	if v10.Y < l__position__11.Y + l__size__16.Y then
		v14 = 1;
		v15 = -(v10.Y - l__position__11.Y) - (l__size__16.Y - 20);
	end;
	local v17 = {
		target = l__Players__4.LocalPlayer:FindFirstChildOfClass("PlayerGui")
	};
	local v18 = {};
	local v19 = {};
	local v20 = {
		Size = UDim2.fromOffset(l__size__16.X, l__size__16.Y), 
		Position = UDim2.new(v12, v13, v14, v15), 
		BackgroundTransparency = 0.2, 
		BorderSizePixel = 0, 
		BackgroundColor3 = Color3.fromRGB(0, 0, 0)
	};
	local v21 = { v2.createElement("UICorner", {
			CornerRadius = UDim.new(0, 4)
		}) };
	local v22 = {
		Size = UDim2.new(1, 0, 1, 0), 
		BackgroundTransparency = 1
	};
	local v23 = {
		Layout = v2.createElement("UIListLayout", {
			Padding = UDim.new(0, 2), 
			[v2.Change.AbsoluteContentSize] = p8.absoluteContentSizeChanged
		})
	};
	local v24 = #v23;
	local v25 = {};
	local v26 = {};
	local v27 = p8.props.Padding;
	if v27 == nil then
		v27 = 10;
	end;
	v26.Horizontal = v27;
	local v28 = p8.props.Padding;
	if v28 == nil then
		v28 = 10;
	end;
	v26.Vertical = v28;
	v25.Padding = v26;
	v23.Padding = v2.createElement(l__Padding__5, v25);
	local v29 = p8.props[v2.Children];
	if v29 then
		local v30, v31, v32 = pairs(v29);
		while true do
			local v33 = nil;
			local v34 = nil;
			v34, v33 = v30(v31, v32);
			if not v34 then
				break;
			end;
			v32 = v34;
			if type(v34) == "number" then
				v23[v24 + v34] = v33;
			else
				v23[v34] = v33;
			end;		
		end;
	end;
	v21[#v21 + 1] = v2.createElement("Frame", v22, v23);
	v19[#v19 + 1] = v2.createElement("Frame", v20, v21);
	v18.TooltipContainer = v2.createElement("ScreenGui", {
		ZIndexBehavior = "Sibling", 
		DisplayOrder = 100001
	}, v19);
	return v2.createElement(v2.Portal, v17, v18);
end;
local l__RunService__6 = v3.RunService;
function v4.render(p9)
	if not l__RunService__6:IsRunning() then
		return nil;
	end;
	local v35 = {};
	v35[v2.Event.InputChanged] = function(p10, p11)
		return p9.hoverListener(p11);
	end;
	v35[v2.Event.MouseEnter] = function(p12, p13, p14)
		return p9.mouseEntered(p13, p14);
	end;
	v35[v2.Event.MouseLeave] = p9.mouseLeft;
	v35[v2.Change.AbsolutePosition] = p9.handleOffscreenScenario;
	v35.BackgroundTransparency = 1;
	v35.Size = UDim2.new(1, 0, 1, 0);
	v35.ZIndex = 1000;
	local v36 = {};
	local v37 = p9:renderTooltip();
	if v37 then
		v36[#v36 + 1] = v37;
	end;
	return v2.createFragment({
		TooltipInterest = v2.createElement("Frame", v35, v36)
	});
end;
return {
	TooltipContainer = v4
};

