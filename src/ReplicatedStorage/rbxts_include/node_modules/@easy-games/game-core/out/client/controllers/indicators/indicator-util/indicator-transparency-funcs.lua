-- Decompiled with the Synapse X Luau decompiler.

local v1 = _G[script];
local v2 = setmetatable({}, {
	__tostring = function()
		return "IndicatorTransparencyFunctions";
	end
});
v2.__index = v2;
function v2.new(...)
	local v3 = setmetatable({}, v2);
	return v3:constructor(...) and v3;
end;
function v2.constructor(p1)

end;
local l__MathExtras__1 = v1.import(script, script.Parent.Parent.Parent.Parent.Parent, "shared", "util", "math-util").MathExtras;
function v2.fadeOutDistance(p2, p3, p4, p5, p6)
	if p5 == nil then
		p5 = 0;
	end;
	if p6 == nil then
		p6 = 1;
	end;
	return function(p7)
		return l__MathExtras__1:rangeMap(math.clamp(p7, p3, p4), { p3, p4 }, { p5, p6 });
	end;
end;
local l__Workspace__2 = v1.import(script, v1.getModule(script, "@rbxts", "services")).Workspace;
function v2.fadeOverTime(p8, p9, p10, p11, p12)
	if p11 == nil then
		p11 = 0;
	end;
	if p12 == nil then
		p12 = 1;
	end;
	local u3 = nil;
	return function(p13)
		if u3 == 0 or u3 ~= u3 or not u3 then
			u3 = l__Workspace__2:GetServerTimeNow();
		end;
		return l__MathExtras__1:rangeMap(math.clamp(l__Workspace__2:GetServerTimeNow() - u3, p9, p9 + p10), { p9, p9 + p10 }, { p11, p12 });
	end;
end;
function v2.combine(p14, ...)
	local u4 = { ... };
	return function(p15)
		local v4 = table.create(#u4);
		local v5, v6, v7 = ipairs(u4);
		while true do
			v5(v6, v7);
			if not v5 then
				break;
			end;
			v7 = v5;
			v4[v5] = v6(p15);		
		end;
		return math.max(unpack(v4));
	end;
end;
return {
	IndicatorTransparencyFunctions = v2
};
