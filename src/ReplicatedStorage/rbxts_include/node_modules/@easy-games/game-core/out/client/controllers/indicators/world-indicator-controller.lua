-- Script Hash: 6349b6ec6e82b0593e6ef7c00d029b077437899ddd76322d87f4277bf98d8586bd1d3e6caf20ad5e6c1a5fdaf67bdba5
-- Decompiled with the Synapse X Luau decompiler.

local v1 = _G[script];
local l__Reflect__2 = v1.import(script, v1.getModule(script, "@flamework", "core").out).Reflect;
local l__Controller__3 = v1.import(script, v1.getModule(script, "@flamework", "core").out).Controller;
local v4 = v1.import(script, v1.getModule(script, "@rbxts", "services"));
local v5 = setmetatable({}, {
	__tostring = function()
		return "WorldIndicatorController";
	end
});
v5.__index = v5;
function v5.new(...)
	local v6 = setmetatable({}, v5);
	return v6:constructor(...) and v6;
end;
function v5.constructor(p1)
	p1.activeIndicators = {};
end;
local l__CurrentCamera__1 = v4.Workspace.CurrentCamera;
function v5.onStart(p2)
	p2.uiContainer = p2:createUiContainer();
	l__CurrentCamera__1:GetPropertyChangedSignal("ViewportSize"):Connect(function()
		return p2:updateUiContainer();
	end);
	p2:updateUiContainer();
end;
local l__HttpService__2 = v4.HttpService;
local l__IndicatorUIType__3 = v1.import(script, script.Parent, "indicator-types").IndicatorUIType;
local l__CircleIndicator__4 = v1.import(script, script.Parent, "indicator-renderers", "circle-indicator").CircleIndicator;
local l__IconIndicator__5 = v1.import(script, script.Parent, "indicator-renderers", "icon-indicator").IconIndicator;
local l__CustomIndicator__6 = v1.import(script, script.Parent, "indicator-renderers", "custom-indicator").CustomIndicator;
function v5.addIndicator(p3, p4)
	local v7 = l__HttpService__2:GenerateGUID(false);
	local l__uiType__8 = p4.uiType;
	if l__uiType__8 == l__IndicatorUIType__3.Circle then
		local v9 = l__CircleIndicator__4.new(v7, p3.uiContainer, p4);
	elseif l__uiType__8 == l__IndicatorUIType__3.Icon then
		v9 = l__IconIndicator__5.new(v7, p3.uiContainer, p4);
	elseif l__uiType__8 == l__IndicatorUIType__3.Custom then
		v9 = l__CustomIndicator__6.new(v7, p3.uiContainer, p4);
	else
		v9 = l__CircleIndicator__4.new(v7, p3.uiContainer, p4);
	end;
	p3.activeIndicators[v7] = v9;
	return v9;
end;
function v5.removeIndicator(p5, p6)
	p5.activeIndicators[p6] = nil;
end;
function v5.onRender(p7)
	for v10, v11 in pairs(p7.activeIndicators) do
		v11:update();
	end;
end;
function v5.updateUiContainer(p8)
	local l__ViewportSize__12 = l__CurrentCamera__1.ViewportSize;
	local v13 = math.min(l__ViewportSize__12.X, l__ViewportSize__12.Y) * 0.065;
	p8.uiContainer.Position = UDim2.fromOffset(v13, v13);
	p8.uiContainer.Size = UDim2.new(1, -v13 * 2, 1, -v13 * 2);
end;
local u7 = v1.import(script, v1.getModule(script, "@rbxts", "make"));
local l__Players__8 = v4.Players;
function v5.createUiContainer(p9)
	local v14 = u7("Frame", {
		BackgroundTransparency = 1
	});
	u7("ScreenGui", {
		Name = "WorldIndicators", 
		DisplayOrder = 100, 
		ResetOnSpawn = false, 
		Parent = l__Players__8.LocalPlayer:FindFirstChildOfClass("PlayerGui"), 
		Children = { v14 }
	});
	return v14;
end;
l__Reflect__2.defineMetadata(v5, "identifier", "@easy-games/game-core:client/controllers/indicators/world-indicator-controller@WorldIndicatorController");
l__Reflect__2.defineMetadata(v5, "flamework:implements", { "$:flamework@OnRender", "$:flamework@OnStart" });
l__Reflect__2.decorate(v5, "$:flamework@Controller", l__Controller__3, { {} });
return {
	WorldIndicatorController = v5
};
