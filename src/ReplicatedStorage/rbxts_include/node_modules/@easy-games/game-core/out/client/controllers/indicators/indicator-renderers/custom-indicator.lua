
-- Decompiled with the Synapse X Luau decompiler.

local l__ActiveWorldIndicator__1 = _G[script].import(script, script.Parent.Parent, "active-indicator").ActiveWorldIndicator;
local v2 = setmetatable({}, {
	__tostring = function()
		return "CustomIndicator";
	end, 
	__index = l__ActiveWorldIndicator__1
});
v2.__index = v2;
function v2.new(...)
	local v3 = setmetatable({}, v2);
	return v3:constructor(...) and v3;
end;
local u1 = l__ActiveWorldIndicator__1;
function v2.constructor(p1, ...)
	u1.constructor(p1, ...);
end;
function v2.updateProperties(p2, p3, p4, p5)
	if not p2.indicatorObj then
		return nil;
	end;
	if type(p2.config.uiConfig.transparency) == "function" then
		local v4 = p2.config.uiConfig.transparency(p2.indicatorObj, p3, p4);
	else
		v4 = p2.config.uiConfig.transparency;
	end;
	if type(p2.config.uiConfig.color3) == "function" then
		local v5 = p2.config.uiConfig.color3(p3);
	else
		v5 = p2.config.uiConfig.color3;
	end;
	local v6 = v4;
	if v6 == nil then
		v6 = p4;
	end;
	local v7 = math.max(p4, v6);
	if p2.config.uiConfig.scaleOnFade ~= nil then
		local v8 = p2.config.uiConfig.scaleOnFade;
	else
		v8 = true;
	end;
	if v8 then
		local v9 = p5;
	else
		v9 = 0;
	end;
	if p2.config.uiConfig.scaleWithAlpha and p4 < v7 then
		local v10 = v7;
	else
		v10 = v9;
	end;
	p2.ui.Size = l__ActiveWorldIndicator__1.BASE_INDICATOR_SIZE:Lerp(UDim2.new(), v10);
	if p2.arrow then
		p2.arrow.BackgroundColor3 = v5;
		local l__ImageLabel__11 = p2.arrow:WaitForChild("ImageLabel");
		if l__ImageLabel__11 then
			l__ImageLabel__11.ImageTransparency = v7;
			l__ImageLabel__11.ImageColor3 = v5;
		end;
	end;
end;
function v2.mountUi(p6, p7)
	p6.indicatorObj = p6.config.uiConfig.template:Clone();
	p6.indicatorObj.Parent = p7;
	if p6.config.uiConfig.onEnterAnimation then
		p6.config.uiConfig.onEnterAnimation(p6.indicatorObj);
	end;
	return p7;
end;
u1 = {
	CustomIndicator = v2
};
return l__ActiveWorldIndicator__1;

