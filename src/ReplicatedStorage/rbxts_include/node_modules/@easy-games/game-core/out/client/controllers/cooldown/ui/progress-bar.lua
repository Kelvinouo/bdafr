-- Decompiled with the Synapse X Luau decompiler.

local v1 = _G[script];
local u1 = v1.import(script, v1.getModule(script, "@rbxts", "roact").src);
local l__TweenService__2 = v1.import(script, v1.getModule(script, "@rbxts", "services")).TweenService;
local l__UIUtil__3 = v1.import(script, script.Parent.Parent.Parent.Parent.Parent, "shared", "util", "ui-utils").UIUtil;
local l__ColorUtil__4 = v1.import(script, script.Parent.Parent.Parent.Parent.Parent, "shared", "util", "color-util").ColorUtil;
local l__Empty__5 = v1.import(script, script.Parent.Parent.Parent.Parent, "ui", "lib", "components", "empty").Empty;
return {
	ProgressBar = v1.import(script, v1.getModule(script, "@rbxts", "roact-hooks").src).new(u1)(function(p1, p2)
		local l__useEffect__2 = p2.useEffect;
		local v3 = u1.createRef();
		local v4, v5 = p2.useState(false);
		l__useEffect__2(function()
			if p1.Hide ~= nil then
				v5(p1.Hide);
			end;
		end, { p1.Hide });
		local u6 = false;
		l__useEffect__2(function()
			local v6 = v3:getValue();
			if not v6 then
				return nil;
			end;
			local v7 = nil;
			if not u6 and p1.NoInitialTween then
				v6.Size = UDim2.fromScale(p1.Progress, 1);
			else
				local v8 = {};
				if p1.Flip then
					local v9 = 1 - p1.Progress;
				else
					v9 = p1.Progress;
				end;
				v8.Size = UDim2.fromScale(v9, 1);
				v7 = l__TweenService__2:Create(v6, TweenInfo.new(0.12), v8);
				v7:Play();
			end;
			u6 = true;
			return function()
				if v7 ~= nil then
					v7:Cancel();
				end;
				if v7 ~= nil then
					v7:Destroy();
				end;
			end;
		end, { p1.Progress });
		local v10 = p2.useMemo(function()
			return p1.Progress;
		end, {});
		local v11 = {};
		local l__Pills__12 = p1.Pills;
		if l__Pills__12 ~= 0 and l__Pills__12 == l__Pills__12 and l__Pills__12 then
			local v13 = 0;
			local v14 = false;
			while true do
				if v14 then
					v13 = v13 + 1;
				else
					v14 = true;
				end;
				if not (v13 < p1.Pills - 1) then
					break;
				end;
				table.insert(v11, (u1.createFragment({
					Divider = u1.createElement("Frame", {
						Size = UDim2.fromScale(0.02, 1), 
						AnchorPoint = Vector2.new(0, 0.5), 
						Position = UDim2.fromScale((v13 + 1) / p1.Pills, 0.5), 
						BackgroundColor3 = p1.BarBackgroundColor or Color3.fromRGB(0, 0, 0), 
						BackgroundTransparency = 0.2, 
						BorderSizePixel = 0
					})
				})));			
			end;
		end;
		local v15 = not v4;
		if v15 then
			local v16 = {
				AnchorPoint = p1.AnchorPoint or Vector2.new(0.5, 1), 
				Position = p1.Position or l__UIUtil__3:getActionBarPosition(), 
				Size = p1.Size or UDim2.fromScale(0.85, 0.3)
			};
			local v17 = p1.LayoutOrder;
			if v17 == nil then
				v17 = 2;
			end;
			v16.LayoutOrder = v17;
			local v18 = true;
			if not (p1.Progress > 0) then
				v18 = p1.AcceptZero;
			end;
			if v18 then
				local v19 = {
					Size = UDim2.fromScale(1, 1), 
					AnchorPoint = Vector2.new(0, 0.5), 
					Position = UDim2.fromScale(0, 0.5), 
					BackgroundColor3 = p1.BarBackgroundColor or Color3.fromRGB(0, 0, 0), 
					BackgroundTransparency = 0.5, 
					BorderSizePixel = 0
				};
				local v20 = {};
				local v21 = #v20;
				local v22 = p1[u1.Children];
				if v22 then
					local v23, v24, v25 = pairs(v22);
					while true do
						local v26 = nil;
						local v27 = nil;
						v27, v26 = v23(v24, v25);
						if not v27 then
							break;
						end;
						v25 = v27;
						if type(v27) == "number" then
							v20[v21 + v27] = v26;
						else
							v20[v27] = v26;
						end;					
					end;
				end;
				v18 = u1.createFragment({
					ProgressBarBackground = u1.createElement("Frame", v19, v20)
				});
			end;
			local v28 = {};
			if v18 then
				v28[#v28 + 1] = v18;
			end;
			local v29 = true;
			if not (p1.Progress > 0) then
				v29 = p1.AcceptZero;
			end;
			if v29 then
				local v30 = p1.BarColor == nil;
				if v30 then
					local v31 = {
						Color = p1.BarGradient or ColorSequence.new(l__ColorUtil__4.hexColor(13257983), l__ColorUtil__4.hexColor(13257983))
					};
					local v32 = p1.GradientRotation;
					if v32 == nil then
						v32 = 90;
					end;
					v31.Rotation = v32;
					v30 = u1.createElement("UIGradient", v31);
				end;
				local v33 = {
					[u1.Ref] = v3
				};
				if p1.Flip then
					local v34 = UDim2.fromScale(1 - v10, 1);
				else
					v34 = UDim2.fromScale(v10, 1);
				end;
				v33.Size = v34;
				if p1.Flip then
					local v35 = Vector2.new(1, 0.5);
				else
					v35 = Vector2.new(0, 0.5);
				end;
				v33.AnchorPoint = v35;
				if p1.Flip then
					local v36 = UDim2.fromScale(1, 0.5);
				else
					v36 = UDim2.fromScale(0, 0.5);
				end;
				v33.Position = v36;
				v33.BorderSizePixel = 0;
				v33.BackgroundColor3 = p1.BarColor or l__ColorUtil__4.WHITE;
				local v37 = {};
				if v30 then
					v37[#v37 + 1] = v30;
				end;
				local v38 = #v37;
				local v39 = p1[u1.Children];
				if v39 then
					local v40, v41, v42 = pairs(v39);
					while true do
						local v43 = nil;
						local v44 = nil;
						v44, v43 = v40(v41, v42);
						if not v44 then
							break;
						end;
						v42 = v44;
						if type(v44) == "number" then
							v37[v38 + v44] = v43;
						else
							v37[v44] = v43;
						end;					
					end;
				end;
				v29 = u1.createFragment({
					ProgressBar = u1.createElement("Frame", v33, v37)
				});
			end;
			if v29 then
				v28[#v28 + 1] = v29;
			end;
			local v45 = true;
			if not (p1.Progress > 0) then
				v45 = p1.AcceptZero;
			end;
			if v45 then
				local v46 = {
					Size = UDim2.fromScale(1, 1), 
					AnchorPoint = Vector2.new(0, 0.5), 
					Position = UDim2.fromScale(0, 0.5), 
					BackgroundTransparency = 1
				};
				local v47 = {};
				local v48 = #v47;
				local v49, v50, v51 = ipairs(v11);
				while true do
					v49(v50, v51);
					if not v49 then
						break;
					end;
					v51 = v49;
					v47[v48 + v49] = v50;				
				end;
				v45 = u1.createFragment({
					ProgressBarBackground = u1.createElement("Frame", v46, v47)
				});
			end;
			if v45 then
				v28[#v28 + 1] = v45;
			end;
			v15 = u1.createFragment({
				ProgressBarContainer = u1.createElement(l__Empty__5, v16, v28)
			});
		end;
		local v52 = {};
		if v15 then
			v52[#v52 + 1] = v15;
		end;
		return u1.createFragment(v52);
	end)
};
