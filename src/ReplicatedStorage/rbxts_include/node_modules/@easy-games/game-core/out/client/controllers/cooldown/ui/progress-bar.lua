-- Decompiled with the Synapse X Luau decompiler.

local v1 = _G[script];
local u1 = v1.import(script, v1.getModule(script, "@rbxts", "roact").src);
local l__TweenService__2 = v1.import(script, v1.getModule(script, "@rbxts", "services")).TweenService;
local l__UIUtil__3 = v1.import(script, script.Parent.Parent.Parent.Parent.Parent, "shared", "util", "ui-utils").UIUtil;
local l__ColorUtil__4 = v1.import(script, script.Parent.Parent.Parent.Parent.Parent, "shared", "util", "color-util").ColorUtil;
local l__Empty__5 = v1.import(script, script.Parent.Parent.Parent.Parent, "ui", "lib", "components", "empty").Empty;
return {
	ProgressBar = v1.import(script, v1.getModule(script, "@rbxts", "roact-hooks").src).new(u1)(function(p1, p2)
		local l__useEffect__2 = p2.useEffect;
		local v3 = u1.createRef();
		local v4, v5 = p2.useState(false);
		l__useEffect__2(function()
			if p1.Hide ~= nil then
				v5(p1.Hide);
			end;
		end, { p1.Hide });
		local u6 = false;
		l__useEffect__2(function()
			local v6 = v3:getValue();
			if not v6 then
				return nil;
			end;
			local v7 = nil;
			if not u6 and p1.NoInitialTween then
				v6.Size = UDim2.fromScale(p1.Progress, 1);
			else
				v7 = l__TweenService__2:Create(v6, TweenInfo.new(0.12), {
					Size = UDim2.fromScale(p1.Progress, 1)
				});
				v7:Play();
			end;
			u6 = true;
			return function()
				if v7 ~= nil then
					v7:Cancel();
				end;
				if v7 ~= nil then
					v7:Destroy();
				end;
			end;
		end, { p1.Progress });
		local v8 = p2.useMemo(function()
			return p1.Progress;
		end, {});
		local l__Pills__9 = p1.Pills;
		if l__Pills__9 ~= 0 and l__Pills__9 == l__Pills__9 and l__Pills__9 then
			local v10 = 0;
			local v11 = false;
			while true do
				if v11 then
					v10 = v10 + 1;
				else
					v11 = true;
				end;
				if not (v10 < p1.Pills - 1) then
					break;
				end;
				u1.createFragment({
					Divider = u1.createElement("Frame", {
						Size = UDim2.fromScale(0.04, 1), 
						AnchorPoint = Vector2.new(0, 0.5), 
						Position = UDim2.fromScale((v10 + 1) / p1.Pills, 0.5), 
						BackgroundColor3 = p1.BarBackgroundColor or Color3.fromRGB(0, 0, 0), 
						BackgroundTransparency = 0.2, 
						BorderSizePixel = 0
					})
				});			
			end;
		end;
		local v12 = not v4;
		if v12 then
			local v13 = {
				AnchorPoint = p1.AnchorPoint or Vector2.new(0.5, 1), 
				Position = p1.Position or l__UIUtil__3:getActionBarPosition(), 
				Size = p1.Size or UDim2.fromScale(0.85, 0.3)
			};
			local v14 = p1.LayoutOrder;
			if v14 == nil then
				v14 = 2;
			end;
			v13.LayoutOrder = v14;
			local v15 = true;
			if not (p1.Progress > 0) then
				v15 = p1.AcceptZero;
			end;
			if v15 then
				local v16 = {
					Size = UDim2.fromScale(1, 1), 
					AnchorPoint = Vector2.new(0, 0.5), 
					Position = UDim2.fromScale(0, 0.5), 
					BackgroundColor3 = p1.BarBackgroundColor or Color3.fromRGB(0, 0, 0), 
					BackgroundTransparency = 0.5, 
					BorderSizePixel = 0
				};
				local v17 = {};
				local v18 = #v17;
				local v19 = p1[u1.Children];
				if v19 then
					local v20, v21, v22 = pairs(v19);
					while true do
						local v23 = nil;
						local v24 = nil;
						v24, v23 = v20(v21, v22);
						if not v24 then
							break;
						end;
						v22 = v24;
						if type(v24) == "number" then
							v17[v18 + v24] = v23;
						else
							v17[v24] = v23;
						end;					
					end;
				end;
				v15 = u1.createFragment({
					ProgressBarBackground = u1.createElement("Frame", v16, v17)
				});
			end;
			local v25 = {};
			if v15 then
				v25[#v25 + 1] = v15;
			end;
			local v26 = true;
			if not (p1.Progress > 0) then
				v26 = p1.AcceptZero;
			end;
			if v26 then
				local v27 = {
					[u1.Ref] = v3, 
					Size = UDim2.fromScale(v8, 1), 
					AnchorPoint = Vector2.new(0, 0.5), 
					Position = UDim2.fromScale(0, 0.5), 
					BorderSizePixel = 0, 
					BackgroundColor3 = p1.BarColor or l__ColorUtil__4.WHITE
				};
				local v28 = {};
				local v29 = false;
				if p1.BarColor == nil then
					v29 = u1.createElement("UIGradient", {
						Color = p1.BarGradient or ColorSequence.new(l__ColorUtil__4.hexColor(13257983), l__ColorUtil__4.hexColor(13257983)), 
						Rotation = 90
					});
				end;
				if v29 then
					v28[#v28 + 1] = v29;
				end;
				local v30 = #v28;
				for v31, v32 in ipairs({}) do
					v28[v30 + v31] = v32;
				end;
				local v33 = #v28;
				local v34 = p1[u1.Children];
				if v34 then
					local v35, v36, v37 = pairs(v34);
					while true do
						local v38 = nil;
						local v39 = nil;
						v39, v38 = v35(v36, v37);
						if not v39 then
							break;
						end;
						v37 = v39;
						if type(v39) == "number" then
							v28[v33 + v39] = v38;
						else
							v28[v39] = v38;
						end;					
					end;
				end;
				v26 = u1.createFragment({
					ProgressBar = u1.createElement("Frame", v27, v28)
				});
			end;
			if v26 then
				v25[#v25 + 1] = v26;
			end;
			v12 = u1.createFragment({
				ProgressBarContainer = u1.createElement(l__Empty__5, v13, v25)
			});
		end;
		local v40 = {};
		if v12 then
			v40[#v40 + 1] = v12;
		end;
		return u1.createFragment(v40);
	end)
};
