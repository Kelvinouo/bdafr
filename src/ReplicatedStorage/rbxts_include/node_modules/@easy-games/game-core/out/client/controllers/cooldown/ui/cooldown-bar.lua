
-- Decompiled with the Synapse X Luau decompiler.

local v1 = _G[script];
local v2 = v1.import(script, v1.getModule(script, "@rbxts", "roact").src);
local v3 = v2.Component:extend("CooldownBar");
local u1 = v1.import(script, v1.getModule(script, "@rbxts", "maid").Maid);
function v3.init(p1, p2)
	p1.maid = u1.new();
	p1.state = {
		onCooldown = false, 
		progress = 0
	};
end;
local l__RunService__2 = v1.import(script, v1.getModule(script, "@rbxts", "services")).RunService;
local l__GameCoreClientSyncEvents__3 = v1.import(script, script.Parent.Parent.Parent.Parent, "game-core-client-events").GameCoreClientSyncEvents;
local l__Flamework__4 = v1.import(script, v1.getModule(script, "@flamework", "core").out).Flamework;
function v3.didMount(p3)
	local v4 = u1.new();
	p3.maid:GiveTask(v4);
	local function u5(p4, p5)
		p3:setState({
			onCooldown = true
		});
		v4:GiveTask(l__RunService__2.Heartbeat:Connect(function()
			p3:setState({
				progress = math.max((p5 - os.clock()) / (p5 - p4), 0)
			});
		end));
	end;
	p3.maid:GiveTask(l__GameCoreClientSyncEvents__3.CooldownStarted:connect(function(p6)
		local l__startTime__5 = p6.startTime;
		if p6.cooldownId ~= p3.props.cooldownId then
			return nil;
		end;
		u5(l__startTime__5, l__startTime__5 + p6.duration);
	end));
	p3.maid:GiveTask(l__GameCoreClientSyncEvents__3.CooldownExpired:connect(function(p7)
		if p7.cooldownId ~= p3.props.cooldownId then
			return nil;
		end;
		v4:DoCleaning();
		p3:setState({
			onCooldown = false, 
			progress = 0
		});
	end));
	local v6 = l__Flamework__4.resolveDependency("@easy-games/game-core:client/controllers/cooldown/cooldown-controller@CooldownController"):getCooldownData(p3.props.cooldownId);
	if not v6 then
		return nil;
	end;
	if os.clock() < v6.expire then
		u5(v6.startTime, v6.expire);
	end;
end;
function v3.willUnmount(p8)
	p8.maid:DoCleaning();
end;
local l__ProgressBar__6 = v1.import(script, script.Parent, "progress-bar").ProgressBar;
function v3.render(p9)
	local l__state__7 = p9.state;
	if not l__state__7.onCooldown then
		return nil;
	end;
	local v8 = l__Flamework__4.resolveDependency("@easy-games/game-core:client/controllers/cooldown/cooldown-controller@CooldownController"):getCooldownData(p9.props.cooldownId);
	if v8 ~= nil then
		v8 = v8.cooldownConfig.cooldownBar;
	end;
	local v9 = {};
	for v10, v11 in pairs(p9.props) do
		v9[v10] = v11;
	end;
	local v12 = v8;
	if v12 ~= nil then
		v12 = v12.color;
	end;
	v9.BarColor = v12;
	local v13 = v8;
	if v13 ~= nil then
		v13 = v13.colorGradient;
	end;
	v9.BarGradient = v13;
	v9.Progress = l__state__7.progress;
	v9.NoInitialTween = true;
	v9.LayoutOrder = p9.props.LayoutOrder;
	return v2.createElement(l__ProgressBar__6, v9);
end;
return {
	CooldownBar = v3
};

