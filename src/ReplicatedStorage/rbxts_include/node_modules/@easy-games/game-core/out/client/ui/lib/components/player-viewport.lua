-- Decompiled with the Synapse X Luau decompiler.

local v1 = _G[script];
local v2 = v1.import(script, v1.getModule(script, "@rbxts", "roact").src);
local v3 = v1.import(script, v1.getModule(script, "@rbxts", "services"));
local v4 = v2.Component:extend("PlayerViewport");
function v4.init(p1)
	p1.viewportRef = v2.createRef();
	p1.cameraRef = v2.createRef();
end;
local u1 = v1.import(script, v1.getModule(script, "@rbxts", "make"));
local l__Players__2 = v3.Players;
function v4.updateViewport(p2)
	local v5 = p2.viewportRef:getValue();
	if v5 == nil then
		return nil;
	end;
	local l__Kit__6 = v5:FindFirstChild("Kit");
	if l__Kit__6 ~= nil then
		l__Kit__6:Destroy();
	end;
	local v7 = nil;
	local v8 = l__Players__2.LocalPlayer;
	if v8 ~= nil then
		v8 = v8.Character;
	end;
	if v8 ~= nil then
		l__Players__2.LocalPlayer.Character:WaitForChild("HumanoidRootPart");
		l__Players__2.LocalPlayer.Character.Archivable = true;
		v7 = l__Players__2.LocalPlayer.Character:Clone();
	end;
	if not v7 then
		return nil;
	end;
	for v9, v10 in ipairs((v7:GetDescendants())) do
		if v10:IsA("LocalScript") then
			v10:Destroy();
		end;
	end;
	local l__Animation__11 = p2.props.Animation;
	if l__Animation__11 ~= "" and l__Animation__11 then
		v7.AncestryChanged:Connect(function(p3, p4)
			if p4 ~= nil and p4:IsDescendantOf(game) then
				local v12 = v7;
				if v12 ~= nil then
					v12 = v12:FindFirstChild("Humanoid");
					if v12 ~= nil then
						v12 = v12:FindFirstChild("Animator");
					end;
				end;
				local v13 = v12;
				if not v13 then
					local v14 = {};
					local v15 = v7;
					if v15 ~= nil then
						v15 = v15:FindFirstChild("Humanoid");
					end;
					v14.Parent = v15;
					v13 = u1("Animator", v14);
				end;
				local v16 = v13:LoadAnimation(u1("Animation", {
					AnimationId = p2.props.Animation
				}));
				if p2.props.AnimationSpeed ~= nil then
					v16:AdjustSpeed(p2.props.AnimationSpeed);
				end;
				v16.Looped = true;
				v16:Play();
			end;
		end);
	end;
	v7.Name = "Kit";
	v7.Parent = u1("WorldModel", {
		Name = "Kit", 
		Parent = v5
	});
	if v7.PrimaryPart then
		v7:SetPrimaryPartCFrame(CFrame.new() * CFrame.Angles(0, math.rad(-20), 0));
	else
		print("No primary part found when mounting kit model. Are your assets out of date?");
	end;
	local v17, v18 = v7:GetBoundingBox();
	local l__Position__19 = v17.Position;
	p2.cameraRef:getValue().CFrame = CFrame.new(l__Position__19 + Vector3.new(0, 0.8 * 50, (-1 * math.max(v18.X, v18.Y, v18.Z) / 1.3 - 3) * 50), l__Position__19);
	if p2.props.Rotate then
		p2:rotateKit(v7);
	end;
end;
local l__TweenService__3 = v3.TweenService;
function v4.rotateKit(p5, p6)
	if not p6.PrimaryPart then
		return nil;
	end;
	local v20 = TweenInfo.new(3, Enum.EasingStyle.Linear);
	local v21 = l__TweenService__3:Create(p6.PrimaryPart, v20, {
		CFrame = p6.PrimaryPart.CFrame * CFrame.Angles(0, math.rad(120), 0)
	});
	local v22 = l__TweenService__3:Create(p6.PrimaryPart, v20, {
		CFrame = p6.PrimaryPart.CFrame * CFrame.Angles(0, math.rad(240), 0)
	});
	local v23 = l__TweenService__3:Create(p6.PrimaryPart, v20, {
		CFrame = p6.PrimaryPart.CFrame * CFrame.Angles(0, math.rad(360), 0)
	});
	v21:Play();
	v21.Completed:Connect(function()
		v22:Play();
	end);
	v22.Completed:Connect(function()
		v23:Play();
	end);
	v23.Completed:Connect(function()
		v21:Play();
	end);
end;
function v4.didMount(p7)
	local v24 = p7.viewportRef:getValue();
	v24.Ambient = Color3.fromRGB(162, 162, 162);
	v24.LightColor = Color3.fromRGB(255, 255, 255);
	v24.LightDirection = Vector3.new(0, -1, 0);
	v24.CurrentCamera = p7.cameraRef:getValue();
	task.spawn(function()
		p7:updateViewport();
	end);
end;
function v4.didUpdate(p8, p9)
	if p8.props.Animation ~= p9.Animation then
		task.spawn(function()
			p8:updateViewport();
		end);
	end;
end;
function v4.render(p10)
	local v25 = {};
	for v26, v27 in pairs(p10.props) do
		v25[v26] = v27;
	end;
	v25[v2.Children] = nil;
	v25.Animation = nil;
	v25.AnimationSpeed = nil;
	v25.Rotate = nil;
	local v28 = {
		Size = UDim2.fromScale(1, 1), 
		BackgroundColor3 = Color3.fromRGB(0, 0, 0), 
		BorderSizePixel = 0, 
		BackgroundTransparency = 1
	};
	local v29 = p10.props.ImageTransparency;
	if v29 == nil then
		v29 = 0;
	end;
	v28.ImageTransparency = v29;
	v28[v2.Ref] = p10.viewportRef;
	for v30, v31 in pairs(v25) do
		v28[v30] = v31;
	end;
	local v32 = { v2.createElement("Camera", {
			FieldOfView = 1, 
			[v2.Ref] = p10.cameraRef
		}) };
	local v33 = #v32;
	local v34 = p10.props[v2.Children];
	if v34 then
		local v35, v36, v37 = pairs(v34);
		while true do
			local v38 = nil;
			local v39 = nil;
			v39, v38 = v35(v36, v37);
			if not v39 then
				break;
			end;
			v37 = v39;
			if type(v39) == "number" then
				v32[v33 + v39] = v38;
			else
				v32[v39] = v38;
			end;		
		end;
	end;
	return v2.createElement("ViewportFrame", v28, v32);
end;
return {
	PlayerViewport = v4
};
