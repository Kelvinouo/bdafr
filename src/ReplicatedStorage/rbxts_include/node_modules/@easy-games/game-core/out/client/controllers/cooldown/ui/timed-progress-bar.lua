-- Decompiled with the Synapse X Luau decompiler.

local v1 = _G[script];
local u1 = v1.import(script, v1.getModule(script, "@rbxts", "roact").src);
local l__RunService__2 = v1.import(script, v1.getModule(script, "@rbxts", "services")).RunService;
local l__ProgressBar__3 = v1.import(script, script.Parent, "progress-bar").ProgressBar;
return {
	TimedProgressBar = v1.import(script, v1.getModule(script, "@rbxts", "roact-hooks").src).new(u1)(function(p1, p2)
		local l__useState__2 = p2.useState;
		local v3 = {};
		for v4, v5 in pairs(p1) do
			v3[v4] = v5;
		end;
		v3.EndTime = nil;
		v3.HideOnComplete = nil;
		v3[u1.Children] = nil;
		local v6, v7 = l__useState__2(0);
		local v8, v9 = l__useState__2(false);
		p2.useEffect(function()
			v9(false);
			local u4 = 0;
			local u5 = p1.EndTime - os.time();
			local u6 = nil;
			u6 = l__RunService__2.Heartbeat:Connect(function(p3)
				u4 = u4 + p3;
				v7((math.clamp(u4 / u5, 0, 1)));
				if u5 < u4 then
					if p1.HideOnComplete then
						v9(true);
						v7(0);
					end;
					u6:Disconnect();
				end;
			end);
			return function()
				u6:Disconnect();
			end;
		end, { p1.EndTime });
		local v10 = {};
		local v11 = #v10;
		local v12 = p1[u1.Children];
		if v12 then
			local v13, v14, v15 = pairs(v12);
			while true do
				local v16 = nil;
				local v17 = nil;
				v17, v16 = v13(v14, v15);
				if not v17 then
					break;
				end;
				v15 = v17;
				if type(v17) == "number" then
					v10[v11 + v17] = v16;
				else
					v10[v17] = v16;
				end;			
			end;
		end;
		return u1.createElement(l__ProgressBar__3, {
			Progress = v6, 
			Hide = v8, 
			Size = p1.Size, 
			Position = v3.Position, 
			AnchorPoint = v3.AnchorPoint, 
			LayoutOrder = v3.LayoutOrder
		}, v10);
	end)
};
