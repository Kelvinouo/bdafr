-- Decompiled with the Synapse X Luau decompiler.

local v1 = _G[script];
local v2 = v1.import(script, script.Parent.Parent, "shared", "sound", "sound-configuration").GameCoreDefaultSoundConfiguration;
local l__GameCoreClientConfig__3 = v1.import(script, script.Parent, "config", "game-core-config").GameCoreClientConfig;
l__GameCoreClientConfig__3.Sounds = v2;
local v4 = setmetatable({}, {
	__tostring = function()
		return "GameCoreClient";
	end
});
v4.__index = v4;
function v4.new(...)
	local v5 = setmetatable({}, v4);
	return v5:constructor(...) and v5;
end;
local l__Flamework__1 = v1.import(script, v1.getModule(script, "@flamework", "core").out).Flamework;
local l__GameCoreSharedConfig__2 = v1.import(script, script.Parent.Parent, "shared", "config", "game-core-shared-config").GameCoreSharedConfig;
local u3 = v1.import(script, v1.getModule(script, "@rbxts", "object-utils"));
local l__GameTheme__4 = v1.import(script, script.Parent.Parent, "shared", "ui", "game-theme").GameTheme;
function v4.constructor(p1, p2, p3, p4)
	p1.friendsController = l__Flamework__1.resolveDependency("@easy-games/game-core:client/controllers/friends/friends-controller@FriendsController");
	l__GameCoreClientConfig__3.Production = p2;
	l__GameCoreClientConfig__3.Store = p3;
	local v6 = {};
	for v7, v8 in pairs(v2) do
		v6[v7] = v8;
	end;
	local v9 = p4;
	if v9 ~= nil then
		v9 = v9.soundConfigOverrides;
	end;
	if type(v9) == "table" then
		for v10, v11 in pairs(v9) do
			v6[v10] = v11;
		end;
	end;
	l__GameCoreClientConfig__3.Sounds = v6;
	local v12 = p4;
	if v12 ~= nil then
		v12 = v12.abilityMeta;
	end;
	local v13 = v12;
	if v13 == nil then
		v13 = {};
	end;
	l__GameCoreSharedConfig__2.AbilityMetatable = v13;
	local v14 = p4;
	if v14 ~= nil then
		v14 = v14.uiThemeOverrides;
	end;
	if v14 then
		local v15, v16, v17 = ipairs(u3.keys(p4.uiThemeOverrides));
		while true do
			v15(v16, v17);
			if not v15 then
				break;
			end;
			v17 = v15;
			if l__GameTheme__4[v16] ~= nil then
				l__GameTheme__4[v16] = p4.uiThemeOverrides[v16];
			end;		
		end;
	end;
end;
local u5 = v1.import(script, v1.getModule(script, "@rbxts", "string-utils"));
function v4.getFlameworkDependencies(p5)
	local v18 = {};
	local v19, v20, v21 = ipairs(script.Parent:FindFirstChild("controllers"):GetDescendants());
	while true do
		v19(v20, v21);
		if not v19 then
			break;
		end;
		v21 = v19;
		if v20:IsA("ModuleScript") and u5.includes(v20.Name, "controller") then
			local v22, v23, v24 = ipairs(u3.values(require(v20)));
			while true do
				v22(v23, v24);
				if not v22 then
					break;
				end;
				v24 = v22;
				table.insert(v18, v23);			
			end;
		end;	
	end;
	return v18;
end;
local l__AppController__6 = v1.import(script, script.Parent, "controllers", "app-controller").AppController;
function v4.registerApps(p6, p7)
	local v25, v26, v27 = ipairs((u3.values(p7)));
	while true do
		v25(v26, v27);
		if not v25 then
			break;
		end;
		v27 = v25;
		local v28 = l__AppController__6:registerApp(v26);	
	end;
end;
return {
	GameCoreDefaultAppConfiguration = {
		NOTIFICATIONS = {
			app = v1.import(script, script.Parent, "ui", "notifications", "notification-app").NotificationApp, 
			appId = v1.import(script, script.Parent, "ui", "types", "game-core-configuration").GameCoreAppIds.NOTIFICATIONS
		}
	}, 
	GameCoreClient = v4
};
