-- Decompiled with the Synapse X Luau decompiler.

local v1 = _G[script];
local v2 = v1.import(script, v1.getModule(script, "@flamework", "core").out);
local l__Reflect__3 = v2.Reflect;
local l__PermissionGroupBuilder__4 = v1.import(script, script.Parent.Parent.Parent.Parent, "shared", "permission", "permissions").PermissionGroupBuilder;
local l__ChatCommand__5 = v1.import(script, script.Parent, "chat-command-service").ChatCommand;
local v6 = v1.import(script, script.Parent, "command-util");
local v7 = setmetatable({}, {
	__tostring = function()
		return "TestCommand";
	end
});
v7.__index = v7;
function v7.new(...)
	local v8 = setmetatable({}, v7);
	return v8:constructor(...) and v8;
end;
function v7.constructor(p1)

end;
local l__validateArguments__1 = v6.validateArguments;
local l__CommandArgumentType__2 = v6.CommandArgumentType;
local l__Flamework__3 = v2.Flamework;
function v7.onRun(p2, p3, p4, ...)
	local v9 = l__validateArguments__1({ ... }, { {
			name = "foo", 
			type = l__CommandArgumentType__2.Number
		} });
	if v9.success ~= true then
		l__Flamework__3.resolveDependency("@easy-games/game-core:server/services/notification-service@NotificationService"):sendErrorNotification({ p3 }, {
			message = "invalid arguments for test command"
		});
		return;
	end;
	l__Flamework__3.resolveDependency("@easy-games/game-core:server/services/notification-service@NotificationService"):sendInfoNotification({ p3 }, {
		message = "test !! " .. tostring(v9.value.foo + 20)
	});
end;
l__Reflect__3.defineMetadata(v7, "identifier", "@easy-games/game-core:server/services/chat-commands/test-command@TestCommand");
l__Reflect__3.defineMetadata(v7, "flamework:implements", { "@easy-games/game-core:server/services/chat-commands/chat-command-service@OnCommandRun" });
l__Reflect__3.decorate(v7, "@easy-games/game-core:server/services/chat-commands/chat-command-service@ChatCommand", l__ChatCommand__5, { {
		aliases = { "test" }, 
		description = "testing purposes", 
		permissionGroup = l__PermissionGroupBuilder__4.everyone(), 
		hidden = false
	} });
return {
	TestCommand = v7
};
