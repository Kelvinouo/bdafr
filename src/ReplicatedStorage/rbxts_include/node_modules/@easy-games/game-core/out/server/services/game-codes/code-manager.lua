-- Decompiled with the Synapse X Luau decompiler.

local v1 = _G[script];
local v2 = {};
local u1 = v1.import(script, v1.getModule(script, "@rbxts", "mockdatastoreservice").out);
function v2.constructor(p1, p2)
	p1.Name = "CodeManager";
	p1.Client = {};
	p1.gameCodes = {};
	p1.codeGenerators = {};
	p1.datastoreKey = "Codes";
	if p2 ~= "" and p2 then
		p1.datastoreKey = p2;
	end;
	p1.codesDataStore = u1:GetDataStore(p1.datastoreKey);
end;
local l__ColorUtil__2 = v1.import(script, script.Parent.Parent.Parent.Parent, "shared", "util", "color-util").ColorUtil;
local l__GameTheme__3 = v1.import(script, script.Parent.Parent.Parent.Parent, "shared", "ui", "game-theme").GameTheme;
function v2.redeemCode(p3, p4, p5)
	p5 = string.lower((string.gsub(p5, " ", "")));
	local v3 = p3:getCode(p5);
	if not v3 then
		return {
			success = false, 
			errorMessage = "<font color=\"" .. l__ColorUtil__2.richTextColor(l__GameTheme__3.backgroundError) .. "\"><b>\240\159\154\171 Error:</b></font> <font color=\"" .. l__ColorUtil__2.richTextColor(l__GameTheme__3.mcAqua) .. "\"><b>" .. p5 .. "</b></font> is not a valid code"
		};
	end;
	local function v4()
		local v5 = v3.codeRedeemLimits;
		if v5 ~= nil then
			v5 = v5.maxRedemptions;
		end;
		local v6 = v5;
		if v6 == nil then
			v6 = 1;
		end;
		if v6 <= v3.timesRedeemed then
			return {
				success = false, 
				errorMessage = "<font color=\"" .. l__ColorUtil__2.richTextColor(l__GameTheme__3.backgroundError) .. "\"><b>\240\159\154\171 Error:</b></font> This code has reached its max amount of redemptions"
			};
		end;
		if not v3.active then
			return {
				success = false, 
				errorMessage = "<font color=\"" .. l__ColorUtil__2.richTextColor(l__GameTheme__3.backgroundError) .. "\"><b>\240\159\154\171 Error:</b></font> This code is no longer active"
			};
		end;
		local v7 = v3.codeRedeemLimits;
		if v7 ~= nil then
			v7 = v7.expiresAt;
		end;
		if v7 ~= 0 and v7 == v7 and v7 and v3.codeRedeemLimits.expiresAt <= os.time() then
			return {
				success = false, 
				errorMessage = "<font color=\"" .. l__ColorUtil__2.richTextColor(l__GameTheme__3.backgroundError) .. "\"><b>\240\159\154\171 Error:</b></font> This code has expired and can no longer be redeemed"
			};
		end;
		return {
			success = true
		};
	end;
	local v8 = v4();
	if not v8.success then
		return {
			success = false, 
			errorMessage = v8.errorMessage
		};
	end;
	local v9 = p3:verifyCode(p4, v3);
	if not v9.success then
		return {
			success = false, 
			errorMessage = v9.errorMessage
		};
	end;
	local v10 = p3.codesDataStore;
	if v10 ~= nil then
		local v11 = {};
		local u4 = nil;
		v11[1] = v10:UpdateAsync(string.upper(p5), function(p6)
			if not p6 then
				return nil, nil, nil;
			end;
			local v12 = v4();
			u4 = v12;
			if not v12.success then
				return nil, nil, nil;
			end;
			p6.timesRedeemed = p6.timesRedeemed + 1;
			return p6;
		end);
		v10 = v11;
	end;
	if nil ~= nil and not (nil).success then
		return {
			success = false, 
			errorMessage = (nil).errorMessage
		};
	end;
	local l__codeGeneratorId__13 = v3.codeGeneratorId;
	if l__codeGeneratorId__13 ~= "" and l__codeGeneratorId__13 then
		local v14 = p3:getCodeGenerator(v3.codeGeneratorId);
		if v14 then
			v14:rewardPlayer(p4, v3);
		end;
	else
		p3:onRedeemGameCode(p4, v3);
	end;
	return {
		success = true, 
		data = {
			codeType = v3.type
		}
	};
end;
function v2.getCode(p7, p8)
	local v15 = nil;
	local v16, v17, v18 = ipairs(p7.gameCodes);
	while true do
		v16(v17, v18);
		if not v16 then
			break;
		end;
		v18 = v16;
		if string.lower(v17.code) == string.lower(p8) == true then
			v15 = v17;
			break;
		end;	
	end;
	if v15 then
		return v15;
	end;
	local v19 = p7.codesDataStore;
	if v19 ~= nil then
		v19 = v19:GetAsync(string.upper(p8));
	end;
	if v19 then
		return v19;
	end;
	return nil;
end;
function v2.addGameCode(p9, p10, p11, p12)
	table.insert(p9.gameCodes, {
		code = p10, 
		type = p11, 
		createdTime = os.time(), 
		timesRedeemed = 0, 
		active = true, 
		codeRedeemLimits = p12
	});
end;
function v2.addCodeGenerator(p13, p14)
	p13.codeGenerators[p14.id] = p14;
end;
function v2.getCodeGenerator(p15, p16)
	return p15.codeGenerators[p16];
end;
function v2.getCodeGenerators(p17)
	return p17.codeGenerators;
end;
function v2.addGeneratedCodes(p18, p19)
	local v20, v21, v22 = ipairs(p19);
	while true do
		v20(v21, v22);
		if not v20 then
			break;
		end;
		v22 = v20;
		local l__codesDataStore__23 = p18.codesDataStore;
		if l__codesDataStore__23 ~= nil then
			l__codesDataStore__23:SetAsync(v21.code, v21);
		end;	
	end;
end;
function v2.verifyCode(p20, p21, p22)
	if not p20:checkRedeemedCode(p21, p22) then
		return {
			success = true
		};
	end;
	return {
		success = false, 
		errorMessage = "<font color=\"" .. l__ColorUtil__2.richTextColor(l__GameTheme__3.backgroundError) .. "\"><b>\240\159\154\171 Error:</b></font> You've already redeemed this type of code"
	};
end;
local u5 = v1.import(script, v1.getModule(script, "@rbxts", "object-utils"));
function v2.getPlayerCodeGenInfo(p23, p24)
	local v24 = u5.entries((p23:getCodeGenerators()));
	local u6 = {};
	local function v25(p25)
		local v26 = p25[2];
		if not v26:hasPermission(p24.UserId) then
			return nil;
		end;
		u6[p25[1]] = {
			codes = v26:getGeneratedCodes(p24), 
			lastRegenTime = v26:getLastGenerateTime(p24)
		};
	end;
	local v27, v28, v29 = ipairs(v24);
	while true do
		v27(v28, v29);
		if not v27 then
			break;
		end;
		v29 = v27;
		v25(v28, v27 - 1, v24);	
	end;
	return u6;
end;
return {
	CodeManager = v2
};
