-- Script Hash: 156885aab9e32c02da95656f1a4b328c5312d1f966038514d872c048a6ded0fc4856485fdd33f49881f39dc9e3c2fc6d
-- Decompiled with the Synapse X Luau decompiler.

local v1 = _G[script];
local v2 = setmetatable({}, {
	__tostring = function()
		return "GameCoreServer";
	end
});
v2.__index = v2;
function v2.new(...)
	local v3 = setmetatable({}, v2);
	return v3:constructor(...) and v3;
end;
local l__GameCoreServerConfig__1 = v1.import(script, script.Parent, "config", "game-core-server-config").GameCoreServerConfig;
local u2 = v1.import(script, script.Parent.Parent, "shared", "sound", "sound-configuration").GameCoreDefaultSoundConfiguration;
local l__GameCoreSharedConfig__3 = v1.import(script, script.Parent.Parent, "shared", "config", "game-core-shared-config").GameCoreSharedConfig;
local u4 = v1.import(script, v1.getModule(script, "@rbxts", "object-utils"));
local l__GameTheme__5 = v1.import(script, script.Parent.Parent, "shared", "ui", "game-theme").GameTheme;
function v2.constructor(p1, p2, p3, p4, p5)
	l__GameCoreServerConfig__1.Production = p2;
	l__GameCoreServerConfig__1.SessionPlaceIds = p3;
	local v4 = {};
	for v5, v6 in pairs(u2) do
		v4[v5] = v6;
	end;
	local v7 = p5;
	if v7 ~= nil then
		v7 = v7.soundConfiguration;
	end;
	if type(v7) == "table" then
		for v8, v9 in pairs(v7) do
			v4[v8] = v9;
		end;
	end;
	l__GameCoreServerConfig__1.SoundConfiguration = v4;
	l__GameCoreServerConfig__1.MetricsConfiguration = p4;
	local v10 = p5;
	if v10 ~= nil then
		v10 = v10.abilityMeta;
	end;
	local v11 = v10;
	if v11 == nil then
		v11 = {};
	end;
	l__GameCoreSharedConfig__3.AbilityMetatable = v11;
	local v12 = p5;
	if v12 ~= nil then
		v12 = v12.uiThemeOverrides;
	end;
	if v12 then
		for v13, v14 in ipairs(u4.keys(p5.uiThemeOverrides)) do
			if l__GameTheme__5[v14] ~= nil then
				l__GameTheme__5[v14] = p5.uiThemeOverrides[v14];
			end;
		end;
	end;
end;
local u6 = v1.import(script, v1.getModule(script, "@rbxts", "string-utils"));
function v2.getFlameworkDependencies(p6)
	local v15 = {};
	for v16, v17 in ipairs(script.Parent:FindFirstChild("services"):GetDescendants()) do
		if v17:IsA("ModuleScript") and u6.includes(v17.Name, "service") then
			for v18, v19 in ipairs(u4.values(require(v17))) do
				table.insert(v15, v19);
			end;
		end;
	end;
	return v15;
end;
return {
	GameCoreServer = v2
};
