-- Decompiled with the Synapse X Luau decompiler.

local v1 = {};
v1.__index = v1;
function v1.Is(p1)
	local v2 = false;
	if type(p1) == "table" then
		v2 = getmetatable(p1) == v1;
	end;
	return v2;
end;
local u1 = game:GetService("RunService"):IsServer();
local u2 = {
	boolean = "BoolValue", 
	string = "StringValue", 
	table = "RemoteEvent", 
	CFrame = "CFrameValue", 
	Color3 = "Color3Value", 
	BrickColor = "BrickColorValue", 
	number = "NumberValue", 
	Instance = "ObjectValue", 
	Ray = "RayValue", 
	Vector3 = "Vector3Value", 
	nil = "ObjectValue"
};
local u3 = require(script.Parent.Parent.Signal);
function v1.new(p2, p3)
	assert(u1, "RemoteProperty can only be created on the server");
	if p3 ~= nil then
		assert(type(p3) == "string", "OverrideClass must be a string; got " .. type(p3));
		assert(p3:match("Value$"), "OverrideClass must be of super type ValueBase (e.g. IntValue); got " .. p3);
	end;
	local v3 = typeof(p2);
	local v4 = p3 or u2[v3];
	assert(v4, "RemoteProperty does not support type \"" .. v3 .. "\"");
	local v5 = setmetatable({
		_value = p2, 
		_type = v3, 
		_isTable = v3 == "table", 
		_object = Instance.new(v4)
	}, v1);
	if v5._isTable then
		local v6 = Instance.new("RemoteFunction");
		v6.Name = "TableRequest";
		v6.Parent = v5._object;
		function v6.OnServerInvoke(p4)
			return v5._value;
		end;
		v5.Changed = u3.new();
	else
		v5.Changed = v5._object.Changed;
	end;
	v5:Set(p2);
	return v5;
end;
function v1.Replicate(p5)
	if p5._isTable then
		p5:Set(p5._value);
	end;
end;
function v1.Set(p6, p7)
	if p6._isTable then
		p6._object:FireAllClients(p7);
		p6.Changed:Fire(p7);
	else
		p6._object.Value = p7;
	end;
	p6._value = p7;
end;
function v1.Get(p8)
	return p8._value;
end;
function v1.Destroy(p9)
	p9._object:Destroy();
end;
return v1;
