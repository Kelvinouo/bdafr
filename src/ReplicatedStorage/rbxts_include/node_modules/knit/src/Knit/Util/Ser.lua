-- Script Hash: 3af1c6e8b6c4d6a4ab68c6f73c8e3799f172890515fedc8b9227deb8ae62fba87c0a70c9a4b5e16f2dad5dbd15eda690
-- Decompiled with the Synapse X Luau decompiler.

local u1 = {
	Classes = {
		Option = {
			Serialize = function(p1)
				return p1:Serialize();
			end, 
			Deserialize = require(script.Parent.Option).Deserialize
		}
	}, 
	SerializeArgs = function(...)
		local v1 = table.pack(...);
		for v2, v3 in ipairs(v1) do
			if type(v3) == "table" then
				local v4 = u1.Classes[v3.ClassName];
				if v4 then
					v1[v2] = v4.Serialize(v3);
				end;
			end;
		end;
		return v1;
	end, 
	SerializeArgsAndUnpack = function(...)
		local v5 = u1.SerializeArgs(...);
		return table.unpack(v5, 1, v5.n);
	end, 
	DeserializeArgs = function(...)
		local v6 = table.pack(...);
		for v7, v8 in ipairs(v6) do
			if type(v8) == "table" then
				local v9 = u1.Classes[v8.ClassName];
				if v9 then
					v6[v7] = v9.Deserialize(v8);
				end;
			end;
		end;
		return v6;
	end, 
	DeserializeArgsAndUnpack = function(...)
		local v10 = u1.DeserializeArgs(...);
		return table.unpack(v10, 1, v10.n);
	end, 
	Serialize = function(p2)
		if type(p2) == "table" then
			local v11 = u1.Classes[p2.ClassName];
			if v11 then
				p2 = v11.Serialize(p2);
			end;
		end;
		return p2;
	end, 
	Deserialize = function(p3)
		if type(p3) == "table" then
			local v12 = u1.Classes[p3.ClassName];
			if v12 then
				p3 = v12.Deserialize(p3);
			end;
		end;
		return p3;
	end, 
	UnpackArgs = function(p4)
		return table.unpack(p4, 1, p4.n);
	end
};
return u1;
