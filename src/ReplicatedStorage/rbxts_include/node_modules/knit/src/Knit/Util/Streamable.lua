
-- Decompiled with the Synapse X Luau decompiler.

local v1 = {};
v1.__index = v1;
local u1 = require(script.Parent.Maid);
local u2 = require(script.Parent.Signal);
function v1.new(p1, p2)
	local v2 = setmetatable({}, v1);
	v2._maid = u1.new();
	v2._shown = u2.new(v2._maid);
	v2._shownMaid = u1.new();
	v2._maid:GiveTask(v2._shownMaid);
	v2.Instance = p1:FindFirstChild(p2);
	local function u3()
		local l__Instance__3 = v2.Instance;
		v2._shown:Fire(l__Instance__3, v2._shownMaid);
		v2._shownMaid:GiveTask(l__Instance__3:GetPropertyChangedSignal("Parent"):Connect(function()
			if not l__Instance__3.Parent then
				v2._shownMaid:DoCleaning();
			end;
		end));
		v2._shownMaid:GiveTask(function()
			if v2.Instance == l__Instance__3 then
				v2.Instance = nil;
			end;
		end);
	end;
	v2._maid:GiveTask(p1.ChildAdded:Connect(function(p3)
		if p3.Name == p2 and not v2.Instance then
			v2.Instance = p3;
			u3();
		end;
	end));
	if v2.Instance then
		u3();
	end;
	return v2;
end;
local u4 = require(script.Parent.Thread);
function v1.Observe(p4, p5)
	if p4.Instance then
		u4.SpawnNow(p5, p4.Instance, p4._shownMaid);
	end;
	return p4._shown:Connect(p5);
end;
function v1.Destroy(p6)
	p6._maid:Destroy();
end;
return v1;

