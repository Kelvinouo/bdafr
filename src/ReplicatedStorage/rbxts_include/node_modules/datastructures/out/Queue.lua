-- Script Hash: ffbeb6858c815ee5d16eb697864d46d9573f3334629148cfc34b7411f20aad580682ad3739876f451f1018006dd9747c
-- Decompiled with the Synapse X Luau decompiler.

local v1 = require(script.Parent.Types);
local v2 = {
	ClassName = "Queue"
};
v2.__index = v2;
function v2.new()
	return setmetatable({
		First = 1, 
		Length = 0
	}, v2);
end;
function v2.Is(p1)
	local v3 = false;
	if type(p1) == "table" then
		v3 = getmetatable(p1) == v2;
	end;
	return v3;
end;
function v2.Push(p2, p3)
	if p3 == nil then
		error("Argument #2 to 'Queue:Push' missing or nil", 2);
	end;
	local v4 = p2.Length + 1;
	p2.Length = v4;
	local v5 = v4 + (p2.First - 1);
	p2[v5] = p3;
	return v5;
end;
function v2.Pop(p4)
	local l__Length__6 = p4.Length;
	if not (l__Length__6 > 0) then
		return nil;
	end;
	local l__First__7 = p4.First;
	p4[l__First__7] = nil;
	p4.First = l__First__7 + 1;
	p4.Length = l__Length__6 - 1;
	return p4[l__First__7];
end;
function v2.GetFront(p5)
	return p5[p5.First];
end;
function v2.GetBack(p6)
	return p6[p6.Length];
end;
v2.Back = v2.GetBack;
v2.Front = v2.GetFront;
function v2.IsEmpty(p7)
	return p7.Length == 0;
end;
local function u1(p8, p9)
	local v8 = 1;
	if p9 then
		v8 = p9 + 1;
	end;
	if p8.Length < v8 then
		return nil, nil;
	end;
	return v8, p8[p8.First + v8 - 1];
end;
function v2.Iterator(p10)
	return u1, p10;
end;
function v2.__tostring(p11)
	local v9 = table.create(p11.Length);
	for v10, v11 in p11() do
		v9[v10] = tostring(v11);
	end;
	return "Queue<[" .. table.concat(v9, ", ") .. "]>";
end;
return v2;
