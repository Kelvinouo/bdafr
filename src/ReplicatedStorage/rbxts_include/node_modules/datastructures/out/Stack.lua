-- Script Hash: f57a433ca645ff95795e4e2502807dacfdc33355a18dc9e340de56e4d68e12e262b9cf223ae42a01e6a342cf158994a1
-- Decompiled with the Synapse X Luau decompiler.

local v1 = require(script.Parent.Types);
local v2 = {
	ClassName = "Stack"
};
v2.__index = v2;
function v2.new()
	return setmetatable({
		Length = 0
	}, v2);
end;
function v2.Is(p1)
	local v3 = false;
	if type(p1) == "table" then
		v3 = getmetatable(p1) == v2;
	end;
	return v3;
end;
function v2.Push(p2, p3)
	if p3 == nil then
		error("Argument #2 to 'Stack:Push' missing or nil", 2);
	end;
	local v4 = p2.Length + 1;
	p2[v4] = p3;
	p2.Length = v4;
	return v4;
end;
function v2.Pop(p4)
	local l__Length__5 = p4.Length;
	if not (l__Length__5 > 0) then
		return nil;
	end;
	p4[l__Length__5] = nil;
	p4.Length = l__Length__5 - 1;
	return p4[l__Length__5];
end;
function v2.GetTop(p5)
	return p5[p5.Length];
end;
function v2.GetBottom(p6)
	return p6[1];
end;
v2.Bottom = v2.GetBottom;
v2.Top = v2.GetTop;
function v2.IsEmpty(p7)
	return p7.Length == 0;
end;
function v2.Iterator(p8)
	return ipairs(p8);
end;
function v2.__tostring(p9)
	local v6 = table.create(p9.Length);
	for v7, v8 in ipairs(p9) do
		v6[v7] = tostring(v8);
	end;
	return "Stack<[" .. table.concat(v6, ", ") .. "]>";
end;
return v2;
